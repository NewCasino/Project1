<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Insight.Database</name>
    </assembly>
    <members>
        <member name="T:Insight.Database.CachedDbDataReader">
            <summary>
            Reads a data stream, caching the fields for a single record at a time.
            This allows you to convert a sequential read into a random read over a single record.
            </summary>
            <remarks>Disposing this reader does not dispose the inner reader.</remarks>
        </member>
        <member name="T:Insight.Database.DbDataReaderWrapper">
            <summary>
            Reads an object list as a data reader.
            Not intended to be used directly from object code.
            </summary>
        </member>
        <member name="M:Insight.Database.DbDataReaderWrapper.GetBoolean(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbDataReaderWrapper.GetByte(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbDataReaderWrapper.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbDataReaderWrapper.GetChar(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbDataReaderWrapper.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbDataReaderWrapper.GetDateTime(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbDataReaderWrapper.GetDecimal(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbDataReaderWrapper.GetDouble(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbDataReaderWrapper.GetFloat(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbDataReaderWrapper.GetGuid(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbDataReaderWrapper.GetInt16(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbDataReaderWrapper.GetInt32(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbDataReaderWrapper.GetInt64(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbDataReaderWrapper.GetString(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbDataReaderWrapper.IsDBNull(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbDataReaderWrapper.GetDataTypeName(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.DbDataReaderWrapper.Item(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.DbDataReaderWrapper.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="F:Insight.Database.CachedDbDataReader._inner">
            <summary>
            The inner reader.
            </summary>
        </member>
        <member name="F:Insight.Database.CachedDbDataReader._cache">
            <summary>
            The cache of values for the current record.
            </summary>
        </member>
        <member name="M:Insight.Database.CachedDbDataReader.#ctor(System.Data.IDataReader)">
            <summary>
            Initializes a new instance of the CachedDbDataReader class.
            </summary>
            <param name="innerReader">The reader to wrap.</param>
        </member>
        <member name="M:Insight.Database.CachedDbDataReader.GetDataTypeName(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.CachedDbDataReader.GetFieldType(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.CachedDbDataReader.GetName(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.CachedDbDataReader.GetOrdinal(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.CachedDbDataReader.GetValue(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.CachedDbDataReader.GetValues(System.Object[])">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.CachedDbDataReader.Close">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.CachedDbDataReader.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.CachedDbDataReader.GetSchemaTable">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.CachedDbDataReader.NextResult">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.CachedDbDataReader.Read">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.CachedDbDataReader.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.CachedDbDataReader.GetValues">
            <summary>
            Read all of the values from the underlying reader.
            </summary>
        </member>
        <member name="P:Insight.Database.CachedDbDataReader.Depth">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.CachedDbDataReader.FieldCount">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.CachedDbDataReader.HasRows">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.CachedDbDataReader.IsClosed">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.CachedDbDataReader.RecordsAffected">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.CodeGenerator.StaticFieldStorage">
            <summary>
            Allows storage of a static variable in a way that can be easily emitted into IL.
            </summary>
            <remarks>
            We store the information in the static fields of a class because it is easy to access them
            in the IL of a DynamicMethod.
            </remarks>
        </member>
        <member name="F:Insight.Database.CodeGenerator.StaticFieldStorage._dynamicModule">
            <summary>
            The shared module that stores all of the static variables.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.StaticFieldStorage._fields">
            <summary>
            The cache of the static fields.
            </summary>
        </member>
        <member name="M:Insight.Database.CodeGenerator.StaticFieldStorage.#cctor">
            <summary>
            Initializes static members of the StaticFieldStorage class.
            </summary>
        </member>
        <member name="M:Insight.Database.CodeGenerator.StaticFieldStorage.EmitLoad(System.Reflection.Emit.ILGenerator,System.Object,System.Reflection.Emit.ModuleBuilder)">
            <summary>
            Emits the value stored in static storage.
            </summary>
            <param name="il">The ILGenerator to emit to.</param>
            <param name="value">The value to emit.</param>
            <param name="moduleBuilder">The module to write to or null to use the default module.</param>
        </member>
        <member name="M:Insight.Database.CodeGenerator.StaticFieldStorage.CreateField(System.Reflection.Emit.ModuleBuilder,System.Object)">
            <summary>
            Creates a static field that contains the given value.
            </summary>
            <param name="moduleBuilder">The modulebuilder to write to.</param>
            <param name="value">The value to store.</param>
            <returns>A static field containing the value.</returns>
        </member>
        <member name="T:Insight.Database.Action`5">
            <summary>
            An action that takes 5 values.
            </summary>
            <typeparam name="T1">The type of the data in the first value.</typeparam>
            <typeparam name="T2">The type of the data in the second value.</typeparam>
            <typeparam name="T3">The type of the data in the third value.</typeparam>
            <typeparam name="T4">The type of the data in the fourth value.</typeparam>
            <typeparam name="T5">The type of the data in the fifth value.</typeparam>
            <param name="arg1">The value of the first item.</param>
            <param name="arg2">The value of the second item.</param>
            <param name="arg3">The value of the third item.</param>
            <param name="arg4">The value of the fourth item.</param>
            <param name="arg5">The value of the fifth item.</param>
        </member>
        <member name="T:Insight.Database.Action`6">
            <summary>
            An action that takes 6 values.
            </summary>
            <typeparam name="T1">The type of the data in the first value.</typeparam>
            <typeparam name="T2">The type of the data in the second value.</typeparam>
            <typeparam name="T3">The type of the data in the third value.</typeparam>
            <typeparam name="T4">The type of the data in the fourth value.</typeparam>
            <typeparam name="T5">The type of the data in the fifth value.</typeparam>
            <typeparam name="T6">The type of the data in the sixth value.</typeparam>
            <param name="arg1">The value of the first item.</param>
            <param name="arg2">The value of the second item.</param>
            <param name="arg3">The value of the third item.</param>
            <param name="arg4">The value of the fourth item.</param>
            <param name="arg5">The value of the fifth item.</param>
            <param name="arg6">The value of the sixth item.</param>
        </member>
        <member name="T:Insight.Database.Action`7">
            <summary>
            An action that takes 7 values.
            </summary>
            <typeparam name="T1">The type of the data in the first value.</typeparam>
            <typeparam name="T2">The type of the data in the second value.</typeparam>
            <typeparam name="T3">The type of the data in the third value.</typeparam>
            <typeparam name="T4">The type of the data in the fourth value.</typeparam>
            <typeparam name="T5">The type of the data in the fifth value.</typeparam>
            <typeparam name="T6">The type of the data in the sixth value.</typeparam>
            <typeparam name="T7">The type of the data in the seventh value.</typeparam>
            <param name="arg1">The value of the first item.</param>
            <param name="arg2">The value of the second item.</param>
            <param name="arg3">The value of the third item.</param>
            <param name="arg4">The value of the fourth item.</param>
            <param name="arg5">The value of the fifth item.</param>
            <param name="arg6">The value of the sixth item.</param>
            <param name="arg7">The value of the seventh item.</param>
        </member>
        <member name="T:Insight.Database.Action`8">
            <summary>
            An action that takes 8 values.
            </summary>
            <typeparam name="T1">The type of the data in the first value.</typeparam>
            <typeparam name="T2">The type of the data in the second value.</typeparam>
            <typeparam name="T3">The type of the data in the third value.</typeparam>
            <typeparam name="T4">The type of the data in the fourth value.</typeparam>
            <typeparam name="T5">The type of the data in the fifth value.</typeparam>
            <typeparam name="T6">The type of the data in the sixth value.</typeparam>
            <typeparam name="T7">The type of the data in the seventh value.</typeparam>
            <typeparam name="T8">The type of the data in the eighth value.</typeparam>
            <param name="arg1">The value of the first item.</param>
            <param name="arg2">The value of the second item.</param>
            <param name="arg3">The value of the third item.</param>
            <param name="arg4">The value of the fourth item.</param>
            <param name="arg5">The value of the fifth item.</param>
            <param name="arg6">The value of the sixth item.</param>
            <param name="arg7">The value of the seventh item.</param>
            <param name="arg8">The value of the eighth item.</param>
        </member>
        <member name="T:Insight.Database.Action`9">
            <summary>
            An action that takes 9 values.
            </summary>
            <typeparam name="T1">The type of the data in the first value.</typeparam>
            <typeparam name="T2">The type of the data in the second value.</typeparam>
            <typeparam name="T3">The type of the data in the third value.</typeparam>
            <typeparam name="T4">The type of the data in the fourth value.</typeparam>
            <typeparam name="T5">The type of the data in the fifth value.</typeparam>
            <typeparam name="T6">The type of the data in the sixth value.</typeparam>
            <typeparam name="T7">The type of the data in the seventh value.</typeparam>
            <typeparam name="T8">The type of the data in the eighth value.</typeparam>
            <typeparam name="T9">The type of the data in the nineth value.</typeparam>
            <param name="arg1">The value of the first item.</param>
            <param name="arg2">The value of the second item.</param>
            <param name="arg3">The value of the third item.</param>
            <param name="arg4">The value of the fourth item.</param>
            <param name="arg5">The value of the fifth item.</param>
            <param name="arg6">The value of the sixth item.</param>
            <param name="arg7">The value of the seventh item.</param>
            <param name="arg8">The value of the eighth item.</param>
            <param name="arg9">The value of the nineth item.</param>
        </member>
        <member name="T:Insight.Database.Action`10">
            <summary>
            An action that takes 10 values.
            </summary>
            <typeparam name="T1">The type of the data in the first value.</typeparam>
            <typeparam name="T2">The type of the data in the second value.</typeparam>
            <typeparam name="T3">The type of the data in the third value.</typeparam>
            <typeparam name="T4">The type of the data in the fourth value.</typeparam>
            <typeparam name="T5">The type of the data in the fifth value.</typeparam>
            <typeparam name="T6">The type of the data in the sixth value.</typeparam>
            <typeparam name="T7">The type of the data in the seventh value.</typeparam>
            <typeparam name="T8">The type of the data in the eighth value.</typeparam>
            <typeparam name="T9">The type of the data in the nineth value.</typeparam>
            <typeparam name="T10">The type of the data in the tenth value.</typeparam>
            <param name="arg1">The value of the first item.</param>
            <param name="arg2">The value of the second item.</param>
            <param name="arg3">The value of the third item.</param>
            <param name="arg4">The value of the fourth item.</param>
            <param name="arg5">The value of the fifth item.</param>
            <param name="arg6">The value of the sixth item.</param>
            <param name="arg7">The value of the seventh item.</param>
            <param name="arg8">The value of the eighth item.</param>
            <param name="arg9">The value of the nineth item.</param>
            <param name="arg10">The value of the tenth item.</param>
        </member>
        <member name="T:Insight.Database.Action`11">
            <summary>
            An action that takes 11 values.
            </summary>
            <typeparam name="T1">The type of the data in the first value.</typeparam>
            <typeparam name="T2">The type of the data in the second value.</typeparam>
            <typeparam name="T3">The type of the data in the third value.</typeparam>
            <typeparam name="T4">The type of the data in the fourth value.</typeparam>
            <typeparam name="T5">The type of the data in the fifth value.</typeparam>
            <typeparam name="T6">The type of the data in the sixth value.</typeparam>
            <typeparam name="T7">The type of the data in the seventh value.</typeparam>
            <typeparam name="T8">The type of the data in the eighth value.</typeparam>
            <typeparam name="T9">The type of the data in the nineth value.</typeparam>
            <typeparam name="T10">The type of the data in the tenth value.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh value.</typeparam>
            <param name="arg1">The value of the first item.</param>
            <param name="arg2">The value of the second item.</param>
            <param name="arg3">The value of the third item.</param>
            <param name="arg4">The value of the fourth item.</param>
            <param name="arg5">The value of the fifth item.</param>
            <param name="arg6">The value of the sixth item.</param>
            <param name="arg7">The value of the seventh item.</param>
            <param name="arg8">The value of the eighth item.</param>
            <param name="arg9">The value of the nineth item.</param>
            <param name="arg10">The value of the tenth item.</param>
            <param name="arg11">The value of the eleventh item.</param>
        </member>
        <member name="T:Insight.Database.Action`12">
            <summary>
            An action that takes 12 values.
            </summary>
            <typeparam name="T1">The type of the data in the first value.</typeparam>
            <typeparam name="T2">The type of the data in the second value.</typeparam>
            <typeparam name="T3">The type of the data in the third value.</typeparam>
            <typeparam name="T4">The type of the data in the fourth value.</typeparam>
            <typeparam name="T5">The type of the data in the fifth value.</typeparam>
            <typeparam name="T6">The type of the data in the sixth value.</typeparam>
            <typeparam name="T7">The type of the data in the seventh value.</typeparam>
            <typeparam name="T8">The type of the data in the eighth value.</typeparam>
            <typeparam name="T9">The type of the data in the nineth value.</typeparam>
            <typeparam name="T10">The type of the data in the tenth value.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh value.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth value.</typeparam>
            <param name="arg1">The value of the first item.</param>
            <param name="arg2">The value of the second item.</param>
            <param name="arg3">The value of the third item.</param>
            <param name="arg4">The value of the fourth item.</param>
            <param name="arg5">The value of the fifth item.</param>
            <param name="arg6">The value of the sixth item.</param>
            <param name="arg7">The value of the seventh item.</param>
            <param name="arg8">The value of the eighth item.</param>
            <param name="arg9">The value of the nineth item.</param>
            <param name="arg10">The value of the tenth item.</param>
            <param name="arg11">The value of the eleventh item.</param>
            <param name="arg12">The value of the twelfth item.</param>
        </member>
        <member name="T:Insight.Database.Action`13">
            <summary>
            An action that takes 13 values.
            </summary>
            <typeparam name="T1">The type of the data in the first value.</typeparam>
            <typeparam name="T2">The type of the data in the second value.</typeparam>
            <typeparam name="T3">The type of the data in the third value.</typeparam>
            <typeparam name="T4">The type of the data in the fourth value.</typeparam>
            <typeparam name="T5">The type of the data in the fifth value.</typeparam>
            <typeparam name="T6">The type of the data in the sixth value.</typeparam>
            <typeparam name="T7">The type of the data in the seventh value.</typeparam>
            <typeparam name="T8">The type of the data in the eighth value.</typeparam>
            <typeparam name="T9">The type of the data in the nineth value.</typeparam>
            <typeparam name="T10">The type of the data in the tenth value.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh value.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth value.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth value.</typeparam>
            <param name="arg1">The value of the first item.</param>
            <param name="arg2">The value of the second item.</param>
            <param name="arg3">The value of the third item.</param>
            <param name="arg4">The value of the fourth item.</param>
            <param name="arg5">The value of the fifth item.</param>
            <param name="arg6">The value of the sixth item.</param>
            <param name="arg7">The value of the seventh item.</param>
            <param name="arg8">The value of the eighth item.</param>
            <param name="arg9">The value of the nineth item.</param>
            <param name="arg10">The value of the tenth item.</param>
            <param name="arg11">The value of the eleventh item.</param>
            <param name="arg12">The value of the twelfth item.</param>
            <param name="arg13">The value of the thirteenth item.</param>
        </member>
        <member name="T:Insight.Database.Action`14">
            <summary>
            An action that takes 14 values.
            </summary>
            <typeparam name="T1">The type of the data in the first value.</typeparam>
            <typeparam name="T2">The type of the data in the second value.</typeparam>
            <typeparam name="T3">The type of the data in the third value.</typeparam>
            <typeparam name="T4">The type of the data in the fourth value.</typeparam>
            <typeparam name="T5">The type of the data in the fifth value.</typeparam>
            <typeparam name="T6">The type of the data in the sixth value.</typeparam>
            <typeparam name="T7">The type of the data in the seventh value.</typeparam>
            <typeparam name="T8">The type of the data in the eighth value.</typeparam>
            <typeparam name="T9">The type of the data in the nineth value.</typeparam>
            <typeparam name="T10">The type of the data in the tenth value.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh value.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth value.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth value.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth value.</typeparam>
            <param name="arg1">The value of the first item.</param>
            <param name="arg2">The value of the second item.</param>
            <param name="arg3">The value of the third item.</param>
            <param name="arg4">The value of the fourth item.</param>
            <param name="arg5">The value of the fifth item.</param>
            <param name="arg6">The value of the sixth item.</param>
            <param name="arg7">The value of the seventh item.</param>
            <param name="arg8">The value of the eighth item.</param>
            <param name="arg9">The value of the nineth item.</param>
            <param name="arg10">The value of the tenth item.</param>
            <param name="arg11">The value of the eleventh item.</param>
            <param name="arg12">The value of the twelfth item.</param>
            <param name="arg13">The value of the thirteenth item.</param>
            <param name="arg14">The value of the fourteenth item.</param>
        </member>
        <member name="T:Insight.Database.Action`15">
            <summary>
            An action that takes 15 values.
            </summary>
            <typeparam name="T1">The type of the data in the first value.</typeparam>
            <typeparam name="T2">The type of the data in the second value.</typeparam>
            <typeparam name="T3">The type of the data in the third value.</typeparam>
            <typeparam name="T4">The type of the data in the fourth value.</typeparam>
            <typeparam name="T5">The type of the data in the fifth value.</typeparam>
            <typeparam name="T6">The type of the data in the sixth value.</typeparam>
            <typeparam name="T7">The type of the data in the seventh value.</typeparam>
            <typeparam name="T8">The type of the data in the eighth value.</typeparam>
            <typeparam name="T9">The type of the data in the nineth value.</typeparam>
            <typeparam name="T10">The type of the data in the tenth value.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh value.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth value.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth value.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth value.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth value.</typeparam>
            <param name="arg1">The value of the first item.</param>
            <param name="arg2">The value of the second item.</param>
            <param name="arg3">The value of the third item.</param>
            <param name="arg4">The value of the fourth item.</param>
            <param name="arg5">The value of the fifth item.</param>
            <param name="arg6">The value of the sixth item.</param>
            <param name="arg7">The value of the seventh item.</param>
            <param name="arg8">The value of the eighth item.</param>
            <param name="arg9">The value of the nineth item.</param>
            <param name="arg10">The value of the tenth item.</param>
            <param name="arg11">The value of the eleventh item.</param>
            <param name="arg12">The value of the twelfth item.</param>
            <param name="arg13">The value of the thirteenth item.</param>
            <param name="arg14">The value of the fourteenth item.</param>
            <param name="arg15">The value of the fifteenth item.</param>
        </member>
        <member name="T:Insight.Database.Action`16">
            <summary>
            An action that takes 16 values.
            </summary>
            <typeparam name="T1">The type of the data in the first value.</typeparam>
            <typeparam name="T2">The type of the data in the second value.</typeparam>
            <typeparam name="T3">The type of the data in the third value.</typeparam>
            <typeparam name="T4">The type of the data in the fourth value.</typeparam>
            <typeparam name="T5">The type of the data in the fifth value.</typeparam>
            <typeparam name="T6">The type of the data in the sixth value.</typeparam>
            <typeparam name="T7">The type of the data in the seventh value.</typeparam>
            <typeparam name="T8">The type of the data in the eighth value.</typeparam>
            <typeparam name="T9">The type of the data in the nineth value.</typeparam>
            <typeparam name="T10">The type of the data in the tenth value.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh value.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth value.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth value.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth value.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth value.</typeparam>
            <typeparam name="T16">The type of the data in the sixteenth value.</typeparam>
            <param name="arg1">The value of the first item.</param>
            <param name="arg2">The value of the second item.</param>
            <param name="arg3">The value of the third item.</param>
            <param name="arg4">The value of the fourth item.</param>
            <param name="arg5">The value of the fifth item.</param>
            <param name="arg6">The value of the sixth item.</param>
            <param name="arg7">The value of the seventh item.</param>
            <param name="arg8">The value of the eighth item.</param>
            <param name="arg9">The value of the nineth item.</param>
            <param name="arg10">The value of the tenth item.</param>
            <param name="arg11">The value of the eleventh item.</param>
            <param name="arg12">The value of the twelfth item.</param>
            <param name="arg13">The value of the thirteenth item.</param>
            <param name="arg14">The value of the fourteenth item.</param>
            <param name="arg15">The value of the fifteenth item.</param>
            <param name="arg16">The value of the sixteenth item.</param>
        </member>
        <member name="T:Insight.Database.Tuple">
            <summary>
            Provides methods to create Tuples.
            </summary>
        </member>
        <member name="M:Insight.Database.Tuple.Create``1(``0)">
            <summary>
            Creates a tuple that contains 1 items.
            </summary>
            <typeparam name="T1">The type of the data in the first item.</typeparam>
            <param name="arg1">The value of the first item.</param>
        </member>
        <member name="M:Insight.Database.Tuple.Create``2(``0,``1)">
            <summary>
            Creates a tuple that contains 2 items.
            </summary>
            <typeparam name="T1">The type of the data in the first item.</typeparam>
            <typeparam name="T2">The type of the data in the second item.</typeparam>
            <param name="arg1">The value of the first item.</param>
            <param name="arg2">The value of the second item.</param>
        </member>
        <member name="M:Insight.Database.Tuple.Create``3(``0,``1,``2)">
            <summary>
            Creates a tuple that contains 3 items.
            </summary>
            <typeparam name="T1">The type of the data in the first item.</typeparam>
            <typeparam name="T2">The type of the data in the second item.</typeparam>
            <typeparam name="T3">The type of the data in the third item.</typeparam>
            <param name="arg1">The value of the first item.</param>
            <param name="arg2">The value of the second item.</param>
            <param name="arg3">The value of the third item.</param>
        </member>
        <member name="M:Insight.Database.Tuple.Create``4(``0,``1,``2,``3)">
            <summary>
            Creates a tuple that contains 4 items.
            </summary>
            <typeparam name="T1">The type of the data in the first item.</typeparam>
            <typeparam name="T2">The type of the data in the second item.</typeparam>
            <typeparam name="T3">The type of the data in the third item.</typeparam>
            <typeparam name="T4">The type of the data in the fourth item.</typeparam>
            <param name="arg1">The value of the first item.</param>
            <param name="arg2">The value of the second item.</param>
            <param name="arg3">The value of the third item.</param>
            <param name="arg4">The value of the fourth item.</param>
        </member>
        <member name="M:Insight.Database.Tuple.Create``5(``0,``1,``2,``3,``4)">
            <summary>
            Creates a tuple that contains 5 items.
            </summary>
            <typeparam name="T1">The type of the data in the first item.</typeparam>
            <typeparam name="T2">The type of the data in the second item.</typeparam>
            <typeparam name="T3">The type of the data in the third item.</typeparam>
            <typeparam name="T4">The type of the data in the fourth item.</typeparam>
            <typeparam name="T5">The type of the data in the fifth item.</typeparam>
            <param name="arg1">The value of the first item.</param>
            <param name="arg2">The value of the second item.</param>
            <param name="arg3">The value of the third item.</param>
            <param name="arg4">The value of the fourth item.</param>
            <param name="arg5">The value of the fifth item.</param>
        </member>
        <member name="M:Insight.Database.Tuple.Create``6(``0,``1,``2,``3,``4,``5)">
            <summary>
            Creates a tuple that contains 6 items.
            </summary>
            <typeparam name="T1">The type of the data in the first item.</typeparam>
            <typeparam name="T2">The type of the data in the second item.</typeparam>
            <typeparam name="T3">The type of the data in the third item.</typeparam>
            <typeparam name="T4">The type of the data in the fourth item.</typeparam>
            <typeparam name="T5">The type of the data in the fifth item.</typeparam>
            <typeparam name="T6">The type of the data in the sixth item.</typeparam>
            <param name="arg1">The value of the first item.</param>
            <param name="arg2">The value of the second item.</param>
            <param name="arg3">The value of the third item.</param>
            <param name="arg4">The value of the fourth item.</param>
            <param name="arg5">The value of the fifth item.</param>
            <param name="arg6">The value of the sixth item.</param>
        </member>
        <member name="M:Insight.Database.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
            <summary>
            Creates a tuple that contains 7 items.
            </summary>
            <typeparam name="T1">The type of the data in the first item.</typeparam>
            <typeparam name="T2">The type of the data in the second item.</typeparam>
            <typeparam name="T3">The type of the data in the third item.</typeparam>
            <typeparam name="T4">The type of the data in the fourth item.</typeparam>
            <typeparam name="T5">The type of the data in the fifth item.</typeparam>
            <typeparam name="T6">The type of the data in the sixth item.</typeparam>
            <typeparam name="T7">The type of the data in the seventh item.</typeparam>
            <param name="arg1">The value of the first item.</param>
            <param name="arg2">The value of the second item.</param>
            <param name="arg3">The value of the third item.</param>
            <param name="arg4">The value of the fourth item.</param>
            <param name="arg5">The value of the fifth item.</param>
            <param name="arg6">The value of the sixth item.</param>
            <param name="arg7">The value of the seventh item.</param>
        </member>
        <member name="T:Insight.Database.Tuple`1">
            <summary>
            A tuple that contains 1 items.
            </summary>
            <typeparam name="T1">The type of the data in the first item.</typeparam>
        </member>
        <member name="M:Insight.Database.Tuple`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the Tuple class.
            </summary>
        </member>
        <member name="M:Insight.Database.Tuple`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Tuple`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Tuple`1.Item1">
            <summary>
            Gets or sets the value of the first item in the tuple.
            </summary>
        </member>
        <member name="T:Insight.Database.Tuple`2">
            <summary>
            A tuple that contains 2 items.
            </summary>
            <typeparam name="T1">The type of the data in the first item.</typeparam>
            <typeparam name="T2">The type of the data in the second item.</typeparam>
        </member>
        <member name="M:Insight.Database.Tuple`2.#ctor(`0,`1)">
            <summary>
            Initializes a new instance of the Tuple class.
            </summary>
        </member>
        <member name="M:Insight.Database.Tuple`2.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Tuple`2.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Tuple`2.Item1">
            <summary>
            Gets or sets the value of the first item in the tuple.
            </summary>
        </member>
        <member name="P:Insight.Database.Tuple`2.Item2">
            <summary>
            Gets or sets the value of the second item in the tuple.
            </summary>
        </member>
        <member name="T:Insight.Database.Tuple`3">
            <summary>
            A tuple that contains 3 items.
            </summary>
            <typeparam name="T1">The type of the data in the first item.</typeparam>
            <typeparam name="T2">The type of the data in the second item.</typeparam>
            <typeparam name="T3">The type of the data in the third item.</typeparam>
        </member>
        <member name="M:Insight.Database.Tuple`3.#ctor(`0,`1,`2)">
            <summary>
            Initializes a new instance of the Tuple class.
            </summary>
        </member>
        <member name="M:Insight.Database.Tuple`3.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Tuple`3.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Tuple`3.Item1">
            <summary>
            Gets or sets the value of the first item in the tuple.
            </summary>
        </member>
        <member name="P:Insight.Database.Tuple`3.Item2">
            <summary>
            Gets or sets the value of the second item in the tuple.
            </summary>
        </member>
        <member name="P:Insight.Database.Tuple`3.Item3">
            <summary>
            Gets or sets the value of the third item in the tuple.
            </summary>
        </member>
        <member name="T:Insight.Database.Tuple`4">
            <summary>
            A tuple that contains 4 items.
            </summary>
            <typeparam name="T1">The type of the data in the first item.</typeparam>
            <typeparam name="T2">The type of the data in the second item.</typeparam>
            <typeparam name="T3">The type of the data in the third item.</typeparam>
            <typeparam name="T4">The type of the data in the fourth item.</typeparam>
        </member>
        <member name="M:Insight.Database.Tuple`4.#ctor(`0,`1,`2,`3)">
            <summary>
            Initializes a new instance of the Tuple class.
            </summary>
        </member>
        <member name="M:Insight.Database.Tuple`4.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Tuple`4.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Tuple`4.Item1">
            <summary>
            Gets or sets the value of the first item in the tuple.
            </summary>
        </member>
        <member name="P:Insight.Database.Tuple`4.Item2">
            <summary>
            Gets or sets the value of the second item in the tuple.
            </summary>
        </member>
        <member name="P:Insight.Database.Tuple`4.Item3">
            <summary>
            Gets or sets the value of the third item in the tuple.
            </summary>
        </member>
        <member name="P:Insight.Database.Tuple`4.Item4">
            <summary>
            Gets or sets the value of the fourth item in the tuple.
            </summary>
        </member>
        <member name="T:Insight.Database.Tuple`5">
            <summary>
            A tuple that contains 5 items.
            </summary>
            <typeparam name="T1">The type of the data in the first item.</typeparam>
            <typeparam name="T2">The type of the data in the second item.</typeparam>
            <typeparam name="T3">The type of the data in the third item.</typeparam>
            <typeparam name="T4">The type of the data in the fourth item.</typeparam>
            <typeparam name="T5">The type of the data in the fifth item.</typeparam>
        </member>
        <member name="M:Insight.Database.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
            <summary>
            Initializes a new instance of the Tuple class.
            </summary>
        </member>
        <member name="M:Insight.Database.Tuple`5.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Tuple`5.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Tuple`5.Item1">
            <summary>
            Gets or sets the value of the first item in the tuple.
            </summary>
        </member>
        <member name="P:Insight.Database.Tuple`5.Item2">
            <summary>
            Gets or sets the value of the second item in the tuple.
            </summary>
        </member>
        <member name="P:Insight.Database.Tuple`5.Item3">
            <summary>
            Gets or sets the value of the third item in the tuple.
            </summary>
        </member>
        <member name="P:Insight.Database.Tuple`5.Item4">
            <summary>
            Gets or sets the value of the fourth item in the tuple.
            </summary>
        </member>
        <member name="P:Insight.Database.Tuple`5.Item5">
            <summary>
            Gets or sets the value of the fifth item in the tuple.
            </summary>
        </member>
        <member name="T:Insight.Database.Tuple`6">
            <summary>
            A tuple that contains 6 items.
            </summary>
            <typeparam name="T1">The type of the data in the first item.</typeparam>
            <typeparam name="T2">The type of the data in the second item.</typeparam>
            <typeparam name="T3">The type of the data in the third item.</typeparam>
            <typeparam name="T4">The type of the data in the fourth item.</typeparam>
            <typeparam name="T5">The type of the data in the fifth item.</typeparam>
            <typeparam name="T6">The type of the data in the sixth item.</typeparam>
        </member>
        <member name="M:Insight.Database.Tuple`6.#ctor(`0,`1,`2,`3,`4,`5)">
            <summary>
            Initializes a new instance of the Tuple class.
            </summary>
        </member>
        <member name="M:Insight.Database.Tuple`6.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Tuple`6.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Tuple`6.Item1">
            <summary>
            Gets or sets the value of the first item in the tuple.
            </summary>
        </member>
        <member name="P:Insight.Database.Tuple`6.Item2">
            <summary>
            Gets or sets the value of the second item in the tuple.
            </summary>
        </member>
        <member name="P:Insight.Database.Tuple`6.Item3">
            <summary>
            Gets or sets the value of the third item in the tuple.
            </summary>
        </member>
        <member name="P:Insight.Database.Tuple`6.Item4">
            <summary>
            Gets or sets the value of the fourth item in the tuple.
            </summary>
        </member>
        <member name="P:Insight.Database.Tuple`6.Item5">
            <summary>
            Gets or sets the value of the fifth item in the tuple.
            </summary>
        </member>
        <member name="P:Insight.Database.Tuple`6.Item6">
            <summary>
            Gets or sets the value of the sixth item in the tuple.
            </summary>
        </member>
        <member name="T:Insight.Database.Tuple`7">
            <summary>
            A tuple that contains 7 items.
            </summary>
            <typeparam name="T1">The type of the data in the first item.</typeparam>
            <typeparam name="T2">The type of the data in the second item.</typeparam>
            <typeparam name="T3">The type of the data in the third item.</typeparam>
            <typeparam name="T4">The type of the data in the fourth item.</typeparam>
            <typeparam name="T5">The type of the data in the fifth item.</typeparam>
            <typeparam name="T6">The type of the data in the sixth item.</typeparam>
            <typeparam name="T7">The type of the data in the seventh item.</typeparam>
        </member>
        <member name="M:Insight.Database.Tuple`7.#ctor(`0,`1,`2,`3,`4,`5,`6)">
            <summary>
            Initializes a new instance of the Tuple class.
            </summary>
        </member>
        <member name="M:Insight.Database.Tuple`7.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Tuple`7.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Tuple`7.Item1">
            <summary>
            Gets or sets the value of the first item in the tuple.
            </summary>
        </member>
        <member name="P:Insight.Database.Tuple`7.Item2">
            <summary>
            Gets or sets the value of the second item in the tuple.
            </summary>
        </member>
        <member name="P:Insight.Database.Tuple`7.Item3">
            <summary>
            Gets or sets the value of the third item in the tuple.
            </summary>
        </member>
        <member name="P:Insight.Database.Tuple`7.Item4">
            <summary>
            Gets or sets the value of the fourth item in the tuple.
            </summary>
        </member>
        <member name="P:Insight.Database.Tuple`7.Item5">
            <summary>
            Gets or sets the value of the fifth item in the tuple.
            </summary>
        </member>
        <member name="P:Insight.Database.Tuple`7.Item6">
            <summary>
            Gets or sets the value of the sixth item in the tuple.
            </summary>
        </member>
        <member name="P:Insight.Database.Tuple`7.Item7">
            <summary>
            Gets or sets the value of the seventh item in the tuple.
            </summary>
        </member>
        <member name="T:Insight.Database.SqlConstructorAttribute">
            <summary>
            Marks a constructor as the preffered constructor to use when deserializing objects from the database.
            </summary>
        </member>
        <member name="T:Insight.Database.DBConnectionExtensions">
            <summary>
            Extension methods to support asynchronous database operations.
            </summary>
            <summary>
            Extension methods to support asynchronous database operations.
            </summary>
            <summary>
            Extension methods for DbConnection to make it easier to call the database.
            </summary>
            <summary>
            Extension methods for DbConnection to make it easier to call the database.
            </summary>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ExecuteAsync(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Boolean,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command and execute it. This method supports auto-open.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of command to execute.</param>
            <param name="closeConnection">True to close the connection after the query.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ExecuteSqlAsync(System.Data.IDbConnection,System.String,System.Object,System.Boolean,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command and execute it. This method supports auto-open.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="closeConnection">True to close the connection after the query.</param>
            <param name="commandTimeout">The timeout for the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ExecuteScalarAsync``1(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Boolean,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command and execute it, returning the first column of the first row. This method supports auto-open.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of command to execute.</param>
            <param name="closeConnection">True to close the connection after the query.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
            <typeparam name="T">The type of the data to be returned.</typeparam>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ExecuteScalarSqlAsync``1(System.Data.IDbConnection,System.String,System.Object,System.Boolean,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command and execute it, returning the first column of the first row. This method supports auto-open.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="closeConnection">True to close the connection after the query.</param>
            <param name="commandTimeout">The timeout for the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
            <typeparam name="T">The type of the data to be returned.</typeparam>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryAsync``1(System.Data.IDbConnection,System.String,System.Object,Insight.Database.Structure.IQueryReader{``0},System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T">The type of object to return from the query.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="returns">The reader to use to return the data.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySqlAsync``1(System.Data.IDbConnection,System.String,System.Object,Insight.Database.Structure.IQueryReader{``0},System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T">The type of object to return from the query.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="returns">The reader to use to return the data.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryAsync(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySqlAsync(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryAsync(System.Data.IDbCommand,System.Data.CommandBehavior,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Run a command asynchronously and return a list of objects as FastExpandos. This method supports auto-open.
            The Connection property of the command should be initialized before calling this method.
            </summary>
            <param name="command">The command to execute.</param>
            <param name="commandBehavior">The command behavior.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A task that returns a list of objects as the result of the query.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryAsync``1(System.Data.IDbCommand,Insight.Database.Structure.IQueryReader{``0},System.Data.CommandBehavior,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Run a command asynchronously and return a list of objects. This method supports auto-open.
            The Connection property of the command should be initialized before calling this method.
            </summary>
            <typeparam name="T">The type of objects to return.</typeparam>
            <param name="command">The command to execute.</param>
            <param name="returns">The reader to use to return the data.</param>
            <param name="commandBehavior">The command behavior.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A task that returns a list of objects as the result of the query.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsAsync``1(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query and returns a result object.
            </summary>
            <typeparam name="T">The type of the results object to return.</typeparam>
            <param name="connection">The connection to execute on.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameters for the query.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The CommandBehavior to use.</param>
            <param name="commandTimeout">The timeout for the command.</param>
            <param name="transaction">The transaction to execute in.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <param name="outputParameters">An object to write the output parameters to.</param>
            <returns>The result of the query.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSqlAsync``1(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query and returns a result object.
            </summary>
            <typeparam name="T">The type of the results object to return.</typeparam>
            <param name="connection">The connection to execute on.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameters for the query.</param>
            <param name="commandBehavior">The CommandBehavior to use.</param>
            <param name="commandTimeout">The timeout for the command.</param>
            <param name="transaction">The transaction to execute in.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <param name="outputParameters">An object to write the output parameters to.</param>
            <returns>The result of the query.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryAsync(System.Data.IDbConnection,System.String,System.Object,System.Action{System.Data.IDataReader},System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query and performs a callback to read the data in the IDataReader.
            </summary>
            <param name="connection">The connection to execute on.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameters for the query.</param>
            <param name="read">The reader callback.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command.</param>
            <param name="commandTimeout">An optional timeout for the command.</param>
            <param name="transaction">An optiona transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A task representing the completion of the query and read operation.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySqlAsync(System.Data.IDbConnection,System.String,System.Object,System.Action{System.Data.IDataReader},System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query and performs a callback to read the data in the IDataReader.
            </summary>
            <param name="connection">The connection to execute on.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameters for the query.</param>
            <param name="read">The reader callback.</param>
            <param name="commandBehavior">The behavior of the command.</param>
            <param name="commandTimeout">An optional timeout for the command.</param>
            <param name="transaction">An optiona transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A task representing the completion of the query and read operation.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryAsync``1(System.Data.IDbConnection,System.String,System.Object,System.Func{System.Data.IDataReader,``0},System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query and performs a callback to read the data in the IDataReader.
            </summary>
            <typeparam name="T">The type returned from the reader callback.</typeparam>
            <param name="connection">The connection to execute on.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameters for the query.</param>
            <param name="read">The reader callback.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command.</param>
            <param name="commandTimeout">An optional timeout for the command.</param>
            <param name="transaction">An optiona transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A task representing the completion of the query and read operation.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySqlAsync``1(System.Data.IDbConnection,System.String,System.Object,System.Func{System.Data.IDataReader,``0},System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query and performs a callback to read the data in the IDataReader.
            </summary>
            <typeparam name="T">The type returned from the reader callback.</typeparam>
            <param name="connection">The connection to execute on.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameters for the query.</param>
            <param name="read">The reader callback.</param>
            <param name="commandBehavior">The behavior of the command.</param>
            <param name="commandTimeout">An optional timeout for the command.</param>
            <param name="transaction">An optiona transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A task representing the completion of the query and read operation.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ToListAsync(System.Data.IDataReader,System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Chain an asynchronous data reader task with a translation to a list of objects as FastExpandos.
            </summary>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">The cancellationToken to use for the operation.</param>
            <returns>A task that returns the list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ToListAsync``1(System.Data.IDataReader,Insight.Database.Structure.IRecordReader{``0},System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Chain an asynchronous data reader task with a translation to a list of objects as FastExpandos.
            </summary>
            <typeparam name="T">The type of object to deserialize from the reader.</typeparam>
            <param name="reader">The reader to read from.</param>
            <param name="recordReader">The record reader to use to read the objects.</param>
            <param name="cancellationToken">The cancellationToken to use for the operation.</param>
            <returns>A task that returns the list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ToListAsync``1(Insight.Database.Task{System.Data.IDataReader},Insight.Database.Structure.IRecordReader{``0},System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Chain an asynchronous data reader task with a translation to a list of objects as FastExpandos.
            </summary>
            <typeparam name="T">The type of object to deserialize from the reader.</typeparam>
            <param name="task">The task returning the reader to read from.</param>
            <param name="recordReader">The reader to use to read the record.</param>
            <param name="cancellationToken">The cancellationToken to use for the operation.</param>
            <returns>A task that returns the list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.InsertAsync``1(System.Data.IDbConnection,System.String,``0,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes the specified query and merges the results into the specified existing object.
            This is commonly used to retrieve identity values from the database upon an insert.
            The result set is expected to contain one record that is merged into the object upon return.
            </summary>
            <typeparam name="T">The type of the object to merge into.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="inserted">
            The object that is being inserted and should be merged.
            If null, then the results are merged into the parameters object.
            </param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A task whose completion is the object after merging the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.InsertSqlAsync``1(System.Data.IDbConnection,System.String,``0,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Asynchronously executes the specified query and merges the results into the specified existing object.
            This is commonly used to retrieve identity values from the database upon an insert.
            The result set is expected to contain one record that is merged into the object upon return.
            </summary>
            <typeparam name="T">The type of the object to merge into.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="inserted">
            The object that is being inserted and should be merged.
            If null, then the results are merged into the parameters object.
            </param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>A task whose completion is the object after merging the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.InsertListAsync``1(System.Data.IDbConnection,System.String,System.Collections.Generic.IEnumerable{``0},System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes the specified query and merges the results into the specified existing object.
            This is commonly used to retrieve identity values from the database upon an insert.
            The result set is expected to contain one record per insertedObject, in the same order as the insertedObjects.
            </summary>
            <typeparam name="T">The type of the object to merge into.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="inserted">
            The list of objects that is being inserted and should be merged.
            If null, then the results are merged into the parameters object.
            </param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A task whose completion is the list of objects after merging the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.InsertListSqlAsync``1(System.Data.IDbConnection,System.String,System.Collections.Generic.IEnumerable{``0},System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Asynchronously executes the specified query and merges the results into the specified existing object.
            This is commonly used to retrieve identity values from the database upon an insert.
            The result set is expected to contain one record per insertedObject, in the same order as the insertedObjects.
            </summary>
            <typeparam name="T">The type of the object to merge into.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="inserted">
            The list of objects that is being inserted and should be merged.
            If null, then the results are merged into the parameters object.
            </param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>A task whose completion is the list of objects after merging the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryOntoAsync``1(System.Data.IDbConnection,System.String,``0,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Asynchronously executes the specified query and merges the results into the specified existing object.
            This is the same behavior as InsertAsync.
            </summary>
            <typeparam name="T">The type of the object to merge into.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="onto">
            The list of objects to be merged onto.
            If null, then the results are merged into the parameters object.
            </param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>A task whose completion is the object after merging the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryOntoSqlAsync``1(System.Data.IDbConnection,System.String,``0,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Asynchronously executes the specified query and merges the results into the specified existing object.
            This is the same behavior as InsertAsync.
            </summary>
            <typeparam name="T">The type of the object to merge into.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="onto">
            The list of objects to be merged onto.
            If null, then the results are merged into the parameters object.
            </param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>A task whose completion is the object after merging the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryOntoListAsync``1(System.Data.IDbConnection,System.String,System.Collections.Generic.IEnumerable{``0},System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Asynchronously executes the specified query and merges the results into the specified existing object.
            This is the same behavior as InsertAsync.
            </summary>
            <typeparam name="T">The type of the object to merge into.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="onto">
            The list of objects to be merged onto.
            If null, then the results are merged into the parameters object.
            </param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>A task whose completion is the list of objects after merging the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryOntoListSqlAsync``1(System.Data.IDbConnection,System.String,System.Collections.Generic.IEnumerable{``0},System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Asynchronously executes the specified query and merges the results into the specified existing object.
            This is the same behavior as InsertAsync.
            </summary>
            <typeparam name="T">The type of the object to merge into.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="onto">
            The list of objects to be merged onto.
            If null, then the results are merged into the parameters object.
            </param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>A task whose completion is the list of objects after merging the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.MergeAsync``1(System.Data.IDataReader,``0,System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Merges the results of a recordset into an existing object.
            </summary>
            <typeparam name="T">The type of object to merge into.</typeparam>
            <param name="reader">The reader to read from.</param>
            <param name="item">The item to merge into.</param>
            <param name="cancellationToken">The cancellationToken to use for the operation.</param>
            <returns>The item that has been merged.</returns>
            <remarks>
            This method reads a single record from the reader and overwrites the values of the object.
            The reader is then advanced to the next result or disposed.
            To merge multiple records from the reader, pass an IEnumerable&lt;T&gt; to the method.
            </remarks>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.MergeAsync``1(System.Data.IDataReader,System.Collections.Generic.IEnumerable{``0},System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Merges the results of a recordset into an existing object.
            </summary>
            <typeparam name="T">The type of object to merge into.</typeparam>
            <param name="reader">The reader to read from.</param>
            <param name="items">The list of items to merge into.</param>
            <param name="cancellationToken">The cancellationToken to use for the operation.</param>
            <returns>The item that has been merged.</returns>
            <remarks>
            This method reads a single record from the reader and overwrites the values of the object.
            The reader is then advanced to the next result or disposed.
            To merge multiple records from the reader, pass an IEnumerable&lt;T&gt; to the method.
            </remarks>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.GetReaderAsync(System.Data.IDbCommand,System.Data.CommandBehavior,Insight.Database.CancellationToken)">
            <summary>
            Executes a command and returns a task that generates a SqlDataReader. This method does not support auto-open.
            </summary>
            <param name="command">The command to execute.</param>
            <param name="commandBehavior">The behavior for the command.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>A task that returns a SqlDataReader upon completion.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.BulkCopyAsync``1(System.Data.IDbConnection,System.String,System.Collections.Generic.IEnumerable{``0},System.Action{Insight.Database.InsightBulkCopy},System.Boolean,Insight.Database.InsightBulkCopyOptions,System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Bulk copy a list of objects to the server. This method supports auto-open.
            </summary>
            <typeparam name="T">The type of the objects.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="tableName">The name of the table.</param>
            <param name="list">The list of objects.</param>
            <param name="configure">A callback for initialization of the BulkCopy object. The object is provider-dependent.</param>
            <param name="closeConnection">True to close the connection when complete.</param>
            <param name="options">The options to use for the bulk copy.</param>
            <param name="transaction">An optional external transaction.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>Number of rows copied.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.BulkCopyAsync(System.Data.IDbConnection,System.String,System.Data.IDataReader,System.Action{Insight.Database.InsightBulkCopy},System.Boolean,Insight.Database.InsightBulkCopyOptions,System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Bulk copy a list of objects to the server. This method supports auto-open.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="tableName">The name of the table.</param>
            <param name="source">The list of data to read.</param>
            <param name="configure">A callback for initialization of the BulkCopy object. The object is provider-dependent.</param>
            <param name="closeConnection">True to close the connection when complete.</param>
            <param name="options">The options to use for the bulk copy.</param>
            <param name="transaction">An optional external transaction.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>Number of rows copied.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ToListAsync``1(System.Data.IDataReader,Insight.Database.Structure.IRecordReader{``0},Insight.Database.CancellationToken,System.Boolean)">
            <summary>
            Chain an asynchronous data reader task with a translation to a list of objects.
            </summary>
            <typeparam name="T">The type of object to return.</typeparam>
            <param name="reader">The data reader to read from.</param>
            <param name="recordReader">The reader to use to read the record.</param>
            <param name="cancellationToken">The cancellationToken to use for the operation.</param>
            <param name="firstRecordOnly">True to only read in the first record (for Single cases).</param>
            <returns>A task that returns the list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ExecuteAsyncAndAutoClose``1(System.Data.IDbConnection,System.Object,System.Func{System.Data.IDbConnection,System.Data.IDbCommand},System.Boolean,System.Func{System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.Task{``0}},System.Boolean,Insight.Database.CancellationToken,System.Object)">
            <summary>
            Execute an asynchronous action, ensuring that the connection is auto-closed.
            </summary>
            <typeparam name="T">The return type of the task.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="parameters">The parameters for the call.</param>
            <param name="getCommand">An action to perform to get the command to execute.</param>
            <param name="callGetReader">True to automatically get the reader from the command.</param>
            <param name="translate">An action to perform to translate the reader into results.</param>
            <param name="closeConnection">True to force the connection to close after the operation completes.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A task that returns the result of the command after closing the connection.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ExecuteAsyncAndAutoClose``1(System.Data.IDbConnection,System.Object,System.Func{System.Data.IDbConnection,System.Data.IDbCommand},System.Boolean,System.Func{System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.Task{``0}},System.Data.CommandBehavior,Insight.Database.CancellationToken,System.Object)">
            <summary>
            Execute an asynchronous action, ensuring that the connection is auto-closed.
            </summary>
            <typeparam name="T">The return type of the task.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="parameters">The parameters for the call.</param>
            <param name="getCommand">An action to perform to get the command to execute.</param>
            <param name="callGetReader">True to automatically call GetReader on the command.</param>
            <param name="translate">An action to perform to translate the reader into results.</param>
            <param name="commandBehavior">The CommandBehavior to use to execute the command.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A task that returns the result of the command after closing the connection.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.AutoOpenAsync(System.Data.IDbConnection,Insight.Database.CancellationToken)">
            <summary>
            Detect if a connection needs to be automatically opened and closed.
            </summary>
            <param name="connection">The connection to test.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>
            A task representing the completion of the open operation
            and a flag indicating whether the connection should be closed at the end of the operation.
            </returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryCoreAsyncUntyped``1(System.Data.IDbCommand,Insight.Database.Structure.IQueryReader,System.Data.CommandBehavior,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Lets us call QueryCoreAsync into a simple delegate for dynamic calls.
            </summary>
            <typeparam name="T">The type of object returned.</typeparam>
            <param name="command">The command to execute.</param>
            <param name="returns">The definition of the return structure.</param>
            <param name="commandBehavior">The commandBehavior to use.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <param name="outputParameters">Optional output parameters.</param>
            <returns>The result of the query.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryAsync``1(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySqlAsync``1(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ToListAsync``1(Insight.Database.Task{System.Data.IDataReader},System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Chain an asynchronous data reader task with a translation to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <param name="task">The data reader task to continue.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>A task that returns the list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryAsync``2(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySqlAsync``2(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ToListAsync``2(Insight.Database.Task{System.Data.IDataReader},System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Chain an asynchronous data reader task with a translation to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <param name="task">The data reader task to continue.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>A task that returns the list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryAsync``3(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySqlAsync``3(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ToListAsync``3(Insight.Database.Task{System.Data.IDataReader},System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Chain an asynchronous data reader task with a translation to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <param name="task">The data reader task to continue.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>A task that returns the list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryAsync``4(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySqlAsync``4(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ToListAsync``4(Insight.Database.Task{System.Data.IDataReader},System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Chain an asynchronous data reader task with a translation to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <param name="task">The data reader task to continue.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>A task that returns the list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryAsync``5(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySqlAsync``5(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ToListAsync``5(Insight.Database.Task{System.Data.IDataReader},System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Chain an asynchronous data reader task with a translation to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <param name="task">The data reader task to continue.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>A task that returns the list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryAsync``6(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySqlAsync``6(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ToListAsync``6(Insight.Database.Task{System.Data.IDataReader},System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Chain an asynchronous data reader task with a translation to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <param name="task">The data reader task to continue.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>A task that returns the list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryAsync``7(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySqlAsync``7(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ToListAsync``7(Insight.Database.Task{System.Data.IDataReader},System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Chain an asynchronous data reader task with a translation to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <param name="task">The data reader task to continue.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>A task that returns the list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryAsync``8(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySqlAsync``8(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ToListAsync``8(Insight.Database.Task{System.Data.IDataReader},System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Chain an asynchronous data reader task with a translation to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <param name="task">The data reader task to continue.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>A task that returns the list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryAsync``9(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySqlAsync``9(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ToListAsync``9(Insight.Database.Task{System.Data.IDataReader},System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Chain an asynchronous data reader task with a translation to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <param name="task">The data reader task to continue.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>A task that returns the list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryAsync``10(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySqlAsync``10(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ToListAsync``10(Insight.Database.Task{System.Data.IDataReader},System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Chain an asynchronous data reader task with a translation to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <param name="task">The data reader task to continue.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>A task that returns the list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryAsync``11(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySqlAsync``11(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ToListAsync``11(Insight.Database.Task{System.Data.IDataReader},System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Chain an asynchronous data reader task with a translation to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <param name="task">The data reader task to continue.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>A task that returns the list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryAsync``12(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySqlAsync``12(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ToListAsync``12(Insight.Database.Task{System.Data.IDataReader},System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Chain an asynchronous data reader task with a translation to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <param name="task">The data reader task to continue.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>A task that returns the list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryAsync``13(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySqlAsync``13(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ToListAsync``13(Insight.Database.Task{System.Data.IDataReader},System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Chain an asynchronous data reader task with a translation to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <param name="task">The data reader task to continue.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>A task that returns the list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryAsync``14(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySqlAsync``14(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ToListAsync``14(Insight.Database.Task{System.Data.IDataReader},System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Chain an asynchronous data reader task with a translation to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <param name="task">The data reader task to continue.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>A task that returns the list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryAsync``15(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySqlAsync``15(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ToListAsync``15(Insight.Database.Task{System.Data.IDataReader},System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Chain an asynchronous data reader task with a translation to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth set of data.</typeparam>
            <param name="task">The data reader task to continue.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>A task that returns the list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryAsync``16(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth set of data.</typeparam>
            <typeparam name="T16">The type of the data in the sixteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySqlAsync``16(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth set of data.</typeparam>
            <typeparam name="T16">The type of the data in the sixteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ToListAsync``16(Insight.Database.Task{System.Data.IDataReader},System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Chain an asynchronous data reader task with a translation to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth set of data.</typeparam>
            <typeparam name="T16">The type of the data in the sixteenth set of data.</typeparam>
            <param name="task">The data reader task to continue.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>A task that returns the list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsAsync``2(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>The results object filled with the data.</returns>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSqlAsync``2(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsAsync``3(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>The results object filled with the data.</returns>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSqlAsync``3(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsAsync``4(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>The results object filled with the data.</returns>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSqlAsync``4(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsAsync``5(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>The results object filled with the data.</returns>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSqlAsync``5(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsAsync``6(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>The results object filled with the data.</returns>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSqlAsync``6(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsAsync``7(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>The results object filled with the data.</returns>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSqlAsync``7(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsAsync``8(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>The results object filled with the data.</returns>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSqlAsync``8(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsAsync``9(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>The results object filled with the data.</returns>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSqlAsync``9(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsAsync``10(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>The results object filled with the data.</returns>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSqlAsync``10(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsAsync``11(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>The results object filled with the data.</returns>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSqlAsync``11(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsAsync``12(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>The results object filled with the data.</returns>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSqlAsync``12(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsAsync``13(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>The results object filled with the data.</returns>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSqlAsync``13(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsAsync``14(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>The results object filled with the data.</returns>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSqlAsync``14(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsAsync``15(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>The results object filled with the data.</returns>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSqlAsync``15(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsAsync``16(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth set of data.</typeparam>
            <typeparam name="T16">The type of the data in the sixteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <returns>The results object filled with the data.</returns>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSqlAsync``16(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Asynchronously executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth set of data.</typeparam>
            <typeparam name="T16">The type of the data in the sixteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleAsync``1(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSqlAsync``1(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleAsync``2(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSqlAsync``2(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleAsync``3(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSqlAsync``3(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleAsync``4(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSqlAsync``4(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleAsync``5(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSqlAsync``5(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleAsync``6(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSqlAsync``6(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleAsync``7(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSqlAsync``7(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleAsync``8(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSqlAsync``8(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleAsync``9(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSqlAsync``9(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleAsync``10(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSqlAsync``10(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleAsync``11(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSqlAsync``11(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleAsync``12(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSqlAsync``12(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleAsync``13(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSqlAsync``13(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleAsync``14(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSqlAsync``14(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleAsync``15(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSqlAsync``15(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleAsync``16(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth set of data.</typeparam>
            <typeparam name="T16">The type of the data in the sixteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSqlAsync``16(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Nullable{Insight.Database.CancellationToken},System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth set of data.</typeparam>
            <typeparam name="T16">The type of the data in the sixteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="cancellationToken">The CancellationToken to use for the operation or null to not use cancellation.</param>
            <param name="outputParameters">An optional additional object to output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Query``1(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySql``1(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Query``2(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySql``2(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Query``3(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySql``3(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Query``4(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySql``4(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Query``5(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySql``5(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Query``6(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySql``6(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Query``7(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySql``7(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Query``8(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySql``8(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Query``9(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySql``9(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Query``10(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySql``10(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Query``11(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySql``11(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Query``12(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySql``12(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Query``13(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySql``13(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Query``14(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySql``14(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Query``15(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySql``15(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Query``16(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth subobject.</typeparam>
            <typeparam name="T16">The type of the data in the sixteenth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySql``16(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth subobject.</typeparam>
            <typeparam name="T16">The type of the data in the sixteenth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResults``2(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSql``2(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResults``3(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSql``3(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResults``4(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSql``4(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResults``5(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSql``5(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResults``6(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSql``6(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResults``7(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSql``7(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResults``8(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSql``8(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResults``9(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSql``9(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResults``10(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSql``10(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResults``11(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSql``11(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResults``12(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSql``12(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResults``13(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSql``13(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResults``14(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSql``14(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResults``15(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSql``15(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResults``16(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth set of data.</typeparam>
            <typeparam name="T16">The type of the data in the sixteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSql``16(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query that returns multiple result sets and reads the results.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth set of data.</typeparam>
            <typeparam name="T16">The type of the data in the sixteenth set of data.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The results object filled with the data.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Single``1(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSql``1(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Single``2(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSql``2(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Single``3(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSql``3(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Single``4(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSql``4(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Single``5(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSql``5(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Single``6(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSql``6(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Single``7(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSql``7(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Single``8(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSql``8(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Single``9(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSql``9(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Single``10(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSql``10(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Single``11(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSql``11(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Single``12(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSql``12(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Single``13(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSql``13(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Single``14(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSql``14(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Single``15(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSql``15(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Single``16(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth subobject.</typeparam>
            <typeparam name="T16">The type of the data in the sixteenth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.SingleSql``16(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set. This method supports auto-open.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth subobject.</typeparam>
            <typeparam name="T16">The type of the data in the sixteenth subobject.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="F:Insight.Database.DBConnectionExtensions._tableReaders">
            <summary>
            A cache of the table schemas used for bulk copy.
            </summary>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.OpenConnection``1(``0)">
            <summary>
            Opens and returns a database connection.
            </summary>
            <param name="connection">The connection to open and return.</param>
            <typeparam name="T">The type of database connection.</typeparam>
            <returns>The opened connection.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.OpenConnectionAsync``1(``0,System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Opens and returns a database connection.
            </summary>
            <typeparam name="T">The type of database connection.</typeparam>
            <param name="connection">The connection to open and return.</param>
            <param name="cancellationToken">The cancellation token to use for the operation.</param>
            <returns>The opened connection.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.OpenAs``1(System.Data.IDbConnection)">
            <summary>
            Opens and returns a database connection that implmements the given interface.
            </summary>
            <typeparam name="T">The interface to implement.</typeparam>
            <param name="connection">The connection to open.</param>
            <returns>The connection implementing the interface.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.OpenAsAsync``1(System.Data.IDbConnection,System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Asynchronously opens and returns a database connection that implmements the given interface.
            </summary>
            <typeparam name="T">The interface to implement.</typeparam>
            <param name="connection">The connection to open.</param>
            <param name="cancellationToken">The cancellation token to use for the operation.</param>
            <returns>A task returning the connection and interface when the connection is opened.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.OpenWithTransaction(System.Data.IDbConnection)">
            <summary>
            Opens a database connection and begins a new transaction that is disposed when the returned object is disposed.
            </summary>
            <param name="connection">The connection to open.</param>
            <returns>A wrapper for the database connection.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.OpenWithTransactionAs``1(``0)">
            <summary>
            Opens a database connection implementing a given interface and begins a new transaction that is disposed when the returned object is disposed.
            </summary>
            <typeparam name="T">The interface to implement.</typeparam>
            <param name="connection">The connection to open.</param>
            <returns>A wrapper for the database connection.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.OpenWithTransactionAs``1(System.Data.IDbConnection)">
            <summary>
            Opens a database connection implementing a given interface and begins a new transaction that is disposed when the returned object is disposed.
            </summary>
            <typeparam name="T">The interface to implement.</typeparam>
            <param name="connection">The connection to open.</param>
            <returns>A wrapper for the database connection.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.OpenWithTransactionAsync(System.Data.IDbConnection,System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Asynchronously opens a database connection implementing a given interface, and begins a new transaction that is disposed when the returned object is disposed.
            </summary>
            <param name="connection">The connection to open.</param>
            <param name="cancellationToken">The cancellation token to use for the operation.</param>
            <returns>A task returning a connection when the connection has been opened.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.OpenWithTransactionAsAsync``1(``0,System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Asynchronously opens a database connection implementing a given interface, and begins a new transaction that is disposed when the returned object is disposed.
            </summary>
            <typeparam name="T">The interface to implement.</typeparam>
            <param name="connection">The connection to open.</param>
            <param name="cancellationToken">The cancellation token to use for the operation.</param>
            <returns>A task returning a connection when the connection has been opened.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.OpenWithTransactionAsAsync``1(System.Data.IDbConnection,System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Asynchronously opens a database connection implementing a given interface, and begins a new transaction that is disposed when the returned object is disposed.
            </summary>
            <typeparam name="T">The interface to implement.</typeparam>
            <param name="connection">The connection to open.</param>
            <param name="cancellationToken">The cancellation token to use for the operation.</param>
            <returns>A task returning a connection when the connection has been opened.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.CreateCommand(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Nullable{System.Int32},System.Data.IDbTransaction)">
            <summary>
            Create a DbCommand for a given Sql and parameters. This method does not support auto-open.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">Object containing the parameters to send to the database.</param>
            <param name="commandType">The type of the command text.</param>
            <param name="commandTimeout">Optinal command timeout to use.</param>
            <param name="transaction">The transaction to participate in.</param>
            <returns>An IDbCommand that can be executed on the connection.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.CreateCommandSql(System.Data.IDbConnection,System.String,System.Object,System.Nullable{System.Int32},System.Data.IDbTransaction)">
            <summary>
            Create a DbCommand for a given Sql and parameters. This method does not support auto-open.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">Object containing the parameters to send to the database.</param>
            <param name="commandTimeout">Optinal command timeout to use.</param>
            <param name="transaction">The transaction to participate in.</param>
            <returns>An IDbCommand that can be executed on the connection.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Execute(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Boolean,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command and execute it. This method supports auto-open.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="closeConnection">True to auto-close the connection on completion.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ExecuteSql(System.Data.IDbConnection,System.String,System.Object,System.Boolean,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command and execute it. This method supports auto-open.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="closeConnection">True to auto-close the connection when complete.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ExecuteScalar``1(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Boolean,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command and execute it. This method supports auto-open.
            </summary>
            <typeparam name="T">The return type of the object.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="closeConnection">True to auto-close the connection upon completion.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ExecuteScalarSql``1(System.Data.IDbConnection,System.String,System.Object,System.Boolean,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command and execute it. This method supports auto-open.
            </summary>
            <typeparam name="T">The type of object to return.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="closeConnection">True to auto-close connection on completion.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.GetReader(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction)">
            <summary>
            Create a command and execute it. This method does not support auto-open.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.GetReaderSql(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction)">
            <summary>
            Create a Sql Text command and execute it. This method does not support auto-open.
            </summary>
            <remarks>This is equivalent to calling Query with commandType = CommandType.Text.</remarks>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <returns>A data reader with the results.</returns>		
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Query``1(System.Data.IDbConnection,System.String,System.Object,Insight.Database.Structure.IQueryReader{``0},System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query and returns the results.
            </summary>
            <typeparam name="T">The type of the result of the query.</typeparam>
            <param name="connection">The connection to execute on.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameters for the query.</param>
            <param name="returns">The reader to use to read objects from the query.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The CommandBehavior to use.</param>
            <param name="commandTimeout">The timeout for the query.</param>
            <param name="transaction">The transaction to execute in.</param>
            <param name="outputParameters">An object to write output parameters into.</param>
            <returns>The result of the query.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySql``1(System.Data.IDbConnection,System.String,System.Object,Insight.Database.Structure.IQueryReader{``0},System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query and returns the results.
            </summary>
            <typeparam name="T">The type of the result of the query.</typeparam>
            <param name="connection">The connection to execute on.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameters for the query.</param>
            <param name="returns">The reader to use to read objects from the query.</param>
            <param name="commandBehavior">The CommandBehavior to use.</param>
            <param name="commandTimeout">The timeout for the query.</param>
            <param name="transaction">The transaction to execute in.</param>
            <param name="outputParameters">An object to write output parameters into.</param>
            <returns>The result of the query.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Query(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set into a FastExpando. This method supports auto-open.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySql(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Create a command, execute it, and translate the result set into a FastExpando. This method supports auto-open.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResults``1(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query and returns the results.
            </summary>
            <typeparam name="T">The type of the result of the query.</typeparam>
            <param name="connection">The connection to execute on.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameters for the query.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The CommandBehavior to use.</param>
            <param name="commandTimeout">The timeout for the query.</param>
            <param name="transaction">The transaction to execute in.</param>
            <param name="outputParameters">An object to write output parameters into.</param>
            <returns>The result of the query.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryResultsSql``1(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query and returns the results.
            </summary>
            <typeparam name="T">The type of the result of the query.</typeparam>
            <param name="connection">The connection to execute on.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameters for the query.</param>
            <param name="commandBehavior">The CommandBehavior to use.</param>
            <param name="commandTimeout">The timeout for the query.</param>
            <param name="transaction">The transaction to execute in.</param>
            <param name="outputParameters">An object to write output parameters into.</param>
            <returns>The result of the query.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Query(System.Data.IDbConnection,System.String,System.Object,System.Action{System.Data.IDataReader},System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query and performs a callback to read the data in the IDataReader.
            </summary>
            <param name="connection">The connection to execute on.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameters for the query.</param>
            <param name="read">The reader callback.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command.</param>
            <param name="commandTimeout">An optional timeout for the command.</param>
            <param name="transaction">An optional transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySql(System.Data.IDbConnection,System.String,System.Object,System.Action{System.Data.IDataReader},System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query and performs a callback to read the data in the IDataReader.
            </summary>
            <param name="connection">The connection to execute on.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameters for the query.</param>
            <param name="read">The reader callback.</param>
            <param name="commandBehavior">The behavior of the command.</param>
            <param name="commandTimeout">An optional timeout for the command.</param>
            <param name="transaction">An optional transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Query``1(System.Data.IDbConnection,System.String,System.Object,System.Func{System.Data.IDataReader,``0},System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query and performs a callback to read the data in the IDataReader.
            </summary>
            <typeparam name="T">The type of object returned from the reader callback.</typeparam>
            <param name="connection">The connection to execute on.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameters for the query.</param>
            <param name="read">The reader callback.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command.</param>
            <param name="commandTimeout">An optional timeout for the command.</param>
            <param name="transaction">An optional transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A task representing the completion of the query and read operation.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QuerySql``1(System.Data.IDbConnection,System.String,System.Object,System.Func{System.Data.IDataReader,``0},System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes a query and performs a callback to read the data in the IDataReader.
            </summary>
            <typeparam name="T">The type of object returned from the reader callback.</typeparam>
            <param name="connection">The connection to execute on.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameters for the query.</param>
            <param name="read">The reader callback.</param>
            <param name="commandBehavior">The behavior of the command.</param>
            <param name="commandTimeout">An optional timeout for the command.</param>
            <param name="transaction">An optional transaction to participate in.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>A task representing the completion of the query and read operation.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ForEach``1(System.Data.IDbConnection,System.String,System.Object,System.Action{``0},Insight.Database.Structure.IRecordReader{``0},System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction)">
            <summary>
            Executes a query and performs an action for each item in the result.
            </summary>
            <typeparam name="T">The type of object to read.</typeparam>
            <param name="connection">The connection to execute on.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameters for the query.</param>
            <param name="action">The reader callback.</param>
            <param name="returns">The reader to use to read the objects from the stream.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command.</param>
            <param name="commandTimeout">An optional timeout for the command.</param>
            <param name="transaction">An optional transaction to participate in.</param>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ForEachSql``1(System.Data.IDbConnection,System.String,System.Object,System.Action{``0},Insight.Database.Structure.IRecordReader{``0},System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction)">
            <summary>
            Executes a query and performs an action for each item in the result.
            </summary>
            <typeparam name="T">The type of object to read.</typeparam>
            <param name="connection">The connection to execute on.</param>
            <param name="sql">The sql to execute.</param>
            <param name="parameters">The parameters for the query.</param>
            <param name="action">The reader callback.</param>
            <param name="returns">The reader to use to read the objects from the stream.</param>
            <param name="commandBehavior">The behavior of the command.</param>
            <param name="commandTimeout">An optional timeout for the command.</param>
            <param name="transaction">An optional transaction to participate in.</param>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.Insert``1(System.Data.IDbConnection,System.String,``0,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes the specified query and merges the results into the specified existing object.
            This is commonly used to retrieve identity values from the database upon an insert.
            The result set is expected to contain one record that is merged into the object upon return.
            </summary>
            <typeparam name="TResult">The type of the object to merge into.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="inserted">
            The object that is being inserted and should be merged.
            If null, then the results are merged into the parameters object.
            </param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The object after merging the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.InsertSql``1(System.Data.IDbConnection,System.String,``0,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes the specified query and merges the results into the specified existing object.
            This is commonly used to retrieve identity values from the database upon an insert.
            The result set is expected to contain one record that is merged into the object upon return.
            </summary>
            <typeparam name="TResult">The type of the object to merge into.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="inserted">
            The object that is being inserted and should be merged.
            If null, then the results are merged into the parameters object.
            </param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The object after merging the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.InsertList``1(System.Data.IDbConnection,System.String,System.Collections.Generic.IEnumerable{``0},System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes the specified query and merges the results into the specified existing object.
            This is commonly used to retrieve identity values from the database upon an insert.
            The result set is expected to contain one record per insertedObject, in the same order as the insertedObjects.
            </summary>
            <typeparam name="TResult">The type of the object to merge into.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="inserted">
            The list of objects that is being inserted and should be merged.
            If null, then the results are merged into the parameters object.
            </param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The list of objects after merging the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.InsertListSql``1(System.Data.IDbConnection,System.String,System.Collections.Generic.IEnumerable{``0},System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes the specified query and merges the results into the specified existing object.
            This is commonly used to retrieve identity values from the database upon an insert.
            The result set is expected to contain one record per insertedObject, in the same order as the insertedObjects.
            </summary>
            <typeparam name="TResult">The type of the object to merge into.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="inserted">
            The list of objects that is being inserted and should be merged.
            If null, then the results are merged into the parameters object.
            </param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The list of objects after merging the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryOnto``1(System.Data.IDbConnection,System.String,``0,System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes the specified query and merges the results into the specified existing object.
            This is the same behavior as Insert.
            </summary>
            <typeparam name="TResult">The type of the object to merge into.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="onto">
            The list of objects to be merged onto.
            If null, then the results are merged into the parameters object.
            </param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The object after merging the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryOntoSql``1(System.Data.IDbConnection,System.String,``0,System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes the specified query and merges the results into the specified existing object.
            This is the same behavior as Insert.
            </summary>
            <typeparam name="TResult">The type of the object to merge into.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="onto">
            The list of objects to be merged onto.
            If null, then the results are merged into the parameters object.
            </param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The object after merging the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryOntoList``1(System.Data.IDbConnection,System.String,System.Collections.Generic.IEnumerable{``0},System.Object,System.Data.CommandType,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes the specified query and merges the results into the specified existing object.
            This is the same behavior as Insert.
            </summary>
            <typeparam name="TResult">The type of the object to merge into.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="onto">
            The list of objects to be merged onto.
            If null, then the results are merged into the parameters object.
            </param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandType">The type of the command.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The list of objects after merging the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.QueryOntoListSql``1(System.Data.IDbConnection,System.String,System.Collections.Generic.IEnumerable{``0},System.Object,System.Data.CommandBehavior,System.Nullable{System.Int32},System.Data.IDbTransaction,System.Object)">
            <summary>
            Executes the specified query and merges the results into the specified existing object.
            This is the same behavior as Insert.
            </summary>
            <typeparam name="TResult">The type of the object to merge into.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="sql">The sql to execute.</param>
            <param name="onto">
            The list of objects to be merged onto.
            If null, then the results are merged into the parameters object.
            </param>
            <param name="parameters">The parameter to pass.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="commandTimeout">The timeout of the command.</param>
            <param name="transaction">The transaction to participate in it.</param>
            <param name="outputParameters">An optional object to send the output parameters to. This may be the same as parameters.</param>
            <returns>The list of objects after merging the results.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.As``1(System.Data.IDbConnection)">
            <summary>
            Uses a DbConnection to implement an interface. Calls to the interface are automatically mapped to stored procedure calls.
            </summary>
            <typeparam name="T">The interface type to implmement.</typeparam>
            <param name="connection">The connection to use for database calls.</param>
            <returns>An implementation of the interface that executes database calls.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.As(System.Data.IDbConnection,System.Type)">
            <summary>
            Uses a DbConnection to implement an interface. Calls to the interface are automatically mapped to stored procedure calls.
            </summary>
            <param name="connection">The connection to use for database calls.</param>
            <param name="type">The type of interface to implement.</param>
            <returns>An implementation of the interface that executes database calls.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.AsParallel``1(System.Data.IDbConnection)">
            <summary>
            Creates and returns a new multi-threaded connection implementing the given interface.
            The object can support making multiple calls at the same time.
            </summary>
            <typeparam name="T">The interface to implement on the connection.</typeparam>
            <param name="connection">The connection to use as a template for opening connections. The connection will not be used.</param>
            <returns>A closed connection that implements the given interface.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.AsParallel(System.Data.IDbConnection,System.Type)">
            <summary>
            Creates and returns a new multi-threaded connection implementing the given interface.
            The object can support making multiple calls at the same time.
            </summary>
            <param name="connection">The connection to use as a template for opening connections. The connection will not be used.</param>
            <param name="type">The type of interface to implement.</param>
            <returns>A closed connection that implements the given interface.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.AsParallel``1(System.Func{System.Data.IDbConnection})">
            <summary>
            Creates and returns a new multi-threaded connection implementing the given interface.
            The object can support making multiple calls at the same time.
            </summary>
            <typeparam name="T">The interface to implement on the connection.</typeparam>
            <param name="provider">A method that provides a new instance of the DbConnection.</param>
            <returns>A closed connection that implements the given interface.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.AsParallel(System.Func{System.Data.IDbConnection},System.Type)">
            <summary>
            Creates and returns a new multi-threaded connection implementing the given interface.
            The object can support making multiple calls at the same time.
            </summary>
            <param name="provider">A method that provides a new instance of the DbConnection.</param>
            <param name="type">The type of interface to implement.</param>
            <returns>A closed connection that implements the given interface.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.BulkCopy``1(System.Data.IDbConnection,System.String,System.Collections.Generic.IEnumerable{``0},System.Action{Insight.Database.InsightBulkCopy},System.Boolean,Insight.Database.InsightBulkCopyOptions,System.Data.IDbTransaction)">
            <summary>
            Bulk copy a list of objects to the server. This method supports auto-open.
            </summary>
            <typeparam name="T">The type of the objects.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="tableName">The name of the table.</param>
            <param name="list">The list of objects.</param>
            <param name="configure">A callback for initialization of the BulkCopy object. The object is provider-dependent.</param>
            <param name="closeConnection">True to close the connection when complete.</param>
            <param name="options">The options to use for the bulk copy.</param>
            <param name="transaction">An optional external transaction.</param>
            <returns>Number of rows copied.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.BulkCopy(System.Data.IDbConnection,System.String,System.Data.IDataReader,System.Action{Insight.Database.InsightBulkCopy},System.Boolean,Insight.Database.InsightBulkCopyOptions,System.Data.IDbTransaction)">
            <summary>
            Bulk copy a list of objects to the server. This method supports auto-open.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="tableName">The name of the table.</param>
            <param name="source">The list of data to read.</param>
            <param name="configure">A callback for initialization of the BulkCopy object. The object is provider-dependent.</param>
            <param name="closeConnection">True to close the connection when complete.</param>
            <param name="options">The options to use for the bulk copy.</param>
            <param name="transaction">An optional external transaction.</param>
            <returns>Number of rows copied.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.UnwrapDbTransaction(System.Data.IDbTransaction)">
            <summary>
            Unwraps an IDbTransaction to determine its inner DbTransaction to use with advanced features.
            </summary>
            <param name="transaction">The transaction to unwrap.</param>
            <returns>The inner DbTransaction.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.DetectAutoOpen(System.Data.IDbConnection,System.Boolean@)">
            <summary>
            Detect if a connection needs to be automatically opened and closed.
            </summary>
            <param name="connection">The connection to test.</param>
            <param name="closeConnection">The closeConnection parameter to modify.</param>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ExecuteAndAutoClose``1(System.Data.IDbConnection,System.Func{System.Data.IDbConnection,System.Data.IDbCommand},System.Func{System.Data.IDbCommand,System.Data.IDataReader,``0},System.Boolean)">
            <summary>
            Executes an action on a connection, then automatically closes the connection if necessary.
            </summary>
            <typeparam name="T">The return type of the action.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="getCommand">The action to perform to get the command to execute.</param>
            <param name="translate">The action to perform to translate a command and reader into results.</param>
            <param name="closeConnection">True to force a close of the connection upon completion.</param>
            <returns>The result of the action.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ExecuteAndAutoClose``1(System.Data.IDbConnection,System.Func{System.Data.IDbConnection,System.Data.IDbCommand},System.Func{System.Data.IDbCommand,System.Data.IDataReader,``0},System.Data.CommandBehavior)">
            <summary>
            Executes an action on a connection, then automatically closes the connection if necessary.
            </summary>
            <typeparam name="T">The return type of the action.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="getCommand">The action to perform to get the command to execute.</param>
            <param name="translate">The action to perform to translate a command and reader into results.</param>
            <param name="commandBehavior">The CommandBehavior to use for the query.</param>
            <returns>The result of the action.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ExecuteAndAutoClose``1(System.Data.IDbConnection,System.Func{System.Data.IDbConnection,``0},System.Boolean)">
            <summary>
            Executes the operation, opening the connection if necessary.
            </summary>
            <typeparam name="T">The return type of the operation.</typeparam>
            <param name="connection">The connection.</param>
            <param name="action">The action to perform.</param>
            <param name="closeConnection">True to force closing the connection.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.GetObjectReader``1(System.Data.IDbConnection,System.String,System.Data.IDbTransaction,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Gets a reader that can read the list of objects into the given table. Used for bulk copy.
            </summary>
            <typeparam name="T">The type of object in the list.</typeparam>
            <param name="connection">The connection to use.</param>
            <param name="tableName">The name of the table.</param>
            <param name="transaction">The currently open transaction.</param>
            <param name="list">The list of objects.</param>
            <returns>A reader that can be streamed into the table.</returns>
        </member>
        <member name="M:Insight.Database.DBConnectionExtensions.ConvertScalar``1(System.Data.IDbCommand,System.Object,System.Object,System.Object)">
            <summary>
            Gets the results of an ExecuteScalar, including output parameters.
            </summary>
            <typeparam name="T">The type of the return value.</typeparam>
            <param name="cmd">The command that was executed.</param>
            <param name="parameters">The parameters to the command.</param>
            <param name="outputParameters">The output parameter object.</param>
            <param name="result">The result of the command.</param>
            <returns>The result of the command, converted to the given type.</returns>
        </member>
        <member name="T:Insight.Database.CodeGenerator.ClassDeserializerGenerator">
            <summary>
            Generates dynamic IL methods to deserialize an object or object graph from an IDataReader.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.ClassDeserializerGenerator._iDataReaderGetItem">
            <summary>
            The IDataReader.GetItem method. This is initialized in the class constructor.
            </summary>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ClassDeserializerGenerator.CreateDeserializer(System.Data.IDataReader,System.Type,Insight.Database.Structure.IRecordStructure,Insight.Database.CodeGenerator.SchemaMappingType)">
            <summary>
            Creates a deserializer to deserialize an object from an IDataReader.
            </summary>
            <param name="reader">The reader to analyze.</param>
            <param name="type">The type of object to deserialize from the IDataReader.</param>
            <param name="structure">The structure of the object.</param>
            <param name="mappingType">The type of mapping to create.</param>
            <returns>
            A function that takes an IDataReader and deserializes an object of type T.
            The first parameter will be an IDataReader.
            If createNewObject is true, the next parameter will be of type T.
            If useCallback is true, the next parameter will be an Action&lt;object[]&gt;.
            </returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ClassDeserializerGenerator.CreateClassDeserializer(System.Type,System.Data.IDataReader,Insight.Database.Structure.IRecordStructure,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Compiles and returns a method that deserializes class type from the subset of fields of an IDataReader record.
            </summary>
            <param name="type">The type of object to deserialize.</param>
            <param name="reader">The reader to analyze.</param>
            <param name="structure">The structure of the record being read.</param>
            <param name="startColumn">The index of the first column to read.</param>
            <param name="columnCount">The number of columns to read.</param>
            <param name="createNewObject">True if the method should create a new instance of an object, false to have the object passed in as a parameter.</param>
            <returns>If createNewObject=true, then Func&lt;IDataReader, T&gt;.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ClassDeserializerGenerator.CreateClassDeserializerDynamicMethod(System.Type,System.Data.IDataReader,Insight.Database.Structure.IRecordStructure,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Compiles and returns a method that deserializes class type from the subset of fields of an IDataReader record.
            </summary>
            <param name="type">The type of object to deserialize.</param>
            <param name="reader">The reader to analyze.</param>
            <param name="structure">The structure of the record being read.</param>
            <param name="startColumn">The index of the first column to read.</param>
            <param name="columnCount">The number of columns to read.</param>
            <param name="createNewObject">True if the method should create a new instance of an object, false to have the object passed in as a parameter.</param>
            <param name="isRootObject">True if this object is the root object and should always be created.</param>
            <param name="allowBindChild">True if the columns should be allowed to bind to children.</param>
            <returns>If createNewObject=true, then Func&lt;IDataReader, T&gt;.</returns>
            <remarks>This returns a DynamicMethod so that the graph deserializer can call the methods using IL. IL cannot call the dm after it is converted to a delegate.</remarks>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ClassDeserializerGenerator.SelectConstructor(System.Type)">
            <summary>
            Selects the constructor to use for a given type.
            </summary>
            <param name="type">The type to analyze.</param>
            <returns>The constructor to use when creating instances of the object.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ClassDeserializerGenerator.MapColumns(System.Type,System.Data.IDataReader,System.Int32,System.Int32,Insight.Database.Structure.IRecordStructure,System.Boolean)">
            <summary>
            Maps the columns.
            </summary>
            <param name="type">The type being mapped.</param>
            <param name="reader">The reader being read.</param>
            <param name="startColumn">The start column index.</param>
            <param name="columnCount">The number of columns.</param>
            <param name="structure">The record structure, which may contain custom mapping.</param>
            <param name="allowBindChild">True if the context allows binding children (e.g. Merge Outputs)</param>
            <returns>The mapping.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ClassDeserializerGenerator.CreateGraphDeserializer(System.Type[],System.Data.IDataReader,Insight.Database.Structure.IRecordStructure,System.Boolean)">
            <summary>
            Creates a deserializer for a graph of objects.
            </summary>
            <param name="subTypes">The types of the subobjects.</param>
            <param name="reader">The reader to analyze.</param>
            <param name="structure">The structure of the record we are reading.</param>
            <param name="allowBindChild">True if the columns should be allowed to bind to children.</param>
            <returns>A function that takes an IDataReader and deserializes an object of type T.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ClassDeserializerGenerator.GetFirstMatchingMethod(System.Collections.Generic.IEnumerable{Insight.Database.CodeGenerator.ClassPropInfo},System.Type)">
            <summary>
            Gets the first get/set method out of a list that has a given membertype.
            </summary>
            <param name="properties">The list of properties to look through.</param>
            <param name="type">The type to look for.</param>
            <returns>The first method that has the given type.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ClassDeserializerGenerator.CreateGraphDeserializerWithCallback(System.Type[],System.Data.IDataReader,Insight.Database.Structure.IRecordStructure,System.Boolean)">
            <summary>
            Creates a deserializer for a graph of objects. The objects are allocated to an array of objects and passed to a callback that assembles the objects.
            </summary>
            <param name="subTypes">The types of the subobjects.</param>
            <param name="reader">The reader to analyze.</param>
            <param name="structure">The structure of the record we are reading.</param>
            <param name="allowBindChild">True if the columns should be allowed to bind to children.</param>
            <returns>A function that takes an IDataReader and deserializes an object of type T.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ClassDeserializerGenerator.CreateDeserializersForSubObjects(System.Type[],System.Data.IDataReader,Insight.Database.Structure.IRecordStructure,System.Boolean)">
            <summary>
            Create the deserializers for all of the sub-object types in the graph.
            </summary>
            <param name="subTypes">The list of sub-object types to parse.</param>
            <param name="reader">The reader to analyze.</param>
            <param name="structure">The structure of the record we are reading.</param>
            <param name="allowBindChild">True if the columns should be allowed to bind to children.</param>
            <returns>An array of delegates.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ClassDeserializerGenerator.DetectEndColumn(System.Data.IDataReader,Insight.Database.Structure.IRecordStructure,System.Int32,System.Type[],System.Int32)">
            <summary>
            Detect the boundary between tOther and tNext in the reader.
            </summary>
            <param name="reader">The reader to analyze.</param>
            <param name="structure">The structure of the record we are reading.</param>
            <param name="columnIndex">The index of the next column to look at.</param>
            <param name="types">The list of types to be deserialized.</param>
            <param name="typeIndex">The index of the current type being deserialized.</param>
            <returns>The end boundary for the current object.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ClassDeserializerGenerator.CreateValueDeserializer(System.Type,System.Int32)">
            <summary>
            Create a deserializer that just reads a value.
            </summary>
            <param name="type">The type to read.</param>
            <param name="column">The index of column to read.</param>
            <returns>A method that reads the value.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ClassDeserializerGenerator.DBValueToT``1(System.Object)">
            <summary>
            Helper method to convert a database value to a given type.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="value">The database value.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Insight.Database.CodeGenerator.ClassPropInfo">
            <summary>
            Represents an accessor for a field/property of a class.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.ClassPropInfo.MemberSeparator">
            <summary>
            The string used to separate members in a parent.child.child path.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.ClassPropInfo.DefaultBindingFlags">
            <summary>
            The default binding flags to use when looking up properties.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.ClassPropInfo._mappingCache">
            <summary>
            The cache of mappings.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.ClassPropInfo._memberCache">
            <summary>
            The cache of members.
            </summary>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ClassPropInfo.#ctor(System.Reflection.MemberInfo)">
            <summary>
            Initializes a new instance of the ClassPropInfo class.
            </summary>
            <param name="memberInfo">The member to represent.</param>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ClassPropInfo.GetMappingForType(System.Type)">
            <summary>
            Returns the mapping between columns and set members.
            </summary>
            <remarks>
            The methods are normalized with an uppercase name.
            </remarks>
            <param name="type">The type to analyze.</param>
            <returns>A dictionary of set methods for a type.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ClassPropInfo.GetMembersForType(System.Type)">
            <summary>
            Returns the set of set methods (field or property) for a type.
            </summary>
            <remarks>
            The methods are normalized with an uppercase name and are ordered with properties before fields.
            </remarks>
            <param name="type">The type to analyze.</param>
            <returns>A ReadOnlyCollection of set methods for a type.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ClassPropInfo.EmitGetValue(System.Reflection.Emit.ILGenerator)">
            <summary>
            Emit a call to get the value.
            </summary>
            <param name="il">The IL generator to use.</param>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ClassPropInfo.EmitSetValue(System.Reflection.Emit.ILGenerator)">
            <summary>
            Emit a call to get the value.
            </summary>
            <param name="il">The IL generator to use.</param>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ClassPropInfo.CreateGetMethod``2">
            <summary>
            Creates a method that gets the property from the object.
            </summary>
            <typeparam name="TObject">The type of the object.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <returns>An accessor function.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ClassPropInfo.CreateSetMethod``2">
            <summary>
            Creates a method that sets the property from the object.
            </summary>
            <typeparam name="TObject">The type of the object.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <returns>An accessor function.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ClassPropInfo.SearchForMatchingField(System.Type,System.String,Insight.Database.Mapping.MappingCollection)">
            <summary>
            Searches the type and child types for a field that matches the given column name.
            </summary>
            <param name="type">The type to search.</param>
            <param name="columnName">The column to search for.</param>
            <param name="mappingCollection">The mapping collection containing the configuration for this context.</param>
            <returns>The name of the field or null if there is no match.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ClassPropInfo.GetMemberByColumnName(System.Type,System.String)">
            <summary>
            Gets the member from a type, searching for column name.
            </summary>
            <param name="type">The type to search.</param>
            <param name="columnName">The column name of the member.</param>
            <returns>The member or null if not found.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ClassPropInfo.GetMemberByName(System.Type,System.String)">
            <summary>
            Gets the member from a type, searching by field name.
            </summary>
            <param name="type">The type to search.</param>
            <param name="memberName">The name of the member.</param>
            <returns>The member or null if not found.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ClassPropInfo.FindMember(System.Type,System.String)">
            <summary>
            Gets the member from a type, allowing dot accessors to select children.
            </summary>
            <param name="type">The type to search.</param>
            <param name="memberName">The name of the member in the form a.b.c.d.</param>
            <returns>The member or null if not found.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ClassPropInfo.EmitGetValue(System.Type,System.String,System.Reflection.Emit.ILGenerator,System.Nullable{System.Reflection.Emit.Label})">
            <summary>
            Emits the code to get a value from a type, allowing dot accessors to select children.
            </summary>
            <param name="type">The base type.</param>
            <param name="memberName">The name of the member in the form a.b.c.d.</param>
            <param name="il">The ILGenerator to use,</param>
            <param name="readyToSetLabel">The label to jump to if any of the non-terminal accesses result (a.b.c) in null.</param>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ClassPropInfo.SplitMemberName(System.String)">
            <summary>
            Splits the member name on dots.
            </summary>
            <param name="memberName">The member name to split.</param>
            <returns>The parts of the member name.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ClassPropInfo.GetMemberPrefix(System.String)">
            <summary>
            Splits a member name on dots and returns the prefix to the member.
            </summary>
            <param name="memberName">The name of the member.</param>
            <returns>The prefix.</returns>
        </member>
        <member name="P:Insight.Database.CodeGenerator.ClassPropInfo.ColumnName">
            <summary>
            Gets the name of the database column associated with the property.
            </summary>
        </member>
        <member name="P:Insight.Database.CodeGenerator.ClassPropInfo.Name">
            <summary>
            Gets the name of the property.
            </summary>
        </member>
        <member name="P:Insight.Database.CodeGenerator.ClassPropInfo.MemberType">
            <summary>
            Gets the type of the member this is bound to.
            </summary>
            <value>The type this member is bound to.</value>
        </member>
        <member name="P:Insight.Database.CodeGenerator.ClassPropInfo.GetMethodInfo">
            <summary>
            Gets the MethodInfo this is bound to, if a property.
            </summary>
            <value>The MethodInfo this is bound to.</value>
        </member>
        <member name="P:Insight.Database.CodeGenerator.ClassPropInfo.SetMethodInfo">
            <summary>
            Gets the SetMethodInfo this is bound to, if a property.
            </summary>
            <value>The MethodInfo this is bound to.</value>
        </member>
        <member name="P:Insight.Database.CodeGenerator.ClassPropInfo.FieldInfo">
            <summary>
            Gets the FieldInfo this is bound to, if a field.
            </summary>
            <value>The FieldInfo this is bound to.</value>
        </member>
        <member name="P:Insight.Database.CodeGenerator.ClassPropInfo.MemberInfo">
            <summary>
            Gets the MemberInfo for this member.
            </summary>
            <value>The MemberInfo this is bound to.</value>
        </member>
        <member name="P:Insight.Database.CodeGenerator.ClassPropInfo.CanSetMember">
            <summary>
            Gets a value indicating whether the member can be set.
            </summary>
        </member>
        <member name="P:Insight.Database.CodeGenerator.ClassPropInfo.CanGetMember">
            <summary>
            Gets a value indicating whether the member can be gotten.
            </summary>
        </member>
        <member name="P:Insight.Database.CodeGenerator.ClassPropInfo.SerializationMode">
            <summary>
            Gets the serialization mode defined for the field.
            </summary>
        </member>
        <member name="P:Insight.Database.CodeGenerator.ClassPropInfo.Serializer">
            <summary>
            Gets the custom serializer defined for the field.
            </summary>
        </member>
        <member name="P:Insight.Database.CodeGenerator.ClassPropInfo.Type">
            <summary>
            Gets or sets the type that this is bound to.
            </summary>
        </member>
        <member name="P:Insight.Database.CodeGenerator.ClassPropInfo.ColumnNameIsOverridden">
            <summary>
            Gets a value indicating whether the column name has been overridden.
            </summary>
        </member>
        <member name="T:Insight.Database.CodeGenerator.InterfaceGenerator">
            <summary>
            Implements a given interface by binding to the extension methods on DbConnection.
            </summary>
        </member>
        <member name="M:Insight.Database.CodeGenerator.InterfaceGenerator.#cctor">
            <summary>
            Initializes static members of the InterfaceGenerator class.
            </summary>
        </member>
        <member name="M:Insight.Database.CodeGenerator.InterfaceGenerator.GetImplementorOf(System.Type,System.Func{System.Data.IDbConnection},System.Boolean)">
            <summary>
            Gets an implementor of an interface that can handle multiple concurrent calls.
            </summary>
            <param name="type">The interface to implmement.</param>
            <param name="connectionProvider">A provider of a connection to wrap.</param>
            <param name="singleThreaded">True to get a single-threaded implementation.</param>
            <returns>An implmementor of the given interface.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.InterfaceGenerator.CreateImplementorOf(System.Type,System.Boolean)">
            <summary>
            Creates an implementation of the given type.
            If the type is an interface, the implementation is derived from DbConnectionWrapper.
            If the type is an abstract class, the implementation is derived from the class and the abstract methods are auto-implemented.
            </summary>
            <param name="type">The type to implement.</param>
            <param name="singleThreaded">True to create a single-threaded implementation.</param>
            <returns>A construction function that takes a connection provider and returns the implementation.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.InterfaceGenerator.EmitConstructor(System.Reflection.Emit.TypeBuilder,System.Reflection.Emit.FieldBuilder,System.Boolean)">
            <summary>
            Emits the constructor for the type.
            </summary>
            <param name="tb">The type we are implementing.</param>
            <param name="connectionField">The field containing the connection to use.</param>
            <param name="singleThreaded">True for a single-threaded implementation.</param>
            <returns>The constructor.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.InterfaceGenerator.EmitGetConnection(System.Reflection.Emit.TypeBuilder,System.Type,System.Reflection.Emit.FieldBuilder)">
            <summary>
            Emits a GetConnection method if the class needs one.
            </summary>
            <param name="tb">The TypeBuilder.</param>
            <param name="baseType">The type being implemented.</param>
            <param name="connectionField">The field containing the connection provider.</param>
            <returns>The GetConnection MethodInfo from the base class.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.InterfaceGenerator.DiscoverMethods(System.Type)">
            <summary>
            Finds all of the methods on a given interface.
            </summary>
            <param name="type">The type to explore.</param>
            <returns>All of the methods defined on the interface.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.InterfaceGenerator.EmitMethodImpl(System.Reflection.Emit.TypeBuilder,System.Reflection.MethodInfo,System.Reflection.Emit.FieldBuilder)">
            <summary>
            Emits an implementation of a given method.
            </summary>
            <param name="tb">The TypeBuilder to emit to.</param>
            <param name="interfaceMethod">The interface method to implement.</param>
            <param name="connectionField">The fields storing the connection to the database.</param>
        </member>
        <member name="M:Insight.Database.CodeGenerator.InterfaceGenerator.TypeIsSingleReader(System.Type)">
            <summary>
            Determines if the given type is a single reader.
            </summary>
            <param name="type">The type to inspect.</param>
            <returns>True if the type is a single reader.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.InterfaceGenerator.EmitOutputParameters(System.Reflection.ParameterInfo[],System.Reflection.Emit.LocalBuilder,System.Reflection.Emit.ILGenerator)">
            <summary>
            Copies fields from the temporary output parameters structure to the output parameters object specified by the caller.
            </summary>
            <param name="parameters">The list of parameters.</param>
            <param name="parameterWrapper">The local variable for the temporary object.</param>
            <param name="mIL">The ILGenerator to use.</param>
        </member>
        <member name="M:Insight.Database.CodeGenerator.InterfaceGenerator.GetExecuteMethod(System.Reflection.MethodInfo)">
            <summary>
            Determines the proper connection extension method to call to implement the interface method.
            </summary>
            <param name="method">The interface method to analyze.</param>
            <returns>The extension method that can implement the given method.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.InterfaceGenerator.GetExecuteAsyncMethod(System.Reflection.MethodInfo)">
            <summary>
            Determines the proper connection extension method to call to implement the interface method when the return type is a task.
            </summary>
            <param name="method">The interface method to analyze.</param>
            <returns>The extension method that can implement the given method.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.InterfaceGenerator.IsMethodAnUpsert(System.Reflection.MethodInfo)">
            <summary>
            Determines whether a method is an insert/upsert and should have its outputs reflected back onto the inputs.
            </summary>
            <param name="method">The method to test.</param>
            <returns>True if the method is an insert or upsert.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.InterfaceGenerator.CreateParameterClass(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Reflection.ParameterInfo})">
            <summary>
            Creates an anonymous class to hold the parameters to the execute call.
            This allows us to pass in the exact same objects as in our dynamic methods.
            </summary>
            <param name="method">The method being emitted.</param>
            <param name="parameters">The list of parameters to capture.</param>
            <returns>An anonymous wrapper class for the parameters.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.InterfaceGenerator.IsGenericListType(System.Type)">
            <summary>
            Returns true if the type represents a generic of a list.
            Used to determine if the type represents a result set.
            </summary>
            <param name="type">The type to inspect.</param>
            <returns>True if it is a list type.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.InterfaceGenerator.IsSpecialParameter(System.Reflection.ParameterInfo)">
            <summary>
            Returns true if the parameter is a parameter that should be handled specially.
            </summary>
            <param name="parameterInfo">Information about the parameter.</param>
            <returns>True if the parameter is a special parameter, false otherwise.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.InterfaceGenerator.EmitSpecialParameter(System.Reflection.Emit.ILGenerator,System.String,System.Reflection.ParameterInfo[],System.Reflection.ParameterInfo[])">
            <summary>
            Attempts to emit the code to push a special parameter by looking it up in the interface parameters.
            If the parameter is defined, this emits a Ldarg operation.
            </summary>
            <param name="il">The ILGenerator to use.</param>
            <param name="parameterName">The name of the special parameter.</param>
            <param name="interfaceParameters">The parameters on the interface method.</param>
            <param name="executeParameters">The parameters on the execute method.</param>
            <returns>True if a parameter was emitted.</returns>
        </member>
        <member name="T:Insight.Database.CodeGenerator.ObjectReader">
            <summary>
            Encapsulates the information needed to read from an object list into a given schema.
            Not intended to be used by application code.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.ObjectReader._readerDataCache">
            <summary>
            Global cache of accessors.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.ObjectReader._memberTypes">
            <summary>
            Gets an array containing the types of the members of the given type.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.ObjectReader._accessors">
            <summary>
            Gets an array of methods that can be called to access private members of the given type.
            </summary>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ObjectReader.#ctor(System.Data.IDbCommand,System.Type,System.Data.IDataReader)">
            <summary>
            Initializes a new instance of the ObjectReader class.
            </summary>
            <param name="command">The command associated with the reader.</param>
            <param name="type">The type of object to read.</param>
            <param name="reader">The reader that contains the schema.</param>
            <returns>A list of accessor functions to get values from the type.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ObjectReader.GetObjectReader(System.Data.IDbCommand,System.Data.IDataReader,System.Type)">
            <summary>
            Returns an object reader for the given type that matches the given schema.
            </summary>
            <param name="command">The command associated with the reader.</param>
            <param name="reader">The reader containing the schema to analyze.</param>
            <param name="type">The type to analyze.</param>
            <returns>An ObjectReader for the schema and type.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ObjectReader.GetName(System.Int32)">
            <summary>
            Returns the name of the column with the given ordinal.
            </summary>
            <param name="ordinal">The ordinal to look up.</param>
            <returns>The name of the column, or null if there is no mapping.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ObjectReader.GetOrdinal(System.String)">
            <summary>
            Returns the ordinal of the first column with the given name.
            </summary>
            <param name="name">The name to look up.</param>
            <returns>The matching ordinal.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ObjectReader.GetType(System.Int32)">
            <summary>
            Returns the type of the column with the given ordinal.
            </summary>
            <param name="ordinal">The ordinal to look up.</param>
            <returns>The type of the column, or null if there is no mapping.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ObjectReader.GetAccessor(System.Int32)">
            <summary>
            Returns a delegate that can access the given data point on an object.
            </summary>
            <param name="ordinal">The ordinal to look up.</param>
            <returns>A delegate that can return the given column.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ObjectReader.SerializeObject(System.Object,System.Type,Insight.Database.IDbObjectSerializer)">
            <summary>
            Serializes an object. This is a stub method that reorders parameters.
            </summary>
            <param name="value">The value to serialize.</param>
            <param name="type">The type to serialize.</param>
            <param name="serializer">The serializer to use.</param>
            <returns>The serialized object.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ObjectReader.FixupSchemaNumericScale">
            <summary>
            SQL Server tells us the precision of the columns
            but the TDS parser doesn't like the ones set on money, smallmoney and date
            so we have to override them
            </summary>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ObjectReader.FixupSchemaRemoveReadOnlyColumns(System.Collections.Generic.List{Insight.Database.Mapping.FieldMapping})">
            <summary>
            Fix the schema by removing any readonly columns and adjusting the column ordinal.
            </summary>
            <param name="mappings">A list of field mappings to adjust with the schema.</param>
        </member>
        <member name="P:Insight.Database.CodeGenerator.ObjectReader.SchemaTable">
            <summary>
            Gets a DataTable containing the expected schema for the type.
            </summary>
        </member>
        <member name="P:Insight.Database.CodeGenerator.ObjectReader.IsAtomicType">
            <summary>
            Gets a value indicating whether the given type is a value type.
            </summary>
        </member>
        <member name="T:Insight.Database.CodeGenerator.SchemaIdentity">
            <summary>
            An identity for the schema of a reader.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.SchemaIdentity._hashCode">
            <summary>
            The pre-calculated hashcode.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.SchemaIdentity._columns">
            <summary>
            The list of columns in the schema as a Tuple of string + Type + IsNullable + IsReadOnly + IsIdentity.
            </summary>
        </member>
        <member name="M:Insight.Database.CodeGenerator.SchemaIdentity.#ctor(System.Data.IDataReader)">
            <summary>
            Initializes a new instance of the SchemaIdentity class.
            </summary>
            <param name="reader">The reader to construct from.</param>
        </member>
        <member name="M:Insight.Database.CodeGenerator.SchemaIdentity.GetHashCode">
            <summary>
            Returns the hash code for the identity.
            </summary>
            <returns>The hash code for the identity.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.SchemaIdentity.Equals(System.Object)">
            <summary>
            Determines if this is equal to another object.
            </summary>
            <param name="obj">The object to test against.</param>
            <returns>True if the objects are equal.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.SchemaIdentity.Equals(Insight.Database.CodeGenerator.SchemaIdentity)">
            <summary>
            Determines if this is equal to another object.
            </summary>
            <param name="other">The object to test against.</param>
            <returns>True if the objects are equal.</returns>
        </member>
        <member name="T:Insight.Database.CodeGenerator.SchemaIdentity.ColumnIdentity">
            <summary>
            Represents a column identity.
            </summary>
        </member>
        <member name="M:Insight.Database.CodeGenerator.SchemaIdentity.ColumnIdentity.Equals(Insight.Database.CodeGenerator.SchemaIdentity.ColumnIdentity)">
            <summary>
            Determines whether two columns are equal.
            </summary>
            <param name="other">The other column.</param>
            <returns>True if they are equal.</returns>
        </member>
        <member name="P:Insight.Database.CodeGenerator.SchemaIdentity.ColumnIdentity.Name">
            <summary>
            Gets or sets the name of the column.
            </summary>
        </member>
        <member name="P:Insight.Database.CodeGenerator.SchemaIdentity.ColumnIdentity.Type">
            <summary>
            Gets or sets the type of the column.
            </summary>
        </member>
        <member name="P:Insight.Database.CodeGenerator.SchemaIdentity.ColumnIdentity.IsNullable">
            <summary>
            Gets or sets a value indicating whether the column is nullable.
            </summary>
        </member>
        <member name="P:Insight.Database.CodeGenerator.SchemaIdentity.ColumnIdentity.IsIdentity">
            <summary>
            Gets or sets a value indicating whether the column is the row identity.
            </summary>
        </member>
        <member name="P:Insight.Database.CodeGenerator.SchemaIdentity.ColumnIdentity.IsReadOnly">
            <summary>
            Gets or sets a value indicating whether the column is readonly.
            </summary>
        </member>
        <member name="T:Insight.Database.CodeGenerator.DbParameterGenerator">
            <summary>
            A code generator to create methods to serialize an object into sql parameters.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.DbParameterGenerator.DbTypeEnumerable">
            <summary>
            Special case for enumerable data types.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.DbParameterGenerator._dbNullValue">
            <summary>
            MethodInfos for methods that we are going to call.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.DbParameterGenerator._typeToDbTypeMap">
            <summary>
            Mapping from object types to DbTypes.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.DbParameterGenerator._dbTypeToTypeMap">
            <summary>
            A map from dbtypes to underlying system types.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.DbParameterGenerator._serializers">
            <summary>
            The cache for the serializers (input parameters).
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.DbParameterGenerator._deserializers">
            <summary>
            The cache for the deserializers (output parameters).
            </summary>
        </member>
        <member name="M:Insight.Database.CodeGenerator.DbParameterGenerator.GetInputParameterGenerator(System.Data.IDbCommand,System.Type)">
            <summary>
            Get the parameter generator method for a command and the type used for the parameter.
            </summary>
            <param name="command">The command to analyze.</param>
            <param name="type">The type of the parameter.</param>
            <returns>The command generator.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.DbParameterGenerator.GetOutputParameterConverter(System.Data.IDbCommand,System.Type)">
            <summary>
            Get the parameter generator method for a command and the type used for the parameter.
            </summary>
            <param name="command">The command to analyze.</param>
            <param name="type">The type of the parameter.</param>
            <returns>The command generator.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.DbParameterGenerator.CreateClassInputParameterGenerator(System.Data.IDbCommand,System.Type)">
            <summary>
            Create the Parameter generator method.
            </summary>
            <param name="command">The command to analyze.</param>
            <param name="type">The type of object to parameterize.</param>
            <returns>A method that serializes parameters to values.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.DbParameterGenerator.SerializeParameterValue(System.Object,System.Type,Insight.Database.IDbObjectSerializer)">
            <summary>
            Serialize a value into a parameter. This is a stub method that reorders the stack.
            </summary>
            <param name="value">The value to serialize.</param>
            <param name="type">The type of the member.</param>
            <param name="serializer">The serializer to use.</param>
            <returns>The serialized value.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.DbParameterGenerator.SetParameterStringValue(System.Data.IDbDataParameter,System.Object)">
            <summary>
            Set a string value on a parameter.
            </summary>
            <param name="parameter">The parameter.</param>
            <param name="value">The string value.</param>
        </member>
        <member name="M:Insight.Database.CodeGenerator.DbParameterGenerator.CreateDynamicInputParameterGenerator(System.Data.IDbCommand)">
            <summary>
            Create a parameter generator for a dynamic object.
            </summary>
            <param name="command">The command to parse.</param>
            <returns>An action that fills in the command parameters from a dynamic object.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.DbParameterGenerator.CreateClassOutputParameterConverter(System.Data.IDbCommand,System.Type)">
            <summary>
            Creates a converter from output parameters to an object of a given type.
            </summary>
            <param name="command">The command to analyze for the results.</param>
            <param name="type">The type to put the values into.</param>
            <returns>The converter method.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.DbParameterGenerator.LookupDbType(System.Type,Insight.Database.IDbObjectSerializer,System.Data.DbType)">
            <summary>
            Look up a DbType from a .Net type.
            </summary>
            <param name="type">The type of object to look up.</param>
            <param name="serializer">The serializer that has been detected for the field.</param>
            <param name="parameterType">The expected sql parameter type. Used as the default.</param>
            <returns>The equivalend DbType.</returns>
        </member>
        <member name="T:Insight.Database.CodeGenerator.DbParameterGenerator.ListParameterHelper">
            <summary>
            Helps pack list parameters into a command.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.DbParameterGenerator.ListParameterHelper._parameterPrefixRegex">
            <summary>
            The regex to detect parameters.
            </summary>
        </member>
        <member name="M:Insight.Database.CodeGenerator.DbParameterGenerator.ListParameterHelper.AddListParameter(System.Data.IDataParameter,System.Object,System.Data.IDbCommand)">
            <summary>
            Converts an IEnumerable to a list of parameters, and updates the SQL command to support them.
            </summary>
            <param name="parameter">The parameter to modify.</param>
            <param name="value">The value of the parameter.</param>
            <param name="command">The command to add to.</param>
        </member>
        <member name="M:Insight.Database.CodeGenerator.DbParameterGenerator.ListParameterHelper.AddListParameterByValue(System.Data.IDataParameter,System.Collections.IEnumerable,System.Data.IDbCommand)">
            <summary>
            Add strings and value parameters (non-table-types).
            </summary>
            <param name="parameter">The parameter to modify.</param>
            <param name="list">The list of objects to add.</param>
            <param name="command">The command to add parameters to.</param>
        </member>
        <member name="M:Insight.Database.CodeGenerator.DbParameterGenerator.ListParameterHelper.AddListParameterByClass(System.Data.IDataParameter,System.Collections.IEnumerable,System.Data.IDbCommand,System.Type)">
            <summary>
            Add a list of objects as a table-valued parameter.
            </summary>
            <param name="parameter">The parameter to modify.</param>
            <param name="list">The list to add to the parameter.</param>
            <param name="command">The command to add parameters to.</param>
            <param name="listType">The type that the list contains.</param>
        </member>
        <member name="T:Insight.Database.CodeGenerator.DbReaderDeserializer">
            <summary>
            Class for deserializing different types objects from IDataReader.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.DbReaderDeserializer._deserializers">
            <summary>
            The cache for the deserializers that deserialize into new objects.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.DbReaderDeserializer._simpleDeserializers">
            <summary>
            The cache for the simple deserializers that deserialize into new objects.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.DbReaderDeserializer._getValueMethod">
            <summary>
            The method to get values from an IDataRecord.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.DbReaderDeserializer._dbNullField">
            <summary>
            The DBNull.Value field.
            </summary>
        </member>
        <member name="M:Insight.Database.CodeGenerator.DbReaderDeserializer.#cctor">
            <summary>
            Initializes static members of the DbReaderDeserializer class.
            </summary>
        </member>
        <member name="M:Insight.Database.CodeGenerator.DbReaderDeserializer.GetDeserializer``1(System.Data.IDataReader,Insight.Database.Structure.IRecordStructure)">
            <summary>
            Get a deserializer to read class T from the given reader.
            </summary>
            <param name="reader">The reader to read from.</param>
            <param name="structure">The structure of the objects in the record.</param>
            <typeparam name="T">The type of object to deserialize.</typeparam>
            <returns>A function that can deserialize a T from the reader.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.DbReaderDeserializer.GetDeserializerWithCallback``1(System.Data.IDataReader,Insight.Database.Structure.IRecordStructure)">
            <summary>
            Get a deserializer to read class T from the given reader.
            </summary>
            <param name="reader">The reader to read from.</param>
            <param name="structure">The structure of the objects in the record.</param>
            <typeparam name="T">The type of object to deserialize.</typeparam>
            <returns>A function that can deserialize a T from the reader.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.DbReaderDeserializer.GetMerger``1(System.Data.IDataReader)">
            <summary>
            Get a deserializer to read the fields of class T from the given reader into an existing object.
            </summary>
            <remarks>This is the same as a deserializer, except it is passed an existing object rather than creating a new object.</remarks>
            <param name="reader">The reader to read from.</param>
            <typeparam name="T">The type of object to deserialize.</typeparam>
            <returns>A function that can deserialize a T from the reader.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.DbReaderDeserializer.GetDeserializer(System.Data.IDataReader,System.Type,Insight.Database.Structure.IRecordStructure,Insight.Database.CodeGenerator.SchemaMappingType)">
            <summary>
            Get a deserializer to read class T from the given reader.
            </summary>
            <param name="reader">The reader to read from.</param>
            <param name="type">The type of object to deserialize.</param>
            <param name="structure">The structure of the objects in the record.</param>
            <param name="mappingType">The type of mapping to return.</param>
            <returns>A function that can deserialize a T from the reader.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.DbReaderDeserializer.GetValueDeserializer``1">
            <summary>
            Get a deserializer that returns a single value from the return result.
            </summary>
            <typeparam name="T">The type of object to deserialize.</typeparam>
            <returns>The deserializer to use.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.DbReaderDeserializer.GetValueDeserializer(System.Type)">
            <summary>
            Get a deserializer that returns a single value from the return result.
            </summary>
            <param name="type">The type of object to deserialize.</param>
            <returns>The deserializer to use.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.DbReaderDeserializer.CreateValueDeserializer(System.Type)">
            <summary>
            Creates a deserializer that returns a single value from the return result.
            </summary>
            <param name="type">The type of object to deserialize.</param>
            <returns>The deserializer to use.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.DbReaderDeserializer.GetByteArrayDeserializer">
            <summary>
            Get a deserializer that returns a single byte array value from the return result.
            </summary>
            <returns>The deserializer to use.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.DbReaderDeserializer.GetDynamicDeserializer``2">
            <summary>
            Get a deserializer for dynamic objects.
            </summary>
            <typeparam name="T">The type of object to deserialize.</typeparam>
            <typeparam name="TImpl">The type of object to use to implement the requested type.</typeparam>
            <returns>A deserializer that returns dynamic objects.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.DbReaderDeserializer.GetXmlDocumentDeserializer">
            <summary>
            Returns a deserializer for an XmlDocument.
            </summary>
            <returns>A deserializer for an XmlDocument.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.DbReaderDeserializer.GetXDocumentDeserializer">
            <summary>
            Returns a deserializer for an XDocument.
            </summary>
            <returns>A deserializer for an XDocument.</returns>
        </member>
        <member name="T:Insight.Database.CodeGenerator.ExpandoGenerator">
            <summary>
            Generates a dynamic method to convert an object to a FastExpando.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.ExpandoGenerator._converters">
            <summary>
            The cache for the methods.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.ExpandoGenerator._constructor">
            <summary>
            The default constructor for type T.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.ExpandoGenerator._fastExpandoSetValue">
            <summary>
            The FastExpando.SetValue method.
            </summary>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ExpandoGenerator.Convert(System.Object)">
            <summary>
            Converts an object to a FastExpando.
            </summary>
            <param name="value">The object to convert.</param>
            <returns>A FastExpando representing the public properties of the object.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ExpandoGenerator.CreateConverter(System.Type)">
            <summary>
            Uses IL to generate a method that converts an object of a given type to a FastExpando.
            </summary>
            <param name="type">The type of object to be able to convert.</param>
            <returns>A function that can convert that type of object to a FastExpando.</returns>
        </member>
        <member name="T:Insight.Database.CodeGenerator.SchemaMappingType">
            <summary>
            Defines the type of a schema mapping and therefore the signature of the delegate.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.SchemaMappingType.ExistingObject">
            <summary>
            An existing object is updated.
            By itself, ExistingObject creates a method of  Func&lt;IDataReader,T,T&gt;.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.SchemaMappingType.NewObject">
            <summary>
            A new object is created.
            By itself, NewObject creates a method of type Func&lt;IDataReader,T&gt;.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.SchemaMappingType.WithCallback">
            <summary>
            A callback is used to assemble sub-objects.
            This currently cannot be used with ExistingObject.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.SchemaMappingType.NewObjectWithCallback">
            <summary>
            A new object is created and a callback is used to assemble sub-objects.
            This creates a method of type Func&lt;IDataReader,Action&lt;object[]&gt;T&gt;.
            </summary>
        </member>
        <member name="T:Insight.Database.CodeGenerator.TypeConverterGenerator">
            <summary>
            Generates the IL that is needed to convert a value from an input type to an output type.
            This handles automatic conversion to/from nullables, Xml, strings, etc.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.TypeConverterGenerator.SqlZeroTime">
            <summary>
            The number of ticks to offset when converting between .NET TimeSpan and SQL DateTime.
            </summary>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeConverterGenerator.EmitConvertAndSetValue(System.Reflection.Emit.ILGenerator,System.Type,Insight.Database.Mapping.FieldMapping)">
            <summary>
            Emit the IL to convert the current value on the stack and set the value of the object.
            </summary>
            <param name="il">The IL generator to output to.</param>
            <param name="sourceType">The current type of the value.</param>
            <param name="mapping">The column mapping to use.</param>
            <remarks>
            Expects the stack to contain:
            	Target Object
            	Value to set
            The value is first converted to the type required by the method parameter, then sets the property.
            </remarks>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeConverterGenerator.EmitConvertValue(System.Reflection.Emit.ILGenerator,System.String,System.Type,System.Type,Insight.Database.IDbObjectSerializer)">
            <summary>
            Emits the IL to convert a value to a target type.
            </summary>
            <param name="il">The IL generator to output to.</param>
            <param name="memberName">The name of the member being converted.</param>
            <param name="sourceType">The source type.</param>
            <param name="targetType">The target type.</param>
            <param name="serializer">The serializer to use to deserialize the value.</param>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeConverterGenerator.CreateDataException(System.Exception,System.Int32,System.Data.IDataReader,System.Object)">
            <summary>
            Wrap an exception with a DataException that contains more information.
            </summary>
            <param name="ex">The inner exception.</param>
            <param name="index">The index of the column.</param>
            <param name="reader">The data reader.</param>
            <param name="value">The value read from the reader.</param>
            <returns>An exception that can be thrown.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeConverterGenerator.ReadChar(System.Object)">
            <summary>
            Convert an object value to a char.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A single character.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeConverterGenerator.ReadNullableChar(System.Object)">
            <summary>
            Convert an object value to a nullable char.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A single character.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeConverterGenerator.ReadXmlDocument(System.Object)">
            <summary>
            Reads an XmlDocument from a column.
            </summary>
            <param name="value">The value to convert to an XmlDocument.</param>
            <returns>The XmlDocument.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeConverterGenerator.ReadXDocument(System.Object)">
            <summary>
            Reads an XDocument from a column.
            </summary>
            <param name="value">The value to convert to an XDocument.</param>
            <returns>The XDocument.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeConverterGenerator.IsAllDbNull(System.Data.IDataRecord,System.Int32,System.Int32)">
            <summary>
            Determines if all of the specified fields of a data record are null.
            </summary>
            <param name="record">The record to look at.</param>
            <param name="startColumn">The first column to look at.</param>
            <param name="count">The number of columns to look at.</param>
            <returns>True if all of the specified columns are null.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeConverterGenerator.SqlDateTimeToTimeSpan(System.DateTime)">
            <summary>
            Converts a DateTime from the SQL side into a .NET TimeSpan by offseting by SqlZeroTime.
            </summary>
            <param name="dateTime">The DateTime to convert.</param>
            <returns>The corresponding TimeSpan.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeConverterGenerator.TimeSpanToSqlDateTime(System.TimeSpan)">
            <summary>
            Converts a .NET TimeSpan to a SQL DateTime by offseting by SqlZeroTime.
            </summary>
            <param name="span">The TimeSpan to convert.</param>
            <returns>The corresponding SQL DateTime.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeConverterGenerator.TimeSpanToNullableSqlDateTime(System.Nullable{System.TimeSpan})">
            <summary>
            Converts a .NET TimeSpan to a SQL DateTime by offseting by SqlZeroTime.
            </summary>
            <param name="span">The TimeSpan to convert.</param>
            <returns>The corresponding SQL DateTime.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeConverterGenerator.ObjectToSqlDateTime(System.Object,System.Data.DbType)">
            <summary>
            Converts a .NET TimeSpan to a SQL DateTime by offseting by SqlZeroTime.
            The object is only offset if it is a TimeSpan or TimeSpan?.
            When converting to a SQL time, the value must be within a 24-hour period.
            </summary>
            <param name="o">The object to convert.</param>
            <param name="dbType">The expected type in the database..</param>
            <returns>The corresponding SQL DateTime.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeConverterGenerator.SqlObjectToTimeSpan(System.Object)">
            <summary>
            Converts a SQL DateTime  to a .NET TimeSpan by offseting by SqlZeroTime.
            The object is only offset if it is a DateTime.
            </summary>
            <param name="o">The object to convert.</param>
            <returns>The corresponding .NET TimeSpan.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeConverterGenerator.EmitConversionOrCoersion(System.Reflection.Emit.ILGenerator,System.Type,System.Type)">
            <summary>
            Emit a conversion or coersion from the source type to the target type.
            </summary>
            <param name="il">The IL generator to use.</param>
            <param name="sourceType">The source type.</param>
            <param name="targetType">The target type.</param>
            <returns>True if a conversion was emitted, false if one could not be found.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeConverterGenerator.EmitConstructorConversion(System.Reflection.Emit.ILGenerator,System.Type,System.Type)">
            <summary>
            Attempts to emit a constructor conversion from the source to the target type.
            </summary>
            <param name="il">The ILGenerator to emit to.</param>
            <param name="sourceType">The source type.</param>
            <param name="targetType">The target type.</param>
            <returns>True if a conversion could be emitted, false otherwise.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeConverterGenerator.DeserializeObject(System.Object,System.Type,Insight.Database.IDbObjectSerializer)">
            <summary>
            Deserializes an object. This is a stub method that just reorders the parameters.
            </summary>
            <param name="encoded">The encoded value.</param>
            <param name="type">The type to deserialize.</param>
            <param name="serializer">The serializer to use.</param>
            <returns>The deserialized object.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeConverterGenerator.EmitConversion(System.Reflection.Emit.ILGenerator,System.Type,System.Type)">
            <summary>
            Emit a conversion from the source type to the target type.
            </summary>
            <param name="il">The IL generator to use.</param>
            <param name="sourceType">The source type.</param>
            <param name="targetType">The target type.</param>
            <returns>True if a conversion was emitted, false if one could not be found.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeConverterGenerator.FindConversionMethod(System.Type,System.Type)">
            <summary>
            Attempt to find a valid conversion method.
            </summary>
            <param name="sourceType">The source type for the conversion.</param>
            <param name="targetType">The target type for the conversion.</param>
            <returns>A conversion method or null if none could be found.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeConverterGenerator.FindConversionMethod(System.String,System.Type,System.Type,System.Type)">
            <summary>
            Look up a conversion method from a type.
            </summary>
            <param name="methodName">The name of the method to find.</param>
            <param name="searchType">The type to search through.</param>
            <param name="sourceType">The source type for the conversion.</param>
            <param name="targetType">The target type for the conversion.</param>
            <returns>A conversion method or null if none could be found.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeConverterGenerator.EmitCoersion(System.Reflection.Emit.ILGenerator,System.Type,System.Type)">
            <summary>
            Assuming the source and target types are primitives, coerce the types and handle nullable conversions.
            </summary>
            <param name="il">The il generator.</param>
            <param name="sourceType">The source type of data.</param>
            <param name="targetType">The type to coerce to.</param>
            <returns>True if a coersion was emitted, false otherwise.</returns>
        </member>
        <member name="T:Insight.Database.BindChildrenAttribute">
            <summary>
            Specifes when the fields of child objects can be bound on a class or on the parameters of an interface method.
            </summary>
        </member>
        <member name="M:Insight.Database.BindChildrenAttribute.#ctor">
            <summary>
            Initializes a new instance of the BindChildrenAttribute class.
            </summary>
        </member>
        <member name="M:Insight.Database.BindChildrenAttribute.#ctor(Insight.Database.BindChildrenFor)">
            <summary>
            Initializes a new instance of the BindChildrenAttribute class.
            </summary>
            <param name="deep">Specifies the times when child fields can be bound.</param>
        </member>
        <member name="P:Insight.Database.BindChildrenAttribute.For">
            <summary>
            Gets the valid times when child fields can be bound.
            </summary>
        </member>
        <member name="T:Insight.Database.ColumnMapping">
            <summary>
            A singleton class that handles the mapping operations from recordsets to objects.
            </summary>
        </member>
        <member name="F:Insight.Database.ColumnMapping._lock">
            <summary>
            An internal lock structure.
            </summary>
        </member>
        <member name="F:Insight.Database.ColumnMapping._tables">
            <summary>
            The singleton instance of the ColumnMapping configuration for Tables and Table Valued Parameters.
            </summary>
        </member>
        <member name="F:Insight.Database.ColumnMapping._parameters">
            <summary>
            The singleton instance of the ColumnMapping configuration for Parameters.
            </summary>
        </member>
        <member name="F:Insight.Database.ColumnMapping._all">
            <summary>
            The singleton instance of the AllColumnMapping configuration for Parameters.
            </summary>
        </member>
        <member name="M:Insight.Database.ColumnMapping.MapParameters(System.Type,System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.Data.IDataParameter})">
            <summary>
            Maps the parameters for a command.
            </summary>
            <param name="type">The type being bound.</param>
            <param name="command">The command being executed.</param>
            <param name="parameters">The parameters to bind.</param>
            <returns>The mapping for the parameters.</returns>
        </member>
        <member name="M:Insight.Database.ColumnMapping.MapColumns(System.Type,System.Data.IDataReader,System.Int32,System.Nullable{System.Int32},Insight.Database.Mapping.IColumnMapper)">
            <summary>
            Maps the columns of a reader to a type.
            </summary>
            <param name="type">The type being bound.</param>
            <param name="reader">The reader being bound.</param>
            <param name="startColumn">The index of the first column to bind.</param>
            <param name="columnCount">The number of columns to bind.</param>
            <param name="overrideMapping">An optional column mapper to override the operation</param>
            <returns>The mappings for the columns</returns>
        </member>
        <member name="M:Insight.Database.ColumnMapping.MapParameter(System.Type,System.Data.IDbCommand,System.Data.IDataParameter)">
            <summary>
            Maps a parameters for a command.
            </summary>
            <param name="type">The type being bound.</param>
            <param name="command">The command being executed.</param>
            <param name="parameter">The parameter to bind.</param>
            <returns>The mapping for the parameters.</returns>
        </member>
        <member name="M:Insight.Database.ColumnMapping.MapColumn(System.Type,System.Data.IDataReader,System.Int32,Insight.Database.Mapping.IColumnMapper)">
            <summary>
            Maps a column of a reader to a type.
            </summary>
            <param name="type">The type being bound.</param>
            <param name="reader">The reader being bound.</param>
            <param name="column">The column to bind.</param>
            <param name="overrideMapping">An optional column mapper to override the operation</param>
            <returns>The mapping for the column</returns>
        </member>
        <member name="P:Insight.Database.ColumnMapping.Tables">
            <summary>
            Gets the singleton instance of the ColumnMapping configuration for Tables and Table Valued Parameters.
            </summary>
        </member>
        <member name="P:Insight.Database.ColumnMapping.Parameters">
            <summary>
            Gets the singleton instance of the ColumnMapping configuration for Parameters.
            </summary>
        </member>
        <member name="P:Insight.Database.ColumnMapping.All">
            <summary>
            Gets the singleton instance of the ColumnMapping configuration for both Tables and Parameters.
            </summary>
        </member>
        <member name="T:MissingExtensions">
            <summary>
            Adds missing methods.
            </summary>
        </member>
        <member name="M:MissingExtensions.IsNullOrWhiteSpace(System.String)">
            <summary>
            Determines if a string is null or all whitespace.
            </summary>
            <param name="value">The string to test.</param>
            <returns>False if the string contains at least one non-whitespace character.</returns>
        </member>
        <member name="M:MissingExtensions.MaxOrDefault``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Returns the maximum value in a sequence or the default.
            </summary>
            <typeparam name="T1">The type of the sequence.</typeparam>
            <typeparam name="T2">The type of the value.</typeparam>
            <param name="list">The list to evaluate.</param>
            <param name="selector">A function to select the value.</param>
            <returns>The maximum selected value or the default.</returns>
        </member>
        <member name="T:Insight.Database.DbConnectionWrapperProviderFactory`1">
            <summary>
            Implements a DbProviderFactory for a wrapped connection.
            </summary>
            <typeparam name="T">The type of DbProviderFactory to do the real implementation.</typeparam>
            <remarks>This was added for Glimpe support, which needs a provider factory for some reason.</remarks>
        </member>
        <member name="F:Insight.Database.DbConnectionWrapperProviderFactory`1.Instance">
            <summary>
            The singleton instance of the provider factory.
            </summary>
        </member>
        <member name="M:Insight.Database.DbConnectionWrapperProviderFactory`1.#ctor">
            <summary>
            Initializes a new instance of the DbConnectionWrapperProviderFactory class.
            </summary>
        </member>
        <member name="M:Insight.Database.DbConnectionWrapperProviderFactory`1.CreateCommand">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbConnectionWrapperProviderFactory`1.CreateCommandBuilder">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbConnectionWrapperProviderFactory`1.CreateConnection">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbConnectionWrapperProviderFactory`1.CreateConnectionStringBuilder">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbConnectionWrapperProviderFactory`1.CreateDataAdapter">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbConnectionWrapperProviderFactory`1.CreateDataSourceEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbConnectionWrapperProviderFactory`1.CreateParameter">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbConnectionWrapperProviderFactory`1.CreatePermission(System.Security.Permissions.PermissionState)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.DbConnectionWrapperProviderFactory`1.InnerFactory">
            <summary>
            Gets or sets the implementing inner factory.
            </summary>
        </member>
        <member name="P:Insight.Database.DbConnectionWrapperProviderFactory`1.CanCreateDataSourceEnumerator">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.DBReaderExtensions">
            <summary>
            Extension methods for object mapping.
            </summary>
            <summary>
            Extension methods for object mapping.
            </summary>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.AsEnumerable``1(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to an enumerable. The reader is closed after all records are read.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>An enumerable over the return results.</returns>
            <remarks>
            If you use this method and are relying on CommandBehavior.CloseConnection to close the connection, note that if all of the records are not read
            (due to an exception or otherwise), then the connection will leak until GC is run. Your code is responsible for closing the connection.
            </remarks>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.ToList``1(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.Single``1(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a single object.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.AsEnumerable``2(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to an enumerable. The reader is closed after all records are read.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>An enumerable over the return results.</returns>
            <remarks>
            If you use this method and are relying on CommandBehavior.CloseConnection to close the connection, note that if all of the records are not read
            (due to an exception or otherwise), then the connection will leak until GC is run. Your code is responsible for closing the connection.
            </remarks>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.ToList``2(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.Single``2(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a single object.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.AsEnumerable``3(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to an enumerable. The reader is closed after all records are read.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>An enumerable over the return results.</returns>
            <remarks>
            If you use this method and are relying on CommandBehavior.CloseConnection to close the connection, note that if all of the records are not read
            (due to an exception or otherwise), then the connection will leak until GC is run. Your code is responsible for closing the connection.
            </remarks>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.ToList``3(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.Single``3(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a single object.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.AsEnumerable``4(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to an enumerable. The reader is closed after all records are read.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>An enumerable over the return results.</returns>
            <remarks>
            If you use this method and are relying on CommandBehavior.CloseConnection to close the connection, note that if all of the records are not read
            (due to an exception or otherwise), then the connection will leak until GC is run. Your code is responsible for closing the connection.
            </remarks>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.ToList``4(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.Single``4(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a single object.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.AsEnumerable``5(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to an enumerable. The reader is closed after all records are read.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>An enumerable over the return results.</returns>
            <remarks>
            If you use this method and are relying on CommandBehavior.CloseConnection to close the connection, note that if all of the records are not read
            (due to an exception or otherwise), then the connection will leak until GC is run. Your code is responsible for closing the connection.
            </remarks>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.ToList``5(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.Single``5(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a single object.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.AsEnumerable``6(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to an enumerable. The reader is closed after all records are read.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>An enumerable over the return results.</returns>
            <remarks>
            If you use this method and are relying on CommandBehavior.CloseConnection to close the connection, note that if all of the records are not read
            (due to an exception or otherwise), then the connection will leak until GC is run. Your code is responsible for closing the connection.
            </remarks>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.ToList``6(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.Single``6(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a single object.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.AsEnumerable``7(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to an enumerable. The reader is closed after all records are read.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>An enumerable over the return results.</returns>
            <remarks>
            If you use this method and are relying on CommandBehavior.CloseConnection to close the connection, note that if all of the records are not read
            (due to an exception or otherwise), then the connection will leak until GC is run. Your code is responsible for closing the connection.
            </remarks>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.ToList``7(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.Single``7(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a single object.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.AsEnumerable``8(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to an enumerable. The reader is closed after all records are read.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>An enumerable over the return results.</returns>
            <remarks>
            If you use this method and are relying on CommandBehavior.CloseConnection to close the connection, note that if all of the records are not read
            (due to an exception or otherwise), then the connection will leak until GC is run. Your code is responsible for closing the connection.
            </remarks>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.ToList``8(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.Single``8(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a single object.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.AsEnumerable``9(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to an enumerable. The reader is closed after all records are read.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>An enumerable over the return results.</returns>
            <remarks>
            If you use this method and are relying on CommandBehavior.CloseConnection to close the connection, note that if all of the records are not read
            (due to an exception or otherwise), then the connection will leak until GC is run. Your code is responsible for closing the connection.
            </remarks>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.ToList``9(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.Single``9(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a single object.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.AsEnumerable``10(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to an enumerable. The reader is closed after all records are read.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>An enumerable over the return results.</returns>
            <remarks>
            If you use this method and are relying on CommandBehavior.CloseConnection to close the connection, note that if all of the records are not read
            (due to an exception or otherwise), then the connection will leak until GC is run. Your code is responsible for closing the connection.
            </remarks>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.ToList``10(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.Single``10(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a single object.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.AsEnumerable``11(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to an enumerable. The reader is closed after all records are read.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>An enumerable over the return results.</returns>
            <remarks>
            If you use this method and are relying on CommandBehavior.CloseConnection to close the connection, note that if all of the records are not read
            (due to an exception or otherwise), then the connection will leak until GC is run. Your code is responsible for closing the connection.
            </remarks>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.ToList``11(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.Single``11(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a single object.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.AsEnumerable``12(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to an enumerable. The reader is closed after all records are read.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>An enumerable over the return results.</returns>
            <remarks>
            If you use this method and are relying on CommandBehavior.CloseConnection to close the connection, note that if all of the records are not read
            (due to an exception or otherwise), then the connection will leak until GC is run. Your code is responsible for closing the connection.
            </remarks>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.ToList``12(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.Single``12(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a single object.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.AsEnumerable``13(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to an enumerable. The reader is closed after all records are read.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>An enumerable over the return results.</returns>
            <remarks>
            If you use this method and are relying on CommandBehavior.CloseConnection to close the connection, note that if all of the records are not read
            (due to an exception or otherwise), then the connection will leak until GC is run. Your code is responsible for closing the connection.
            </remarks>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.ToList``13(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.Single``13(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a single object.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.AsEnumerable``14(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to an enumerable. The reader is closed after all records are read.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>An enumerable over the return results.</returns>
            <remarks>
            If you use this method and are relying on CommandBehavior.CloseConnection to close the connection, note that if all of the records are not read
            (due to an exception or otherwise), then the connection will leak until GC is run. Your code is responsible for closing the connection.
            </remarks>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.ToList``14(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.Single``14(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a single object.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.AsEnumerable``15(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to an enumerable. The reader is closed after all records are read.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>An enumerable over the return results.</returns>
            <remarks>
            If you use this method and are relying on CommandBehavior.CloseConnection to close the connection, note that if all of the records are not read
            (due to an exception or otherwise), then the connection will leak until GC is run. Your code is responsible for closing the connection.
            </remarks>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.ToList``15(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.Single``15(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a single object.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.AsEnumerable``16(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to an enumerable. The reader is closed after all records are read.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth subobject.</typeparam>
            <typeparam name="T16">The type of the data in the sixteenth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>An enumerable over the return results.</returns>
            <remarks>
            If you use this method and are relying on CommandBehavior.CloseConnection to close the connection, note that if all of the records are not read
            (due to an exception or otherwise), then the connection will leak until GC is run. Your code is responsible for closing the connection.
            </remarks>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.ToList``16(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a list of objects.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth subobject.</typeparam>
            <typeparam name="T16">The type of the data in the sixteenth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.Single``16(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a single object.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth subobject.</typeparam>
            <typeparam name="T16">The type of the data in the sixteenth subobject.</typeparam>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.ToList(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a list of objects.
            </summary>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.ToList``1(System.Data.IDataReader,Insight.Database.Structure.IRecordReader{``0})">
            <summary>
            Converts an IDataReader to a list of objects, using the specified record reader.
            </summary>
            <typeparam name="T">The type of object to return.</typeparam>
            <param name="reader">The data reader.</param>
            <param name="recordReader">The record reader to use.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.AsEnumerable(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to an enumerable. The reader is closed after all records are read.
            </summary>
            <param name="reader">The data reader.</param>
            <returns>An enumerable over the return results.</returns>
            <remarks>
            If you use this method and are relying on CommandBehavior.CloseConnection to close the connection, note that if all of the records are not read
            (due to an exception or otherwise), then the connection will leak until GC is run. Your code is responsible for closing the connection.
            </remarks>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.AsEnumerable``1(System.Data.IDataReader,Insight.Database.Structure.IRecordReader{``0})">
            <summary>
            Converts an IDataReader to an enumerable. The reader is closed after all records are read.
            </summary>
            <typeparam name="T">The type of object to return.</typeparam>
            <param name="reader">The data reader.</param>
            <param name="recordReader">The record reader to use.</param>
            <returns>An enumerable over the return results.</returns>
            <remarks>
            If you use this method and are relying on CommandBehavior.CloseConnection to close the connection, note that if all of the records are not read
            (due to an exception or otherwise), then the connection will leak until GC is run. Your code is responsible for closing the connection.
            </remarks>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.Single(System.Data.IDataReader)">
            <summary>
            Converts an IDataReader to a single object.
            </summary>
            <param name="reader">The data reader.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.Single``1(System.Data.IDataReader,Insight.Database.Structure.IRecordReader{``0})">
            <summary>
            Converts an IDataReader to a single object, using the specified record reader.
            </summary>
            <typeparam name="T">The expected type of the object.</typeparam>
            <param name="reader">The data reader.</param>
            <param name="recordReader">The the record reader to use.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.Merge``1(System.Data.IDataReader,``0)">
            <summary>
            Merges the results of a recordset into an existing object.
            </summary>
            <typeparam name="T">The type of object to merge into.</typeparam>
            <param name="reader">The recordset to read.</param>
            <param name="item">The item to merge into.</param>
            <returns>The item that has been merged.</returns>
            <remarks>
            This method reads a single record from the reader and overwrites the values of the object.
            The reader is then advanced to the next result or disposed.
            To merge multiple records from the reader, pass an IEnumerable&lt;T&gt; to the method.
            </remarks>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.Merge``1(System.Data.IDataReader,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Merges the results of a recordset into a list of existing objects.
            </summary>
            <typeparam name="T">The type of object to merge into.</typeparam>
            <param name="reader">The recordset to read.</param>
            <param name="items">The list of items to merge into.</param>
            <returns>The list of merged objects.</returns>
        </member>
        <member name="M:Insight.Database.DBReaderExtensions.Advance(System.Data.IDataReader)">
            <summary>
            Advance an IDataReader to the next result set or close it if there are no more result sets.
            </summary>
            <param name="reader">The reader to read.</param>
        </member>
        <member name="T:Insight.Database.BindChildrenFor">
            <summary>
            Specifies under which circumstances database objects should be bound to child objects.
            </summary>
        </member>
        <member name="F:Insight.Database.BindChildrenFor.None">
            <summary>
            Do not bind child fields.
            </summary>
        </member>
        <member name="F:Insight.Database.BindChildrenFor.Parameters">
            <summary>
            Bind child fields when mapping input and output parameters.
            </summary>
        </member>
        <member name="F:Insight.Database.BindChildrenFor.Tables">
            <summary>
            Bind child fields when mapping TVPs and Insert/Update/Upsert results.
            </summary>
        </member>
        <member name="F:Insight.Database.BindChildrenFor.All">
            <summary>
            Always bind child fields.
            </summary>
        </member>
        <member name="T:Insight.Database.Mapping.FieldMapping">
            <summary>
            Represents the mapping from a database object to a class member.
            </summary>
        </member>
        <member name="M:Insight.Database.Mapping.FieldMapping.#ctor(System.String,Insight.Database.CodeGenerator.ClassPropInfo,Insight.Database.IDbObjectSerializer)">
            <summary>
            Initializes a new instance of the FieldMapping class.
            </summary>
            <param name="pathToMember">The path to the member.</param>
            <param name="member">The member that is bound.</param>
            <param name="serializer">The serializer for the mapping.</param>
        </member>
        <member name="P:Insight.Database.Mapping.FieldMapping.PathToMember">
            <summary>
            Gets the path to get to the member, in dotted notation (a.b.c.d).
            </summary>
        </member>
        <member name="P:Insight.Database.Mapping.FieldMapping.Member">
            <summary>
            Gets the member this is bound to.
            </summary>
        </member>
        <member name="P:Insight.Database.Mapping.FieldMapping.Serializer">
            <summary>
            Gets the serializer for this mapping.
            </summary>
        </member>
        <member name="P:Insight.Database.Mapping.FieldMapping.IsDeep">
            <summary>
            Gets a value indicating whether this is a mapping into a subobject.
            </summary>
        </member>
        <member name="P:Insight.Database.Mapping.FieldMapping.Prefix">
            <summary>
            Gets the prefix part of the PathToMember.
            </summary>
        </member>
        <member name="T:Insight.Database.Mapping.DualMappingCollection">
            <summary>
            Allows for configuration of both the Parameters and Tables mappings at the same time.
            </summary>
        </member>
        <member name="T:Insight.Database.Mapping.MappingCollection`1">
            <summary>
            Allows for configuration of mapping rules and translations.
            </summary>
            <typeparam name="TMapper">The type of mapping in the collection.</typeparam>
        </member>
        <member name="T:Insight.Database.Mapping.MappingCollection">
            <summary>
            Allows for configuration of mapping rules.
            </summary>
        </member>
        <member name="M:Insight.Database.Mapping.MappingCollection.CanBindChild(System.Type)">
            <summary>
            Determines if the configuration allows child fields to be bound on the given type
            </summary>
            <param name="type">The type to test.</param>
            <returns>True if child fields can be bound.</returns>
        </member>
        <member name="F:Insight.Database.Mapping.MappingCollection`1._bindChildFor">
            <summary>
            The child binding mode that this is bound to.
            </summary>
        </member>
        <member name="F:Insight.Database.Mapping.MappingCollection`1._transforms">
            <summary>
            The mapping event handler.
            </summary>
        </member>
        <member name="F:Insight.Database.Mapping.MappingCollection`1._mappers">
            <summary>
            The custom mappers.
            </summary>
        </member>
        <member name="F:Insight.Database.Mapping.MappingCollection`1._childBindingEnabled">
            <summary>
            Tracks if child binding is enabled.
            </summary>
        </member>
        <member name="M:Insight.Database.Mapping.MappingCollection`1.#ctor(Insight.Database.BindChildrenFor)">
            <summary>
            Initializes a new instance of the MappingCollection class.
            </summary>
            <param name="bindChildFor">The context for binding child members.</param>
        </member>
        <member name="M:Insight.Database.Mapping.MappingCollection`1.EnableChildBinding">
            <summary>
            Enables binding to child fields for all objects.
            </summary>
            <returns>The current mapping collection, for fluent configuration.</returns>
        </member>
        <member name="M:Insight.Database.Mapping.MappingCollection`1.DisableChildBinding">
            <summary>
            Disables binding to child fields for all objects.
            </summary>
            <returns>The current mapping collection, for fluent configuration.</returns>
        </member>
        <member name="M:Insight.Database.Mapping.MappingCollection`1.EnableChildBinding``1">
            <summary>
            Enables binding to child fields objects that derive from the given type.
            </summary>
            <typeparam name="T">The type to enable.</typeparam>
            <returns>The current mapping collection, for fluent configuration.</returns>
        </member>
        <member name="M:Insight.Database.Mapping.MappingCollection`1.DisableChildBinding``1">
            <summary>
            Disables binding to child fields objects that derive from the given type.
            </summary>
            <typeparam name="T">The type to disable.</typeparam>
            <returns>The current mapping collection, for fluent configuration.</returns>
        </member>
        <member name="M:Insight.Database.Mapping.MappingCollection`1.ResetChildBinding">
            <summary>
            Resets the child binding configuration. Intended to be used for test purposes.
            </summary>
            <returns>The current mapping collection, for fluent configuration.</returns>
        </member>
        <member name="M:Insight.Database.Mapping.MappingCollection`1.AddTransform(Insight.Database.Mapping.IMappingTransform)">
            <summary>
            Adds a mapping transformation to the configuration.
            </summary>
            <param name="transform">The transformation to add.</param>
            <returns>The current mapping collection, for fluent configuration.</returns>
        </member>
        <member name="M:Insight.Database.Mapping.MappingCollection`1.ResetTransforms">
            <summary>
            Resets the mapping transformations. Intended to be used for test purposes.
            </summary>
            <returns>The current mapping collection, for fluent configuration.</returns>
        </member>
        <member name="M:Insight.Database.Mapping.MappingCollection`1.AddMapper(`0)">
            <summary>
            Adds a custom mapper to the configuration.
            </summary>
            <param name="mapper">The mapper to add.</param>
            <returns>The current mapping collection, for fluent configuration.</returns>
        </member>
        <member name="M:Insight.Database.Mapping.MappingCollection`1.ResetMappers">
            <summary>
            Resets the custom mappings. Intended to be used for test purposes.
            </summary>
            <returns>The current mapping collection, for fluent configuration.</returns>
        </member>
        <member name="M:Insight.Database.Mapping.MappingCollection`1.ReplaceRegex``1(System.String,System.String)">
            <summary>
            Adds a removal operation that uses a Regex to determine the text to remove.
            </summary>
            <typeparam name="T">The type of objects to apply this operation to.</typeparam>
            <param name="pattern">The text of the regex.</param>
            <param name="replacement">The text to use as a replacement.</param>
            <returns>The current ColumnMapping configuration.</returns>
        </member>
        <member name="M:Insight.Database.Mapping.MappingCollection`1.ReplaceRegex(System.String,System.String)">
            <summary>
            Adds a removal operation that uses a Regex to determine the text to remove.
            This applies to all types of objects.
            </summary>
            <param name="pattern">The text of the regex.</param>
            <param name="replacement">The text to use as a replacement.</param>
            <returns>The current ColumnMapping configuration.</returns>
        </member>
        <member name="M:Insight.Database.Mapping.MappingCollection`1.RemoveRegex``1(System.String)">
            <summary>
            Adds a removal operation that uses a Regex to determine the text to remove.
            </summary>
            <typeparam name="T">The type of objects to apply this operation to.</typeparam>
            <param name="pattern">The text of the regex.</param>
            <returns>The current ColumnMapping configuration.</returns>
        </member>
        <member name="M:Insight.Database.Mapping.MappingCollection`1.RemoveRegex(System.String)">
            <summary>
            Adds a removal operation that uses a Regex to determine the text to remove.
            This applies to all types of objects.
            </summary>
            <param name="text">The text of the regex.</param>
            <returns>The current ColumnMapping configuration.</returns>
        </member>
        <member name="M:Insight.Database.Mapping.MappingCollection`1.RemoveStrings``1(System.String)">
            <summary>
            Adds a removal operation that replaces any occurence of a specified string.
            </summary>
            <typeparam name="T">The type of objects to apply this operation to.</typeparam>
            <param name="pattern">The text to remove from the column names.</param>
            <returns>The current ColumnMapping configuration.</returns>
        </member>
        <member name="M:Insight.Database.Mapping.MappingCollection`1.RemoveStrings(System.String)">
            <summary>
            Adds a removal operation that replaces any occurence of a specified string.
            </summary>
            This applies to all types of objects.
            <param name="pattern">The text to remove from the column names.</param>
            <returns>The current ColumnMapping configuration.</returns>
        </member>
        <member name="M:Insight.Database.Mapping.MappingCollection`1.RemovePrefixes``1(System.String)">
            <summary>
            Adds a removal operation that replaces any occurence of a specified string at the beginning of a column name.
            </summary>
            <typeparam name="T">The type of objects to apply this operation to.</typeparam>
            <param name="prefix">The text to remove from the column names.</param>
            <returns>The current ColumnMapping configuration.</returns>
        </member>
        <member name="M:Insight.Database.Mapping.MappingCollection`1.RemovePrefixes(System.String)">
            <summary>
            Adds a removal operation that replaces any occurence of a specified string at the beginning of a column name.
            </summary>
            This applies to all types of objects.
            <param name="prefix">The text to remove from the column names.</param>
            <returns>The current ColumnMapping configuration.</returns>
        </member>
        <member name="M:Insight.Database.Mapping.MappingCollection`1.RemoveSuffixes``1(System.String)">
            <summary>
            Adds a removal operation that replaces any occurence of a specified string at the end of a column name.
            </summary>
            <typeparam name="T">The type of objects to apply this operation to.</typeparam>
            <param name="suffix">The text to remove from the column names.</param>
            <returns>The current ColumnMapping configuration.</returns>
        </member>
        <member name="M:Insight.Database.Mapping.MappingCollection`1.RemoveSuffixes(System.String)">
            <summary>
            Adds a removal operation that replaces any occurence of a specified string at the end of a column name.
            </summary>
            This applies to all types of objects.
            <param name="suffix">The text to remove from the column names.</param>
            <returns>The current ColumnMapping configuration.</returns>
        </member>
        <member name="M:Insight.Database.Mapping.MappingCollection`1.CanBindChild(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Mapping.MappingCollection`1.Transform(System.Type,System.String)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Mapping.MappingCollection`1.Mappers">
            <summary>
            Gets the mappers in the configuration.
            </summary>
        </member>
        <member name="F:Insight.Database.Mapping.DualMappingCollection._parameters">
            <summary>
            The parameters submapping.
            </summary>
        </member>
        <member name="F:Insight.Database.Mapping.DualMappingCollection._tables">
            <summary>
            The tables submapping.
            </summary>
        </member>
        <member name="M:Insight.Database.Mapping.DualMappingCollection.#ctor(Insight.Database.Mapping.MappingCollection{Insight.Database.Mapping.IParameterMapper},Insight.Database.Mapping.MappingCollection{Insight.Database.Mapping.IColumnMapper})">
            <summary>
            Initializes a new instance of the DualMappingCollection class
            </summary>
            <param name="parameters">The paremeters submapping.</param>
            <param name="tables">The tables submapping.</param>
        </member>
        <member name="M:Insight.Database.Mapping.DualMappingCollection.EnableChildBinding``1">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Mapping.DualMappingCollection.DisableChildBinding``1">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Mapping.DualMappingCollection.ResetChildBinding">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Mapping.DualMappingCollection.AddTransform(Insight.Database.Mapping.IMappingTransform)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Mapping.DualMappingCollection.ResetTransforms">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Mapping.DualMappingCollection.AddMapper(Insight.Database.Mapping.IDualMapper)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Mapping.DualMappingCollection.ResetMappers">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Mapping.IColumnMapper">
            <summary>
            Maps a column to a field.
            </summary>
        </member>
        <member name="T:Insight.Database.Mapping.IMapper">
            <summary>
            Performs a mapping from a database object to a class field.
            </summary>
        </member>
        <member name="M:Insight.Database.Mapping.IColumnMapper.MapColumn(System.Type,System.Data.IDataReader,System.Int32)">
            <summary>
            Returns the name of the field on the given type that maps to the specified parameter.
            </summary>
            <param name="type">The type to test.</param>
            <param name="reader">The reader being parsed.</param>
            <param name="column">The index of the column being mapped.</param>
            <returns>The name of the field on type, or null to allow other mappers to handle the parameter.</returns>
            <remarks>To prevent other mappers from handling a parameter, return a non-null value that does not map to a field on the type.</remarks>
        </member>
        <member name="T:Insight.Database.Mapping.IDualMapper">
            <summary>
            Performs both parameter mapping and column mapping.
            </summary>
        </member>
        <member name="T:Insight.Database.Mapping.IParameterMapper">
            <summary>
            Maps a parameter to a field.
            </summary>
        </member>
        <member name="M:Insight.Database.Mapping.IParameterMapper.MapParameter(System.Type,System.Data.IDbCommand,System.Data.IDataParameter)">
            <summary>
            Returns the name of the field on the given type that maps to the specified parameter.
            </summary>
            <param name="type">The type to test.</param>
            <param name="command">The command being executed.</param>
            <param name="parameter">The parameter being mapped.</param>
            <returns>The name of the field on type, or null to allow other mappers to handle the parameter.</returns>
            <remarks>To prevent other mappers from handling a parameter, return a non-null value that does not map to a field on the type.</remarks>
        </member>
        <member name="T:Insight.Database.Mapping.IMappingTransform">
            <summary>
            Transforms database names (e.g. parameters, columns), into object names.
            </summary>
        </member>
        <member name="M:Insight.Database.Mapping.IMappingTransform.TransformDatabaseName(System.Type,System.String)">
            <summary>
            Transforms the database name (parameter or column) prior to attempting to map the field.
            </summary>
            <param name="type">The type being bound.</param>
            <param name="databaseName">The name from the database.</param>
            <returns>The database name, transformed. For example, by removing underscores.</returns>
        </member>
        <member name="T:Insight.Database.MergeOutputAttribute">
            <summary>
            Marks a method as an Insert/Update/Upsert method so Insight will merge the outputs onto the input objects.
            </summary>
            <remarks>
            Normally when Insight auto-implements an interface, it only merges the results of methods whose names start with Insert or Update.
            If you want a method of a different name to automatically merge the results, add the MergeOutput attribute to the method.
            </remarks>
        </member>
        <member name="M:Insight.Database.MergeOutputAttribute.#ctor">
            <summary>
            Initializes a new instance of the MergeOutputAttribute class.
            </summary>
        </member>
        <member name="M:Insight.Database.MergeOutputAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the MergeOutputAttribute class.
            </summary>
            <param name="merge">True to merge the outputs, false to skip merging.</param>
            <remarks>Use MergeOutput(false) to disable merging for methods named InsertXXX, UpdateXXX, or UpsertXXX.</remarks>
        </member>
        <member name="P:Insight.Database.MergeOutputAttribute.MergeOutputs">
            <summary>
            Gets a value indicating whether the outputs will be merged.
            </summary>
        </member>
        <member name="T:Insight.Database.DbSerializationRule">
            <summary>
            Defines a serialization rule.
            </summary>
        </member>
        <member name="T:Insight.Database.IDbSerializationRule">
            <summary>
            Defines a serialization rule.
            </summary>
        </member>
        <member name="M:Insight.Database.IDbSerializationRule.GetSerializer(System.Type,System.Type,System.String)">
            <summary>
            Given a property, select the proper serializer.
            </summary>
            <param name="recordType">The type of the record being serialized.</param>
            <param name="memberType">The type of the member being serialized.</param>
            <param name="memberName">The name of the member being serialized.</param>
            <returns>The serializer for the object.</returns>
        </member>
        <member name="F:Insight.Database.DbSerializationRule._handlers">
            <summary>
            The list of serialization handlers.
            </summary>
        </member>
        <member name="F:Insight.Database.DbSerializationRule._cachedSerializers">
            <summary>
            The cached serializers.
            </summary>
        </member>
        <member name="F:Insight.Database.DbSerializationRule._defaultConfig">
            <summary>
            The default serialization handler.
            </summary>
        </member>
        <member name="M:Insight.Database.DbSerializationRule.ResetRules">
            <summary>
            Clears all of the serialization rules. Existing bindings are not reset. Use this primarily for testing.
            </summary>
        </member>
        <member name="M:Insight.Database.DbSerializationRule.Serialize``1(Insight.Database.SerializationMode)">
            <summary>
            Tells Insight the SerializationMode to use when serializing all instances of type T.
            </summary>
            <typeparam name="T">The type that is being serialized.</typeparam>
            <param name="mode">The SerializationMode to use.</param>
        </member>
        <member name="M:Insight.Database.DbSerializationRule.Serialize``1(Insight.Database.IDbObjectSerializer)">
            <summary>
            Tells Insight the custom serializer to use when serializing all instances of type T.
            </summary>
            <typeparam name="T">The type that is being serialized.</typeparam>
            <param name="serializer">The serializer to use.</param>
        </member>
        <member name="M:Insight.Database.DbSerializationRule.Serialize``1(System.Type,Insight.Database.SerializationMode)">
            <summary>
            Tells Insight the SerializationMode to use when serializing the given member of type T.
            </summary>
            <typeparam name="T">The type containing the object to be serialized.</typeparam>
            <param name="fieldType">The type of the field.</param>
            <param name="mode">The SerializationMode to use.</param>
        </member>
        <member name="M:Insight.Database.DbSerializationRule.Serialize``1(System.String,Insight.Database.SerializationMode)">
            <summary>
            Tells Insight the SerializationMode to use when serializing the given member of type T.
            </summary>
            <typeparam name="T">The type containing the object to be serialized.</typeparam>
            <param name="fieldName">The name of the field.</param>
            <param name="mode">The SerializationMode to use.</param>
        </member>
        <member name="M:Insight.Database.DbSerializationRule.Serialize``1(System.String,Insight.Database.IDbObjectSerializer)">
            <summary>
            Tells Insight the SerializationMode to use when serializing the given member of type T.
            </summary>
            <typeparam name="T">The type containing the object to be serialized.</typeparam>
            <param name="fieldName">The name of the field.</param>
            <param name="serializer">The serializer to use.</param>
        </member>
        <member name="M:Insight.Database.DbSerializationRule.AddRule(Insight.Database.IDbSerializationRule)">
            <summary>
            Adds a serialization rule to the configuration.
            </summary>
            <param name="rule">The serialization rule.</param>
        </member>
        <member name="M:Insight.Database.DbSerializationRule.Insight#Database#IDbSerializationRule#GetSerializer(System.Type,System.Type,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbSerializationRule.GetSerializer(System.Data.IDbCommand,System.Data.IDataParameter,Insight.Database.CodeGenerator.ClassPropInfo)">
            <summary>
            Gets the serializer for a specific parameter.
            </summary>
            <param name="command">The command that is being bound.</param>
            <param name="parameter">The parameter that is being bound.</param>
            <param name="prop">The property that is being bound.</param>
            <returns>The serializer.</returns>
        </member>
        <member name="M:Insight.Database.DbSerializationRule.GetSerializer(System.Data.IDataReader,System.Int32,Insight.Database.CodeGenerator.ClassPropInfo)">
            <summary>
            Gets the serializer for a specific parameter.
            </summary>
            <param name="reader">The reader that is being bound.</param>
            <param name="column">The index of the column that is being bound.</param>
            <param name="prop">The property that is being bound.</param>
            <returns>The serializer.</returns>
        </member>
        <member name="M:Insight.Database.DbSerializationRule.EvaluateRules(Insight.Database.CodeGenerator.ClassPropInfo)">
            <summary>
            Gets the serializer for a specific property.
            </summary>
            <param name="prop">The property that is being bound.</param>
            <returns>The serializer.</returns>
        </member>
        <member name="P:Insight.Database.DbSerializationRule.RecordType">
            <summary>
            Gets or sets the record type to match. If null, then all record types are matched.
            </summary>
        </member>
        <member name="P:Insight.Database.DbSerializationRule.FieldName">
            <summary>
            Gets or sets the name of the field to match. If null, then fields of any name are matched.
            </summary>
        </member>
        <member name="P:Insight.Database.DbSerializationRule.FieldType">
            <summary>
            Gets or sets the type of the column to match. If null, then fields of any type are matched.
            </summary>
        </member>
        <member name="P:Insight.Database.DbSerializationRule.Mode">
            <summary>
            Gets or sets the serialization mode to use for the any matched columns.
            </summary>
        </member>
        <member name="P:Insight.Database.DbSerializationRule.Serializer">
            <summary>
            Gets or sets the serializer that is used when the rule matches.
            </summary>
        </member>
        <member name="T:Insight.Database.ToStringObjectSerializer">
            <summary>
            Serializes objects to strings. Does not deserialize.
            </summary>
        </member>
        <member name="T:Insight.Database.DbObjectSerializer">
            <summary>
            Converts objects to/from a serialized form (usually string, but binary would work too).
            </summary>
        </member>
        <member name="T:Insight.Database.IDbObjectSerializer">
            <summary>
            Serializes objects in the database.
            </summary>
        </member>
        <member name="M:Insight.Database.IDbObjectSerializer.CanSerialize(System.Type)">
            <summary>
            Returns true if the serializer can convert the type of object to serialized form.
            </summary>
            <param name="type">The type of object.</param>
            <returns>True if the serializer can convert the type of object to serialized form.</returns>
        </member>
        <member name="M:Insight.Database.IDbObjectSerializer.CanDeserialize(System.Type)">
            <summary>
            Returns true if the serializer can convert the type of object from serialized form.
            </summary>
            <param name="type">The type of object.</param>
            <returns>True if the serializer can convert the type of object from serialized form.</returns>
        </member>
        <member name="M:Insight.Database.IDbObjectSerializer.GetSerializedDbType(System.Type)">
            <summary>
            Returns the DbType used to serialize the given type in the database.
            Usually DbType.String, but could also be binary.
            </summary>
            <param name="type">The type of object.</param>
            <returns>The DbType used to store the serialized representation.</returns>
        </member>
        <member name="M:Insight.Database.IDbObjectSerializer.SerializeObject(System.Type,System.Object)">
            <summary>
            Serializes an object, using the type as the root type.
            </summary>
            <param name="type">The root type of object.</param>
            <param name="o">The object to serialize.</param>
            <returns>The serialized form of the object.</returns>
        </member>
        <member name="M:Insight.Database.IDbObjectSerializer.DeserializeObject(System.Type,System.Object)">
            <summary>
            Deserializes an object, using the type as the root type.
            </summary>
            <param name="type">The root type of object.</param>
            <param name="encoded">The object to serialize.</param>
            <returns>The object extracted from the serialized form.</returns>
        </member>
        <member name="M:Insight.Database.DbObjectSerializer.CanSerialize(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbObjectSerializer.CanDeserialize(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbObjectSerializer.GetSerializedDbType(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbObjectSerializer.SerializeObject(System.Type,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbObjectSerializer.DeserializeObject(System.Type,System.Object)">
            <inheritdoc/>
        </member>
        <member name="F:Insight.Database.ToStringObjectSerializer.Serializer">
            <summary>
            The singleton Serializer.
            </summary>
        </member>
        <member name="M:Insight.Database.ToStringObjectSerializer.CanSerialize(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.ToStringObjectSerializer.CanDeserialize(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.ToStringObjectSerializer.SerializeObject(System.Type,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.ToStringObjectSerializer.DeserializeObject(System.Type,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Structure.ChildMapperHelper">
            <summary>
            Helper methods for mapping parent-child relationships.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ChildMapperHelper.GetIDAccessor(System.Type,System.String)">
            <summary>
            Gets the ID accessor for the given type.
            </summary>
            <param name="type">The type to analyze.</param>
            <param name="name">The name of the id field or null to auto-detect.</param>
            <returns>The ID field for the type.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ChildMapperHelper.FindParentIDAccessor(System.Type,System.String)">
            <summary>
            Finds the ID accessor for the given type.
            </summary>
            <param name="type">The type to analyze.</param>
            <param name="name">The name of the id field or null to auto-detect.</param>
            <returns>The ID field for the type, or null if it's not found.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ChildMapperHelper.GetListSetter(System.Type,System.Type,System.String)">
            <summary>
            Gets the list setter for the class, looking for an IList that matches the type.
            </summary>
            <param name="parentType">The type to analyze.</param>
            <param name="childType">The type of object in the list.</param>
            <param name="name">The name of the field or null to auto-detect.</param>
            <returns>An accessor for the ID field.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ChildMapperHelper.IsGenericListType(System.Type,System.Type)">
            <summary>
            Returns true if the type represents a generic of a list.
            Used to determine if the type represents a result set.
            </summary>
            <param name="type">The type to inspect.</param>
            <param name="childType">The type of object in the list.</param>
            <returns>True if it is a list type.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ChildMapperHelper.FindIDAccessor``1(System.Type,System.String,System.String)">
            <summary>
            Finds an IDAccessor to get IDs out of an object.
            </summary>
            <typeparam name="TAttribute">The type of IRecordIDAttribute to use to look for the fields.</typeparam>
            <param name="type">The type to search.</param>
            <param name="name">Optional names of fields to use (comma-separated).</param>
            <param name="defaultFieldName">The name of the default field to use.</param>
            <returns>The IDAccessor or null.</returns>
        </member>
        <member name="T:Insight.Database.Structure.ChildRecordReader`3">
            <summary>
            Reads child records and groups them by ID.
            </summary>
            <typeparam name="TRecord">The type of object to read as the record.</typeparam>
            <typeparam name="TId">The type of the key of the record.</typeparam>
            <typeparam name="TResult">The type of the data of the record.</typeparam>
        </member>
        <member name="T:Insight.Database.Structure.IChildRecordReader`2">
            <summary>
            Knows how to read a record containing an object and its parent id.
            </summary>
            <typeparam name="T">The type of object to read.</typeparam>
            <typeparam name="TId">The type of ID for the object.</typeparam>
        </member>
        <member name="M:Insight.Database.Structure.IChildRecordReader`2.Read(System.Data.IDataReader)">
            <summary>
            Reads children from the reader.
            </summary>
            <param name="reader">The reader.</param>
            <returns>The children grouped by id.</returns>
        </member>
        <member name="M:Insight.Database.Structure.IChildRecordReader`2.ReadAsync(System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Asynchronously reads children from the reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>A task containing the children grouped by id.</returns>
        </member>
        <member name="F:Insight.Database.Structure.ChildRecordReader`3._recordReader">
            <summary>
            The reader to get the whole record.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ChildRecordReader`3._grouping">
            <summary>
            The function to group the results.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ChildRecordReader`3.#ctor(Insight.Database.Structure.IRecordReader{`0},System.Func{System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`1,`2}}})">
            <summary>
            Initializes a new instance of the ChildRecordReader class.
            </summary>
            <param name="recordReader">The reader to get the whole record.</param>
            <param name="grouping">The function to group the results.</param>
        </member>
        <member name="M:Insight.Database.Structure.ChildRecordReader`3.Insight#Database#Structure#IChildRecordReader{TResult@TId}#Read(System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.ChildRecordReader`3.Insight#Database#Structure#IChildRecordReader{TResult@TId}#ReadAsync(System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.ColumnOverride">
            <summary>
            Represents a column mapping that overrides the default rules.
            ColumnOverrides are processed after any default rules are processed.
            </summary>
        </member>
        <member name="M:Insight.Database.ColumnOverride.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ColumnOverride class.
            </summary>
            <param name="columnName">The name of the column to map.</param>
            <param name="fieldName">The name of the field to map to.</param>
        </member>
        <member name="M:Insight.Database.ColumnOverride.#ctor(System.Type,System.String,System.String)">
            <summary>
            Initializes a new instance of the ColumnOverride class.
            </summary>
            <param name="targetType">The type of object to perform mapping on or null to match all objects.</param>
            <param name="columnName">The name of the column to map.</param>
            <param name="fieldName">The name of the field to map to.</param>
        </member>
        <member name="P:Insight.Database.ColumnOverride.TargetType">
            <summary>
            Gets the type of the object being read or null to match all object types.
            </summary>
        </member>
        <member name="P:Insight.Database.ColumnOverride.ColumnName">
            <summary>
            Gets the name of the column to map.
            </summary>
        </member>
        <member name="P:Insight.Database.ColumnOverride.FieldName">
            <summary>
            Gets the name of the target field or property.
            </summary>
        </member>
        <member name="T:Insight.Database.ColumnOverride`1">
            <summary>
            Represents a column mapping that overrides the default rules.
            ColumnOverrides are processed after any default rules are processed.
            </summary>
            <typeparam name="T">The type of object to apply the mapping to.</typeparam>
        </member>
        <member name="M:Insight.Database.ColumnOverride`1.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ColumnOverride class.
            </summary>
            <param name="columnName">The name of the column to map.</param>
            <param name="fieldName">The name of the field to map to.</param>
        </member>
        <member name="T:Insight.Database.Structure.CustomRecordReader`1">
            <summary>
            Implements a custom record reader that can read type T.
            </summary>
            <typeparam name="T">The type to read.</typeparam>
        </member>
        <member name="T:Insight.Database.Structure.RecordReader`1">
            <summary>
            A base implementation of IRecordReader.
            </summary>
            <typeparam name="T">The type of object that can be read.</typeparam>
            <summary>
            A base implementation of IRecordReader.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.IRecordReader`1">
            <summary>
            An object that can read a record of a given type.
            </summary>
            <typeparam name="T">The type of record that can be read.</typeparam>
        </member>
        <member name="T:Insight.Database.Structure.IRecordReader">
            <summary>
            An object that can read a record.
            It needs to be equatable so serializer caching works properly.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.IRecordReader`1.GetRecordReader(System.Data.IDataReader)">
            <summary>
            Gets a function that can read a record from the given data reader.
            </summary>
            <param name="reader">The reader to be read from.</param>
            <returns>A function that can read a record.</returns>
            <remarks>This returns a function because each reader may have a different schema.</remarks>
        </member>
        <member name="F:Insight.Database.Structure.RecordReader`1._autoGroupers">
            <summary>
            Stores the functions that autogroup the given type.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.RecordReader`1.GetRecordReader(System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.RecordReader`1.Equals(Insight.Database.Structure.IRecordReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.RecordReader`1.GetGuardianReader``1">
            <summary>
            Gets a recordreader that can read the guardian of this object.
            </summary>
            <typeparam name="TGuardian">The type of the guardian.</typeparam>
            <returns>A reader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.RecordReader`1.GroupBy``1(System.Func{`0,``0})">
            <summary>
            Returns a child record reader that reads this type of record and groups by the given function.
            </summary>
            <typeparam name="TId">The type of the ID.</typeparam>
            <param name="groupBy">The function that gets the ID to group by.</param>
            <returns>A child record reader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.RecordReader`1.GroupByColumn``1">
            <summary>
            Returns a child record reader that reads this type of record and groups by the first column in the recordset.
            </summary>
            <typeparam name="TId">The type of the ID in the recordset.</typeparam>
            <returns>A child record reader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.RecordReader`1.GroupByAuto``2">
            <summary>
            Returns a child record reader that reads this type of record, and automatically groups by columns that match the parent id.
            </summary>
            <typeparam name="TParent">The type of the parent.</typeparam>
            <typeparam name="TId">The type of the ID.</typeparam>
            <returns>A child record reader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.RecordReader`1.CreateAutoGroupBy``1(System.Type)">
            <summary>
            Creates a child record reader that autogroups the given type, based on the parent's ids.
            </summary>
            <typeparam name="TId">The type of the ID.</typeparam>
            <param name="parentType">The type of the parent.</param>
            <returns>A child record reader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.RecordReader`1.GetGuardianType(System.Int32)">
            <summary>
            Gets the type of a guardian that contains the given number of items.
            </summary>
            <param name="count">The number of items.</param>
            <returns>The guardian type.</returns>
        </member>
        <member name="M:Insight.Database.Structure.RecordReader`1.GroupByColumns``2">
            <summary>
            Returns a child record reader that reads this type of record and groups by the first column in the recordset.
            </summary>
            <typeparam name="T1">The type of the first ID.</typeparam>
            <typeparam name="T2">The type of the second ID.</typeparam>
            <returns>A child record reader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.RecordReader`1.GroupByColumns``3">
            <summary>
            Returns a child record reader that reads this type of record and groups by the first column in the recordset.
            </summary>
            <typeparam name="T1">The type of the first ID.</typeparam>
            <typeparam name="T2">The type of the second ID.</typeparam>
            <typeparam name="T3">The type of the third ID.</typeparam>
            <returns>A child record reader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.RecordReader`1.GroupByColumns``4">
            <summary>
            Returns a child record reader that reads this type of record and groups by the first column in the recordset.
            </summary>
            <typeparam name="T1">The type of the first ID.</typeparam>
            <typeparam name="T2">The type of the second ID.</typeparam>
            <typeparam name="T3">The type of the third ID.</typeparam>
            <typeparam name="T4">The type of the fourth ID.</typeparam>
            <returns>A child record reader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.RecordReader`1.GroupByColumns``5">
            <summary>
            Returns a child record reader that reads this type of record and groups by the first column in the recordset.
            </summary>
            <typeparam name="T1">The type of the first ID.</typeparam>
            <typeparam name="T2">The type of the second ID.</typeparam>
            <typeparam name="T3">The type of the third ID.</typeparam>
            <typeparam name="T4">The type of the fourth ID.</typeparam>
            <typeparam name="T5">The type of the fifth ID.</typeparam>
            <returns>A child record reader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.RecordReader`1.GroupByColumns``6">
            <summary>
            Returns a child record reader that reads this type of record and groups by the first column in the recordset.
            </summary>
            <typeparam name="T1">The type of the first ID.</typeparam>
            <typeparam name="T2">The type of the second ID.</typeparam>
            <typeparam name="T3">The type of the third ID.</typeparam>
            <typeparam name="T4">The type of the fourth ID.</typeparam>
            <typeparam name="T5">The type of the fifth ID.</typeparam>
            <typeparam name="T6">The type of the sixth ID.</typeparam>
            <returns>A child record reader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.RecordReader`1.GroupByColumns``7">
            <summary>
            Returns a child record reader that reads this type of record and groups by the first column in the recordset.
            </summary>
            <typeparam name="T1">The type of the first ID.</typeparam>
            <typeparam name="T2">The type of the second ID.</typeparam>
            <typeparam name="T3">The type of the third ID.</typeparam>
            <typeparam name="T4">The type of the fourth ID.</typeparam>
            <typeparam name="T5">The type of the fifth ID.</typeparam>
            <typeparam name="T6">The type of the sixth ID.</typeparam>
            <typeparam name="T7">The type of the seventh ID.</typeparam>
            <returns>A child record reader.</returns>
        </member>
        <member name="F:Insight.Database.Structure.CustomRecordReader`1._read">
            <summary>
            The reader function.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.CustomRecordReader`1.#ctor(System.Func{System.Data.IDataReader,`0})">
            <summary>
            Initializes a new instance of the CustomRecordReader class.
            </summary>
            <param name="read">The function used to read the object.</param>
        </member>
        <member name="M:Insight.Database.Structure.CustomRecordReader`1.Read(System.Func{System.Data.IDataReader,`0})">
            <summary>
            Constructs a CustomRecordReader from a function.
            </summary>
            <param name="read">The function to read the record.</param>
            <returns>A CustomRecordReader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.CustomRecordReader`1.GetRecordReader(System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.CustomRecordReader`1.GetGuardianReader``1">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.CustomRecordReader`1.Equals(Insight.Database.Structure.IRecordReader)">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Structure.CustomRecordReader`1.CustomChildReader`1">
            <summary>
            Reads the child record from the database.
            </summary>
            <typeparam name="TGuardian">The type of guardian record to use.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.CustomRecordReader`1.CustomChildReader`1._read">
            <summary>
            The function to read a record.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.CustomRecordReader`1.CustomChildReader`1.#ctor(System.Func{System.Data.IDataReader,`0})">
            <summary>
            Initializes a new instance of the CustomChildReader class.
            </summary>
            <param name="read">The function to read the record.</param>
        </member>
        <member name="M:Insight.Database.Structure.CustomRecordReader`1.CustomChildReader`1.Insight#Database#Structure#IRecordReader{TGuardian}#GetRecordReader(System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.CustomRecordReader`1.CustomChildReader`1.System#IEquatable{Insight#Database#Structure#IRecordReader}#Equals(Insight.Database.Structure.IRecordReader)">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Structure.DerivedResultsReader`1">
            <summary>
            Can read classes derived from the Results class.
            </summary>
            <typeparam name="T">The type that can be read.</typeparam>
        </member>
        <member name="T:Insight.Database.Structure.IQueryReader`1">
            <summary>
            Describes an object that can read the results of a query.
            </summary>
            <typeparam name="T">The type of object read from the data raeder.</typeparam>
        </member>
        <member name="T:Insight.Database.Structure.IQueryReader">
            <summary>
            Describes an object that can read the results of a query.
            </summary>
        </member>
        <member name="P:Insight.Database.Structure.IQueryReader.ReturnType">
            <summary>
            Gets the type of object returned from the query reader.
            </summary>
            <returns>The type of object returned from the query reader.</returns>
            <remarks>This is used to support dynamic calls.</remarks>
        </member>
        <member name="M:Insight.Database.Structure.IQueryReader`1.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <summary>
            Reads objects from the reader.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The output of the reader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.IQueryReader`1.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads objects from the reader asynchronously.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">An optional CancellationToken that can cancel the operation.</param>
            <returns>The output of the reader.</returns>
        </member>
        <member name="F:Insight.Database.Structure.DerivedResultsReader`1.Default">
            <summary>
            The default reader for this type.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.DerivedResultsReader`1.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.DerivedResultsReader`1.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Structure.DerivedResultsReader`1.ReturnType">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Structure.Guardian`3">
            <summary>
            Helps a child object find its parent.
            It knows the parent's ID by getting it from the recordset.
            </summary>
            <typeparam name="TChild">The type of the child.</typeparam>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
        </member>
        <member name="T:Insight.Database.Structure.Guardian`2">
            <summary>
            Helps a child object find its parent.
            It knows the parent's ID by getting it from the recordset.
            </summary>
            <typeparam name="TChild">The type of the child.</typeparam>
            <typeparam name="TId">The type of the ID.</typeparam>
        </member>
        <member name="T:Insight.Database.Structure.Guardian`1">
            <summary>
            Helps a child object find its parent.
            It knows the parent's ID by getting it from the recordset.
            </summary>
            <typeparam name="TChild">The type of the child.</typeparam>
        </member>
        <member name="M:Insight.Database.Structure.Guardian`1.ReadCurrent(System.Data.IDataReader)">
            <summary>
            Reads the current record from the data reader.
            </summary>
            <param name="reader">The reader to read from.</param>
        </member>
        <member name="M:Insight.Database.Structure.Guardian`1.GetID">
            <summary>
            Returns the ID portion of the guardian.
            </summary>
            <returns>The ID of the guardian.</returns>
        </member>
        <member name="P:Insight.Database.Structure.Guardian`1.Object">
            <summary>
            Gets or sets the child object.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.Guardian`2.ReadCurrent(System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.Guardian`2.GetID">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Structure.Guardian`2.ParentId1">
            <summary>
            Gets or sets the ID of the parent. This is assumed to be the first column in the recordset.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.Guardian`3.ReadCurrent(System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.Guardian`3.GetID">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Structure.Guardian`3.ParentId2">
            <summary>
            Gets or sets the ID of the parent. This is assumed to be the first column in the recordset.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.Guardian`4">
            <summary>
            Helps a child object find its parent.
            It knows the parent's ID by getting it from the recordset.
            </summary>
            <typeparam name="TChild">The type of the child.</typeparam>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
        </member>
        <member name="M:Insight.Database.Structure.Guardian`4.ReadCurrent(System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.Guardian`4.GetID">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Structure.Guardian`4.ParentId3">
            <summary>
            Gets or sets the ID of the parent. This is assumed to be the first column in the recordset.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.Guardian`5">
            <summary>
            Helps a child object find its parent.
            It knows the parent's ID by getting it from the recordset.
            </summary>
            <typeparam name="TChild">The type of the child.</typeparam>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
        </member>
        <member name="M:Insight.Database.Structure.Guardian`5.ReadCurrent(System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.Guardian`5.GetID">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Structure.Guardian`5.ParentId4">
            <summary>
            Gets or sets the ID of the parent. This is assumed to be the first column in the recordset.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.Guardian`6">
            <summary>
            Helps a child object find its parent.
            It knows the parent's ID by getting it from the recordset.
            </summary>
            <typeparam name="TChild">The type of the child.</typeparam>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
        </member>
        <member name="M:Insight.Database.Structure.Guardian`6.ReadCurrent(System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.Guardian`6.GetID">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Structure.Guardian`6.ParentId5">
            <summary>
            Gets or sets the ID of the parent. This is assumed to be the first column in the recordset.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.Guardian`7">
            <summary>
            Helps a child object find its parent.
            It knows the parent's ID by getting it from the recordset.
            </summary>
            <typeparam name="TChild">The type of the child.</typeparam>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
        </member>
        <member name="M:Insight.Database.Structure.Guardian`7.ReadCurrent(System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.Guardian`7.GetID">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Structure.Guardian`7.ParentId6">
            <summary>
            Gets or sets the ID of the parent. This is assumed to be the first column in the recordset.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.Guardian`8">
            <summary>
            Helps a child object find its parent.
            It knows the parent's ID by getting it from the recordset.
            </summary>
            <typeparam name="TChild">The type of the child.</typeparam>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
        </member>
        <member name="M:Insight.Database.Structure.Guardian`8.ReadCurrent(System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.Guardian`8.GetID">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Structure.Guardian`8.ParentId7">
            <summary>
            Gets or sets the ID of the parent. This is assumed to be the first column in the recordset.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.IChildMapper`3">
            <summary>
            An instance of IMapper can map TChild to somewhere inside TRoot.
            This is a one-to-many mapping, and TChild may go into sublayers of the structure.
            </summary>
            <typeparam name="TRoot">The type of the root object.</typeparam>
            <typeparam name="TChild">The type of the child object.</typeparam>
            <typeparam name="TId">The type of the ID value.</typeparam>
        </member>
        <member name="M:Insight.Database.Structure.IChildMapper`3.MapChildren(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`2,`1}})">
            <summary>
            Maps a list of children into the structure.
            </summary>
            <param name="roots">The list of root objects.</param>
            <param name="children">The list of child objects with their parent's id.</param>
        </member>
        <member name="T:Insight.Database.Structure.IDAccessor">
            <summary>
            Represents a dynamic method that extracts the ID portion of an object.
            When multiple fields are part of the ID, they are combined into a Tuple.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.IDAccessor._propInfo">
            <summary>
            The list of properties to extract.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.IDAccessor.#ctor(Insight.Database.CodeGenerator.ClassPropInfo)">
            <summary>
            Initializes a new instance of the IDAccessor class.
            </summary>
            <param name="propInfo">The property to access.</param>
        </member>
        <member name="M:Insight.Database.Structure.IDAccessor.#ctor(System.Collections.Generic.IEnumerable{Insight.Database.CodeGenerator.ClassPropInfo})">
            <summary>
            Initializes a new instance of the IDAccessor class.
            </summary>
            <param name="propInfo">The properties to access.</param>
        </member>
        <member name="M:Insight.Database.Structure.IDAccessor.CreateGetMethod``2">
            <summary>
            Creates a dynamic method that gets the IDs from the object.
            </summary>
            <typeparam name="TObject">The type of object.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <returns>A method that can extract the IDs.</returns>
        </member>
        <member name="M:Insight.Database.Structure.IDAccessor.GetTupleType(System.Int32)">
            <summary>
            Gets the generic type of a tuple that can store the given number of parameters.
            </summary>
            <param name="count">The number of parameters.</param>
            <returns>The tuple type.</returns>
        </member>
        <member name="P:Insight.Database.Structure.IDAccessor.MemberType">
            <summary>
            Gets the type of the ID.
            </summary>
        </member>
        <member name="P:Insight.Database.Structure.IDAccessor.MemberTypes">
            <summary>
            Gets the list types contained in the ID.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.IRecordIdAttribute">
            <summary>
            Common functions of the RecordIdAttribute classes.
            </summary>
        </member>
        <member name="P:Insight.Database.Structure.IRecordIdAttribute.Order">
            <summary>
            Gets the order of the record ids.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.IRecordStructure">
            <summary>
            Tells the serialization engine the structure of a record.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.IRecordStructure.GetObjectTypes">
            <summary>
            Gets a list of the subtypes in the record.
            </summary>
            <returns>The list of the subtypes in the record.</returns>
        </member>
        <member name="M:Insight.Database.Structure.IRecordStructure.GetSplitColumns">
            <summary>
            Gets a mapping of types to column names. The column names are used to override how Insight splits records into objects.
            </summary>
            <returns>A mapping of the split columns or null to use the default.</returns>
        </member>
        <member name="T:Insight.Database.Structure.ListReader`1">
            <summary>
            Reads a list of objects from a data reader.
            </summary>
            <typeparam name="T">The type of object to read from each record in the reader.</typeparam>
        </member>
        <member name="T:Insight.Database.Structure.QueryReader`1">
            <summary>
            Reads objects from a Data Reader.
            </summary>
            <typeparam name="T">The type of object read from the reader.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.QueryReader`1._children">
            <summary>
            The set of child records to read from the stream.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.QueryReader`1.#ctor(Insight.Database.Structure.IRecordReader{`0})">
            <summary>
            Initializes a new instance of the QueryReader class.
            </summary>
            <param name="recordReader">A mapping that can be used to read a single record from the stream.</param>
        </member>
        <member name="M:Insight.Database.Structure.QueryReader`1.AddChild(Insight.Database.Structure.Children{`0})">
            <summary>
            Adds a child reader to this reader.
            </summary>
            <param name="child">The child reader to add.</param>
            <returns>A QueryReader that also reads the specified children.</returns>
        </member>
        <member name="M:Insight.Database.Structure.QueryReader`1.ReadChildren(System.Data.IDataReader,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Reads all of the children from the stream.
            </summary>
            <param name="reader">The data reader to read from.</param>
            <param name="results">The results of the current read operation.</param>
        </member>
        <member name="M:Insight.Database.Structure.QueryReader`1.ReadChildrenAsync(System.Data.IDataReader,System.Collections.Generic.IEnumerable{`0},Insight.Database.CancellationToken)">
            <summary>
            Reads all of the children from the stream asynchronously.
            </summary>
            <param name="reader">The data reader to read from.</param>
            <param name="results">The results of the current read operation.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>A task representing the completion of the read.</returns>
        </member>
        <member name="P:Insight.Database.Structure.QueryReader`1.RecordReader">
            <summary>
            Gets the mapping used to read an individual record from this stream.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ListReader`1.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReader`1.#ctor">
            <summary>
            Initializes a new instance of the ListReader class.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReader`1.#ctor(Insight.Database.Structure.IRecordReader{`0})">
            <summary>
            Initializes a new instance of the ListReader class.
            </summary>
            <param name="recordReader">The one-to-one mapping to use to read objects from each record.</param>
        </member>
        <member name="M:Insight.Database.Structure.ListReader`1.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.ListReader`1.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.ListReader`1.AddChild(Insight.Database.Structure.Children{`0})">
            <summary>
            Adds a child reader to this reader.
            </summary>
            <param name="child">The child reader to add.</param>
            <returns>A list reader that also reads the specified child.</returns>
        </member>
        <member name="P:Insight.Database.Structure.ListReader`1.ReturnType">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Structure.ListReaderAdapter`2">
            <summary>
            Allows ListReader to return any of the interfaces implemented by List.
            Used by InterfaceGenerator. Not intended to be used by user code.
            </summary>
            <typeparam name="TList">The type of list to return.</typeparam>
            <typeparam name="T1">The type of object to return.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReaderAdapter`2.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`2.#ctor">
            <summary>
            Initializes a new instance of the ListReaderAdapter class.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`2.#ctor(Insight.Database.Structure.IRecordReader{`1})">
            <summary>
            Initializes a new instance of the ListReaderAdapter class.
            </summary>
            <param name="recordReader">The one-to-one mapping to use to read objects from each record.</param>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`2.Insight#Database#Structure#IQueryReader{TList}#Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`2.Insight#Database#Structure#IQueryReader{TList}#ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Structure.ListReaderAdapter`2.Insight#Database#Structure#IQueryReader#ReturnType">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Structure.ListReader`2">
            <summary>
            Reads a list of objects from a data reader.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReader`2.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReader`2.#ctor">
            <summary>
            Initializes a new instance of the ListReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.ListReaderAdapter`3">
            <summary>
            Allows ListReader to return any of the interfaces implemented by List.
            Used by InterfaceGenerator. Not intended to be used by user code.
            </summary>
            <typeparam name="TList">The type of list to return.</typeparam>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReaderAdapter`3.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`3.Insight#Database#Structure#IQueryReader{TList}#Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`3.Insight#Database#Structure#IQueryReader{TList}#ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Structure.ListReaderAdapter`3.Insight#Database#Structure#IQueryReader#ReturnType">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Structure.ListReader`3">
            <summary>
            Reads a list of objects from a data reader.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReader`3.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReader`3.#ctor">
            <summary>
            Initializes a new instance of the ListReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.ListReaderAdapter`4">
            <summary>
            Allows ListReader to return any of the interfaces implemented by List.
            Used by InterfaceGenerator. Not intended to be used by user code.
            </summary>
            <typeparam name="TList">The type of list to return.</typeparam>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReaderAdapter`4.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`4.Insight#Database#Structure#IQueryReader{TList}#Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`4.Insight#Database#Structure#IQueryReader{TList}#ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Structure.ListReaderAdapter`4.Insight#Database#Structure#IQueryReader#ReturnType">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Structure.ListReader`4">
            <summary>
            Reads a list of objects from a data reader.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReader`4.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReader`4.#ctor">
            <summary>
            Initializes a new instance of the ListReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.ListReaderAdapter`5">
            <summary>
            Allows ListReader to return any of the interfaces implemented by List.
            Used by InterfaceGenerator. Not intended to be used by user code.
            </summary>
            <typeparam name="TList">The type of list to return.</typeparam>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReaderAdapter`5.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`5.Insight#Database#Structure#IQueryReader{TList}#Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`5.Insight#Database#Structure#IQueryReader{TList}#ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Structure.ListReaderAdapter`5.Insight#Database#Structure#IQueryReader#ReturnType">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Structure.ListReader`5">
            <summary>
            Reads a list of objects from a data reader.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReader`5.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReader`5.#ctor">
            <summary>
            Initializes a new instance of the ListReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.ListReaderAdapter`6">
            <summary>
            Allows ListReader to return any of the interfaces implemented by List.
            Used by InterfaceGenerator. Not intended to be used by user code.
            </summary>
            <typeparam name="TList">The type of list to return.</typeparam>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReaderAdapter`6.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`6.Insight#Database#Structure#IQueryReader{TList}#Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`6.Insight#Database#Structure#IQueryReader{TList}#ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Structure.ListReaderAdapter`6.Insight#Database#Structure#IQueryReader#ReturnType">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Structure.ListReader`6">
            <summary>
            Reads a list of objects from a data reader.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReader`6.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReader`6.#ctor">
            <summary>
            Initializes a new instance of the ListReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.ListReaderAdapter`7">
            <summary>
            Allows ListReader to return any of the interfaces implemented by List.
            Used by InterfaceGenerator. Not intended to be used by user code.
            </summary>
            <typeparam name="TList">The type of list to return.</typeparam>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReaderAdapter`7.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`7.Insight#Database#Structure#IQueryReader{TList}#Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`7.Insight#Database#Structure#IQueryReader{TList}#ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Structure.ListReaderAdapter`7.Insight#Database#Structure#IQueryReader#ReturnType">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Structure.ListReader`7">
            <summary>
            Reads a list of objects from a data reader.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReader`7.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReader`7.#ctor">
            <summary>
            Initializes a new instance of the ListReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.ListReaderAdapter`8">
            <summary>
            Allows ListReader to return any of the interfaces implemented by List.
            Used by InterfaceGenerator. Not intended to be used by user code.
            </summary>
            <typeparam name="TList">The type of list to return.</typeparam>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReaderAdapter`8.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`8.Insight#Database#Structure#IQueryReader{TList}#Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`8.Insight#Database#Structure#IQueryReader{TList}#ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Structure.ListReaderAdapter`8.Insight#Database#Structure#IQueryReader#ReturnType">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Structure.ListReader`8">
            <summary>
            Reads a list of objects from a data reader.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReader`8.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReader`8.#ctor">
            <summary>
            Initializes a new instance of the ListReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.ListReaderAdapter`9">
            <summary>
            Allows ListReader to return any of the interfaces implemented by List.
            Used by InterfaceGenerator. Not intended to be used by user code.
            </summary>
            <typeparam name="TList">The type of list to return.</typeparam>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReaderAdapter`9.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`9.Insight#Database#Structure#IQueryReader{TList}#Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`9.Insight#Database#Structure#IQueryReader{TList}#ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Structure.ListReaderAdapter`9.Insight#Database#Structure#IQueryReader#ReturnType">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Structure.ListReader`9">
            <summary>
            Reads a list of objects from a data reader.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReader`9.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReader`9.#ctor">
            <summary>
            Initializes a new instance of the ListReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.ListReaderAdapter`10">
            <summary>
            Allows ListReader to return any of the interfaces implemented by List.
            Used by InterfaceGenerator. Not intended to be used by user code.
            </summary>
            <typeparam name="TList">The type of list to return.</typeparam>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReaderAdapter`10.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`10.Insight#Database#Structure#IQueryReader{TList}#Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`10.Insight#Database#Structure#IQueryReader{TList}#ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Structure.ListReaderAdapter`10.Insight#Database#Structure#IQueryReader#ReturnType">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Structure.ListReader`10">
            <summary>
            Reads a list of objects from a data reader.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReader`10.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReader`10.#ctor">
            <summary>
            Initializes a new instance of the ListReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.ListReaderAdapter`11">
            <summary>
            Allows ListReader to return any of the interfaces implemented by List.
            Used by InterfaceGenerator. Not intended to be used by user code.
            </summary>
            <typeparam name="TList">The type of list to return.</typeparam>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReaderAdapter`11.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`11.Insight#Database#Structure#IQueryReader{TList}#Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`11.Insight#Database#Structure#IQueryReader{TList}#ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Structure.ListReaderAdapter`11.Insight#Database#Structure#IQueryReader#ReturnType">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Structure.ListReader`11">
            <summary>
            Reads a list of objects from a data reader.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReader`11.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReader`11.#ctor">
            <summary>
            Initializes a new instance of the ListReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.ListReaderAdapter`12">
            <summary>
            Allows ListReader to return any of the interfaces implemented by List.
            Used by InterfaceGenerator. Not intended to be used by user code.
            </summary>
            <typeparam name="TList">The type of list to return.</typeparam>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReaderAdapter`12.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`12.Insight#Database#Structure#IQueryReader{TList}#Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`12.Insight#Database#Structure#IQueryReader{TList}#ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Structure.ListReaderAdapter`12.Insight#Database#Structure#IQueryReader#ReturnType">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Structure.ListReader`12">
            <summary>
            Reads a list of objects from a data reader.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReader`12.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReader`12.#ctor">
            <summary>
            Initializes a new instance of the ListReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.ListReaderAdapter`13">
            <summary>
            Allows ListReader to return any of the interfaces implemented by List.
            Used by InterfaceGenerator. Not intended to be used by user code.
            </summary>
            <typeparam name="TList">The type of list to return.</typeparam>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReaderAdapter`13.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`13.Insight#Database#Structure#IQueryReader{TList}#Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`13.Insight#Database#Structure#IQueryReader{TList}#ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Structure.ListReaderAdapter`13.Insight#Database#Structure#IQueryReader#ReturnType">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Structure.ListReader`13">
            <summary>
            Reads a list of objects from a data reader.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReader`13.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReader`13.#ctor">
            <summary>
            Initializes a new instance of the ListReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.ListReaderAdapter`14">
            <summary>
            Allows ListReader to return any of the interfaces implemented by List.
            Used by InterfaceGenerator. Not intended to be used by user code.
            </summary>
            <typeparam name="TList">The type of list to return.</typeparam>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReaderAdapter`14.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`14.Insight#Database#Structure#IQueryReader{TList}#Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`14.Insight#Database#Structure#IQueryReader{TList}#ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Structure.ListReaderAdapter`14.Insight#Database#Structure#IQueryReader#ReturnType">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Structure.ListReader`14">
            <summary>
            Reads a list of objects from a data reader.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReader`14.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReader`14.#ctor">
            <summary>
            Initializes a new instance of the ListReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.ListReaderAdapter`15">
            <summary>
            Allows ListReader to return any of the interfaces implemented by List.
            Used by InterfaceGenerator. Not intended to be used by user code.
            </summary>
            <typeparam name="TList">The type of list to return.</typeparam>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReaderAdapter`15.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`15.Insight#Database#Structure#IQueryReader{TList}#Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`15.Insight#Database#Structure#IQueryReader{TList}#ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Structure.ListReaderAdapter`15.Insight#Database#Structure#IQueryReader#ReturnType">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Structure.ListReader`15">
            <summary>
            Reads a list of objects from a data reader.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReader`15.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReader`15.#ctor">
            <summary>
            Initializes a new instance of the ListReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.ListReaderAdapter`16">
            <summary>
            Allows ListReader to return any of the interfaces implemented by List.
            Used by InterfaceGenerator. Not intended to be used by user code.
            </summary>
            <typeparam name="TList">The type of list to return.</typeparam>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReaderAdapter`16.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`16.Insight#Database#Structure#IQueryReader{TList}#Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`16.Insight#Database#Structure#IQueryReader{TList}#ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Structure.ListReaderAdapter`16.Insight#Database#Structure#IQueryReader#ReturnType">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Structure.ListReader`16">
            <summary>
            Reads a list of objects from a data reader.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth subobject.</typeparam>
            <typeparam name="T16">The type of the data in the sixteenth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReader`16.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReader`16.#ctor">
            <summary>
            Initializes a new instance of the ListReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.ListReaderAdapter`17">
            <summary>
            Allows ListReader to return any of the interfaces implemented by List.
            Used by InterfaceGenerator. Not intended to be used by user code.
            </summary>
            <typeparam name="TList">The type of list to return.</typeparam>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth subobject.</typeparam>
            <typeparam name="T16">The type of the data in the sixteenth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ListReaderAdapter`17.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`17.Insight#Database#Structure#IQueryReader{TList}#Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.ListReaderAdapter`17.Insight#Database#Structure#IQueryReader{TList}#ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Structure.ListReaderAdapter`17.Insight#Database#Structure#IQueryReader#ReturnType">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Structure.MultiReader`1">
            <summary>
            A RecordReader that can read more than one type of class from a record stream.
            </summary>
            <typeparam name="TBase">The base type of all of the records returned.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.MultiReader`1._selector">
            <summary>
            The selector for the record readers.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.MultiReader`1.#ctor(System.Func{System.Data.IDataReader,Insight.Database.Structure.IRecordReader{`0}})">
            <summary>
            Initializes a new instance of the MultiReader class.
            </summary>
            <param name="selector">The function used to select the record reader for an individual record.</param>
        </member>
        <member name="M:Insight.Database.Structure.MultiReader`1.GetRecordReader(System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.MultiReader`1.Equals(Insight.Database.Structure.IRecordReader)">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.OneToOne`2">
            <summary>
            Represents a one-to-one object mapping that is returned in a single recordset.
            </summary>
            <typeparam name="T1">The type of the first subobject in the record.</typeparam>
            <typeparam name="T2">The type of the second subobject in the record.</typeparam>
        </member>
        <member name="T:Insight.Database.OneToOne`1">
            <summary>
            Represents a one-to-one object mapping that is returned in a single recordset.
            </summary>
            <typeparam name="T">The type of root object that is being returned.</typeparam>
        </member>
        <member name="F:Insight.Database.OneToOne`1.Records">
            <summary>
            Gets the static definition of this record type.
            </summary>
        </member>
        <member name="F:Insight.Database.OneToOne`1._objectTypes">
            <summary>
            The type of objects returned by this mapping.
            </summary>
        </member>
        <member name="F:Insight.Database.OneToOne`1._hashCode">
            <summary>
            The hash code for this mapping.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`1.#cctor">
            <summary>
            Initializes static members of the OneToOne class.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`1.#ctor">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`1.#ctor(Insight.Database.ColumnOverride[])">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
        </member>
        <member name="M:Insight.Database.OneToOne`1.#ctor(System.Action{`0},System.Collections.Generic.IEnumerable{Insight.Database.ColumnOverride},System.Collections.Generic.IDictionary{System.Type,System.String})">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="callback">An optional callback that can be used to assemble the records.</param>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
            <param name="splitColumns">An optional map of the names of ID columns that can be used to split the recordset.</param>
        </member>
        <member name="M:Insight.Database.OneToOne`1.Equals(Insight.Database.Structure.IRecordReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`1.Insight#Database#Structure#IRecordStructure#GetObjectTypes">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`1.Insight#Database#Structure#IRecordStructure#GetSplitColumns">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`1.Insight#Database#Mapping#IColumnMapper#MapColumn(System.Type,System.Data.IDataReader,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`1.GetRecordReader(System.Data.IDataReader)">
            <summary>
            Returns a function that can read a single record from a given data reader.
            </summary>
            <param name="reader">The reader that will be read.</param>
            <returns>A function that can read a single record.</returns>
        </member>
        <member name="M:Insight.Database.OneToOne`1.GetGuardianReader``1">
            <summary>
            Returns the definition for a guardian record containing a ParentID and a child object.
            </summary>
            <typeparam name="TGuardian">The type of the ID field.</typeparam>
            <returns>The record definition.</returns>
        </member>
        <member name="M:Insight.Database.OneToOne`1.IsDefaultReader">
            <summary>
            Determines if this reader only uses the default options.
            </summary>
            <returns>True if no additional options were used.</returns>
        </member>
        <member name="M:Insight.Database.OneToOne`1.Initialize(System.Delegate,System.Collections.Generic.IEnumerable{Insight.Database.ColumnOverride},System.Collections.Generic.IDictionary{System.Type,System.String})">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="callback">An optional callback that can be used to assemble the records.</param>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
            <param name="splitColumns">An optional map of the names of columns that can be used to split the recordset.</param>
        </member>
        <member name="M:Insight.Database.OneToOne`1.HandleCallback(System.Object[])">
            <summary>
            Handles a callback to assemble the objects.
            </summary>
            <param name="objects">The objects read from the record.</param>
        </member>
        <member name="P:Insight.Database.OneToOne`1.Callback">
            <summary>
            Gets an optional callback that can be used to assemble the records.
            </summary>
        </member>
        <member name="P:Insight.Database.OneToOne`1.ColumnOverrides">
            <summary>
            Gets an optional column mapping override;
            Type is the type it applies to, then column name, then field name.
            </summary>
        </member>
        <member name="P:Insight.Database.OneToOne`1.SplitColumns">
            <summary>
            Gets an optional mapping of the name of columns that is used to split the recordset.
            </summary>
        </member>
        <member name="F:Insight.Database.OneToOne`2.Records">
            <summary>
            The static definition of this record type.
            </summary>
        </member>
        <member name="F:Insight.Database.OneToOne`2._objectTypes">
            <summary>
            The types of objects returned by this record type.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`2.#ctor">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`2.#ctor(Insight.Database.ColumnOverride[])">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
        </member>
        <member name="M:Insight.Database.OneToOne`2.#ctor(System.Action{`0,`1},System.Collections.Generic.IEnumerable{Insight.Database.ColumnOverride},System.Collections.Generic.IDictionary{System.Type,System.String})">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="callback">An optional callback that can be used to assemble the records.</param>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
            <param name="splitColumns">An optional map of the names of ID columns that can be used to split the recordset.</param>
        </member>
        <member name="M:Insight.Database.OneToOne`2.Insight#Database#Structure#IRecordStructure#GetObjectTypes">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`2.GetGuardianReader``1">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`2.HandleCallback(System.Object[])">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.OneToOne`3">
            <summary>
            Represents a one-to-one object mapping that is returned in a single recordset.
            </summary>
            <typeparam name="T1">The type of the first subobject in the record.</typeparam>
            <typeparam name="T2">The type of the second subobject in the record.</typeparam>
            <typeparam name="T3">The type of the third subobject in the record.</typeparam>
        </member>
        <member name="F:Insight.Database.OneToOne`3.Records">
            <summary>
            The static definition of this record type.
            </summary>
        </member>
        <member name="F:Insight.Database.OneToOne`3._objectTypes">
            <summary>
            The types of objects returned by this record type.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`3.#ctor">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`3.#ctor(Insight.Database.ColumnOverride[])">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
        </member>
        <member name="M:Insight.Database.OneToOne`3.#ctor(System.Action{`0,`1,`2},System.Collections.Generic.IEnumerable{Insight.Database.ColumnOverride},System.Collections.Generic.IDictionary{System.Type,System.String})">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="callback">An optional callback that can be used to assemble the records.</param>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
            <param name="splitColumns">An optional map of the names of ID columns that can be used to split the recordset.</param>
        </member>
        <member name="M:Insight.Database.OneToOne`3.Insight#Database#Structure#IRecordStructure#GetObjectTypes">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`3.GetGuardianReader``1">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`3.HandleCallback(System.Object[])">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.OneToOne`4">
            <summary>
            Represents a one-to-one object mapping that is returned in a single recordset.
            </summary>
            <typeparam name="T1">The type of the first subobject in the record.</typeparam>
            <typeparam name="T2">The type of the second subobject in the record.</typeparam>
            <typeparam name="T3">The type of the third subobject in the record.</typeparam>
            <typeparam name="T4">The type of the fourth subobject in the record.</typeparam>
        </member>
        <member name="F:Insight.Database.OneToOne`4.Records">
            <summary>
            The static definition of this record type.
            </summary>
        </member>
        <member name="F:Insight.Database.OneToOne`4._objectTypes">
            <summary>
            The types of objects returned by this record type.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`4.#ctor">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`4.#ctor(Insight.Database.ColumnOverride[])">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
        </member>
        <member name="M:Insight.Database.OneToOne`4.#ctor(System.Action{`0,`1,`2,`3},System.Collections.Generic.IEnumerable{Insight.Database.ColumnOverride},System.Collections.Generic.IDictionary{System.Type,System.String})">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="callback">An optional callback that can be used to assemble the records.</param>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
            <param name="splitColumns">An optional map of the names of ID columns that can be used to split the recordset.</param>
        </member>
        <member name="M:Insight.Database.OneToOne`4.Insight#Database#Structure#IRecordStructure#GetObjectTypes">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`4.GetGuardianReader``1">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`4.HandleCallback(System.Object[])">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.OneToOne`5">
            <summary>
            Represents a one-to-one object mapping that is returned in a single recordset.
            </summary>
            <typeparam name="T1">The type of the first subobject in the record.</typeparam>
            <typeparam name="T2">The type of the second subobject in the record.</typeparam>
            <typeparam name="T3">The type of the third subobject in the record.</typeparam>
            <typeparam name="T4">The type of the fourth subobject in the record.</typeparam>
            <typeparam name="T5">The type of the fifth subobject in the record.</typeparam>
        </member>
        <member name="F:Insight.Database.OneToOne`5.Records">
            <summary>
            The static definition of this record type.
            </summary>
        </member>
        <member name="F:Insight.Database.OneToOne`5._objectTypes">
            <summary>
            The types of objects returned by this record type.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`5.#ctor">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`5.#ctor(Insight.Database.ColumnOverride[])">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
        </member>
        <member name="M:Insight.Database.OneToOne`5.#ctor(Insight.Database.Action{`0,`1,`2,`3,`4},System.Collections.Generic.IEnumerable{Insight.Database.ColumnOverride},System.Collections.Generic.IDictionary{System.Type,System.String})">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="callback">An optional callback that can be used to assemble the records.</param>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
            <param name="splitColumns">An optional map of the names of ID columns that can be used to split the recordset.</param>
        </member>
        <member name="M:Insight.Database.OneToOne`5.Insight#Database#Structure#IRecordStructure#GetObjectTypes">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`5.GetGuardianReader``1">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`5.HandleCallback(System.Object[])">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.OneToOne`6">
            <summary>
            Represents a one-to-one object mapping that is returned in a single recordset.
            </summary>
            <typeparam name="T1">The type of the first subobject in the record.</typeparam>
            <typeparam name="T2">The type of the second subobject in the record.</typeparam>
            <typeparam name="T3">The type of the third subobject in the record.</typeparam>
            <typeparam name="T4">The type of the fourth subobject in the record.</typeparam>
            <typeparam name="T5">The type of the fifth subobject in the record.</typeparam>
            <typeparam name="T6">The type of the sixth subobject in the record.</typeparam>
        </member>
        <member name="F:Insight.Database.OneToOne`6.Records">
            <summary>
            The static definition of this record type.
            </summary>
        </member>
        <member name="F:Insight.Database.OneToOne`6._objectTypes">
            <summary>
            The types of objects returned by this record type.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`6.#ctor">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`6.#ctor(Insight.Database.ColumnOverride[])">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
        </member>
        <member name="M:Insight.Database.OneToOne`6.#ctor(Insight.Database.Action{`0,`1,`2,`3,`4,`5},System.Collections.Generic.IEnumerable{Insight.Database.ColumnOverride},System.Collections.Generic.IDictionary{System.Type,System.String})">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="callback">An optional callback that can be used to assemble the records.</param>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
            <param name="splitColumns">An optional map of the names of ID columns that can be used to split the recordset.</param>
        </member>
        <member name="M:Insight.Database.OneToOne`6.Insight#Database#Structure#IRecordStructure#GetObjectTypes">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`6.GetGuardianReader``1">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`6.HandleCallback(System.Object[])">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.OneToOne`7">
            <summary>
            Represents a one-to-one object mapping that is returned in a single recordset.
            </summary>
            <typeparam name="T1">The type of the first subobject in the record.</typeparam>
            <typeparam name="T2">The type of the second subobject in the record.</typeparam>
            <typeparam name="T3">The type of the third subobject in the record.</typeparam>
            <typeparam name="T4">The type of the fourth subobject in the record.</typeparam>
            <typeparam name="T5">The type of the fifth subobject in the record.</typeparam>
            <typeparam name="T6">The type of the sixth subobject in the record.</typeparam>
            <typeparam name="T7">The type of the seventh subobject in the record.</typeparam>
        </member>
        <member name="F:Insight.Database.OneToOne`7.Records">
            <summary>
            The static definition of this record type.
            </summary>
        </member>
        <member name="F:Insight.Database.OneToOne`7._objectTypes">
            <summary>
            The types of objects returned by this record type.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`7.#ctor">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`7.#ctor(Insight.Database.ColumnOverride[])">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
        </member>
        <member name="M:Insight.Database.OneToOne`7.#ctor(Insight.Database.Action{`0,`1,`2,`3,`4,`5,`6},System.Collections.Generic.IEnumerable{Insight.Database.ColumnOverride},System.Collections.Generic.IDictionary{System.Type,System.String})">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="callback">An optional callback that can be used to assemble the records.</param>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
            <param name="splitColumns">An optional map of the names of ID columns that can be used to split the recordset.</param>
        </member>
        <member name="M:Insight.Database.OneToOne`7.Insight#Database#Structure#IRecordStructure#GetObjectTypes">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`7.GetGuardianReader``1">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`7.HandleCallback(System.Object[])">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.OneToOne`8">
            <summary>
            Represents a one-to-one object mapping that is returned in a single recordset.
            </summary>
            <typeparam name="T1">The type of the first subobject in the record.</typeparam>
            <typeparam name="T2">The type of the second subobject in the record.</typeparam>
            <typeparam name="T3">The type of the third subobject in the record.</typeparam>
            <typeparam name="T4">The type of the fourth subobject in the record.</typeparam>
            <typeparam name="T5">The type of the fifth subobject in the record.</typeparam>
            <typeparam name="T6">The type of the sixth subobject in the record.</typeparam>
            <typeparam name="T7">The type of the seventh subobject in the record.</typeparam>
            <typeparam name="T8">The type of the eighth subobject in the record.</typeparam>
        </member>
        <member name="F:Insight.Database.OneToOne`8.Records">
            <summary>
            The static definition of this record type.
            </summary>
        </member>
        <member name="F:Insight.Database.OneToOne`8._objectTypes">
            <summary>
            The types of objects returned by this record type.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`8.#ctor">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`8.#ctor(Insight.Database.ColumnOverride[])">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
        </member>
        <member name="M:Insight.Database.OneToOne`8.#ctor(Insight.Database.Action{`0,`1,`2,`3,`4,`5,`6,`7},System.Collections.Generic.IEnumerable{Insight.Database.ColumnOverride},System.Collections.Generic.IDictionary{System.Type,System.String})">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="callback">An optional callback that can be used to assemble the records.</param>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
            <param name="splitColumns">An optional map of the names of ID columns that can be used to split the recordset.</param>
        </member>
        <member name="M:Insight.Database.OneToOne`8.Insight#Database#Structure#IRecordStructure#GetObjectTypes">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`8.GetGuardianReader``1">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`8.HandleCallback(System.Object[])">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.OneToOne`9">
            <summary>
            Represents a one-to-one object mapping that is returned in a single recordset.
            </summary>
            <typeparam name="T1">The type of the first subobject in the record.</typeparam>
            <typeparam name="T2">The type of the second subobject in the record.</typeparam>
            <typeparam name="T3">The type of the third subobject in the record.</typeparam>
            <typeparam name="T4">The type of the fourth subobject in the record.</typeparam>
            <typeparam name="T5">The type of the fifth subobject in the record.</typeparam>
            <typeparam name="T6">The type of the sixth subobject in the record.</typeparam>
            <typeparam name="T7">The type of the seventh subobject in the record.</typeparam>
            <typeparam name="T8">The type of the eighth subobject in the record.</typeparam>
            <typeparam name="T9">The type of the nineth subobject in the record.</typeparam>
        </member>
        <member name="F:Insight.Database.OneToOne`9.Records">
            <summary>
            The static definition of this record type.
            </summary>
        </member>
        <member name="F:Insight.Database.OneToOne`9._objectTypes">
            <summary>
            The types of objects returned by this record type.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`9.#ctor">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`9.#ctor(Insight.Database.ColumnOverride[])">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
        </member>
        <member name="M:Insight.Database.OneToOne`9.#ctor(Insight.Database.Action{`0,`1,`2,`3,`4,`5,`6,`7,`8},System.Collections.Generic.IEnumerable{Insight.Database.ColumnOverride},System.Collections.Generic.IDictionary{System.Type,System.String})">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="callback">An optional callback that can be used to assemble the records.</param>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
            <param name="splitColumns">An optional map of the names of ID columns that can be used to split the recordset.</param>
        </member>
        <member name="M:Insight.Database.OneToOne`9.Insight#Database#Structure#IRecordStructure#GetObjectTypes">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`9.GetGuardianReader``1">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`9.HandleCallback(System.Object[])">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.OneToOne`10">
            <summary>
            Represents a one-to-one object mapping that is returned in a single recordset.
            </summary>
            <typeparam name="T1">The type of the first subobject in the record.</typeparam>
            <typeparam name="T2">The type of the second subobject in the record.</typeparam>
            <typeparam name="T3">The type of the third subobject in the record.</typeparam>
            <typeparam name="T4">The type of the fourth subobject in the record.</typeparam>
            <typeparam name="T5">The type of the fifth subobject in the record.</typeparam>
            <typeparam name="T6">The type of the sixth subobject in the record.</typeparam>
            <typeparam name="T7">The type of the seventh subobject in the record.</typeparam>
            <typeparam name="T8">The type of the eighth subobject in the record.</typeparam>
            <typeparam name="T9">The type of the nineth subobject in the record.</typeparam>
            <typeparam name="T10">The type of the tenth subobject in the record.</typeparam>
        </member>
        <member name="F:Insight.Database.OneToOne`10.Records">
            <summary>
            The static definition of this record type.
            </summary>
        </member>
        <member name="F:Insight.Database.OneToOne`10._objectTypes">
            <summary>
            The types of objects returned by this record type.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`10.#ctor">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`10.#ctor(Insight.Database.ColumnOverride[])">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
        </member>
        <member name="M:Insight.Database.OneToOne`10.#ctor(Insight.Database.Action{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.Collections.Generic.IEnumerable{Insight.Database.ColumnOverride},System.Collections.Generic.IDictionary{System.Type,System.String})">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="callback">An optional callback that can be used to assemble the records.</param>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
            <param name="splitColumns">An optional map of the names of ID columns that can be used to split the recordset.</param>
        </member>
        <member name="M:Insight.Database.OneToOne`10.Insight#Database#Structure#IRecordStructure#GetObjectTypes">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`10.GetGuardianReader``1">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`10.HandleCallback(System.Object[])">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.OneToOne`11">
            <summary>
            Represents a one-to-one object mapping that is returned in a single recordset.
            </summary>
            <typeparam name="T1">The type of the first subobject in the record.</typeparam>
            <typeparam name="T2">The type of the second subobject in the record.</typeparam>
            <typeparam name="T3">The type of the third subobject in the record.</typeparam>
            <typeparam name="T4">The type of the fourth subobject in the record.</typeparam>
            <typeparam name="T5">The type of the fifth subobject in the record.</typeparam>
            <typeparam name="T6">The type of the sixth subobject in the record.</typeparam>
            <typeparam name="T7">The type of the seventh subobject in the record.</typeparam>
            <typeparam name="T8">The type of the eighth subobject in the record.</typeparam>
            <typeparam name="T9">The type of the nineth subobject in the record.</typeparam>
            <typeparam name="T10">The type of the tenth subobject in the record.</typeparam>
            <typeparam name="T11">The type of the eleventh subobject in the record.</typeparam>
        </member>
        <member name="F:Insight.Database.OneToOne`11.Records">
            <summary>
            The static definition of this record type.
            </summary>
        </member>
        <member name="F:Insight.Database.OneToOne`11._objectTypes">
            <summary>
            The types of objects returned by this record type.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`11.#ctor">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`11.#ctor(Insight.Database.ColumnOverride[])">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
        </member>
        <member name="M:Insight.Database.OneToOne`11.#ctor(Insight.Database.Action{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10},System.Collections.Generic.IEnumerable{Insight.Database.ColumnOverride},System.Collections.Generic.IDictionary{System.Type,System.String})">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="callback">An optional callback that can be used to assemble the records.</param>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
            <param name="splitColumns">An optional map of the names of ID columns that can be used to split the recordset.</param>
        </member>
        <member name="M:Insight.Database.OneToOne`11.Insight#Database#Structure#IRecordStructure#GetObjectTypes">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`11.GetGuardianReader``1">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`11.HandleCallback(System.Object[])">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.OneToOne`12">
            <summary>
            Represents a one-to-one object mapping that is returned in a single recordset.
            </summary>
            <typeparam name="T1">The type of the first subobject in the record.</typeparam>
            <typeparam name="T2">The type of the second subobject in the record.</typeparam>
            <typeparam name="T3">The type of the third subobject in the record.</typeparam>
            <typeparam name="T4">The type of the fourth subobject in the record.</typeparam>
            <typeparam name="T5">The type of the fifth subobject in the record.</typeparam>
            <typeparam name="T6">The type of the sixth subobject in the record.</typeparam>
            <typeparam name="T7">The type of the seventh subobject in the record.</typeparam>
            <typeparam name="T8">The type of the eighth subobject in the record.</typeparam>
            <typeparam name="T9">The type of the nineth subobject in the record.</typeparam>
            <typeparam name="T10">The type of the tenth subobject in the record.</typeparam>
            <typeparam name="T11">The type of the eleventh subobject in the record.</typeparam>
            <typeparam name="T12">The type of the twelfth subobject in the record.</typeparam>
        </member>
        <member name="F:Insight.Database.OneToOne`12.Records">
            <summary>
            The static definition of this record type.
            </summary>
        </member>
        <member name="F:Insight.Database.OneToOne`12._objectTypes">
            <summary>
            The types of objects returned by this record type.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`12.#ctor">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`12.#ctor(Insight.Database.ColumnOverride[])">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
        </member>
        <member name="M:Insight.Database.OneToOne`12.#ctor(Insight.Database.Action{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11},System.Collections.Generic.IEnumerable{Insight.Database.ColumnOverride},System.Collections.Generic.IDictionary{System.Type,System.String})">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="callback">An optional callback that can be used to assemble the records.</param>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
            <param name="splitColumns">An optional map of the names of ID columns that can be used to split the recordset.</param>
        </member>
        <member name="M:Insight.Database.OneToOne`12.Insight#Database#Structure#IRecordStructure#GetObjectTypes">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`12.GetGuardianReader``1">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`12.HandleCallback(System.Object[])">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.OneToOne`13">
            <summary>
            Represents a one-to-one object mapping that is returned in a single recordset.
            </summary>
            <typeparam name="T1">The type of the first subobject in the record.</typeparam>
            <typeparam name="T2">The type of the second subobject in the record.</typeparam>
            <typeparam name="T3">The type of the third subobject in the record.</typeparam>
            <typeparam name="T4">The type of the fourth subobject in the record.</typeparam>
            <typeparam name="T5">The type of the fifth subobject in the record.</typeparam>
            <typeparam name="T6">The type of the sixth subobject in the record.</typeparam>
            <typeparam name="T7">The type of the seventh subobject in the record.</typeparam>
            <typeparam name="T8">The type of the eighth subobject in the record.</typeparam>
            <typeparam name="T9">The type of the nineth subobject in the record.</typeparam>
            <typeparam name="T10">The type of the tenth subobject in the record.</typeparam>
            <typeparam name="T11">The type of the eleventh subobject in the record.</typeparam>
            <typeparam name="T12">The type of the twelfth subobject in the record.</typeparam>
            <typeparam name="T13">The type of the thirteenth subobject in the record.</typeparam>
        </member>
        <member name="F:Insight.Database.OneToOne`13.Records">
            <summary>
            The static definition of this record type.
            </summary>
        </member>
        <member name="F:Insight.Database.OneToOne`13._objectTypes">
            <summary>
            The types of objects returned by this record type.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`13.#ctor">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`13.#ctor(Insight.Database.ColumnOverride[])">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
        </member>
        <member name="M:Insight.Database.OneToOne`13.#ctor(Insight.Database.Action{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12},System.Collections.Generic.IEnumerable{Insight.Database.ColumnOverride},System.Collections.Generic.IDictionary{System.Type,System.String})">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="callback">An optional callback that can be used to assemble the records.</param>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
            <param name="splitColumns">An optional map of the names of ID columns that can be used to split the recordset.</param>
        </member>
        <member name="M:Insight.Database.OneToOne`13.Insight#Database#Structure#IRecordStructure#GetObjectTypes">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`13.GetGuardianReader``1">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`13.HandleCallback(System.Object[])">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.OneToOne`14">
            <summary>
            Represents a one-to-one object mapping that is returned in a single recordset.
            </summary>
            <typeparam name="T1">The type of the first subobject in the record.</typeparam>
            <typeparam name="T2">The type of the second subobject in the record.</typeparam>
            <typeparam name="T3">The type of the third subobject in the record.</typeparam>
            <typeparam name="T4">The type of the fourth subobject in the record.</typeparam>
            <typeparam name="T5">The type of the fifth subobject in the record.</typeparam>
            <typeparam name="T6">The type of the sixth subobject in the record.</typeparam>
            <typeparam name="T7">The type of the seventh subobject in the record.</typeparam>
            <typeparam name="T8">The type of the eighth subobject in the record.</typeparam>
            <typeparam name="T9">The type of the nineth subobject in the record.</typeparam>
            <typeparam name="T10">The type of the tenth subobject in the record.</typeparam>
            <typeparam name="T11">The type of the eleventh subobject in the record.</typeparam>
            <typeparam name="T12">The type of the twelfth subobject in the record.</typeparam>
            <typeparam name="T13">The type of the thirteenth subobject in the record.</typeparam>
            <typeparam name="T14">The type of the fourteenth subobject in the record.</typeparam>
        </member>
        <member name="F:Insight.Database.OneToOne`14.Records">
            <summary>
            The static definition of this record type.
            </summary>
        </member>
        <member name="F:Insight.Database.OneToOne`14._objectTypes">
            <summary>
            The types of objects returned by this record type.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`14.#ctor">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`14.#ctor(Insight.Database.ColumnOverride[])">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
        </member>
        <member name="M:Insight.Database.OneToOne`14.#ctor(Insight.Database.Action{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13},System.Collections.Generic.IEnumerable{Insight.Database.ColumnOverride},System.Collections.Generic.IDictionary{System.Type,System.String})">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="callback">An optional callback that can be used to assemble the records.</param>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
            <param name="splitColumns">An optional map of the names of ID columns that can be used to split the recordset.</param>
        </member>
        <member name="M:Insight.Database.OneToOne`14.Insight#Database#Structure#IRecordStructure#GetObjectTypes">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`14.GetGuardianReader``1">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`14.HandleCallback(System.Object[])">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.OneToOne`15">
            <summary>
            Represents a one-to-one object mapping that is returned in a single recordset.
            </summary>
            <typeparam name="T1">The type of the first subobject in the record.</typeparam>
            <typeparam name="T2">The type of the second subobject in the record.</typeparam>
            <typeparam name="T3">The type of the third subobject in the record.</typeparam>
            <typeparam name="T4">The type of the fourth subobject in the record.</typeparam>
            <typeparam name="T5">The type of the fifth subobject in the record.</typeparam>
            <typeparam name="T6">The type of the sixth subobject in the record.</typeparam>
            <typeparam name="T7">The type of the seventh subobject in the record.</typeparam>
            <typeparam name="T8">The type of the eighth subobject in the record.</typeparam>
            <typeparam name="T9">The type of the nineth subobject in the record.</typeparam>
            <typeparam name="T10">The type of the tenth subobject in the record.</typeparam>
            <typeparam name="T11">The type of the eleventh subobject in the record.</typeparam>
            <typeparam name="T12">The type of the twelfth subobject in the record.</typeparam>
            <typeparam name="T13">The type of the thirteenth subobject in the record.</typeparam>
            <typeparam name="T14">The type of the fourteenth subobject in the record.</typeparam>
            <typeparam name="T15">The type of the fifteenth subobject in the record.</typeparam>
        </member>
        <member name="F:Insight.Database.OneToOne`15.Records">
            <summary>
            The static definition of this record type.
            </summary>
        </member>
        <member name="F:Insight.Database.OneToOne`15._objectTypes">
            <summary>
            The types of objects returned by this record type.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`15.#ctor">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`15.#ctor(Insight.Database.ColumnOverride[])">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
        </member>
        <member name="M:Insight.Database.OneToOne`15.#ctor(Insight.Database.Action{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14},System.Collections.Generic.IEnumerable{Insight.Database.ColumnOverride},System.Collections.Generic.IDictionary{System.Type,System.String})">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="callback">An optional callback that can be used to assemble the records.</param>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
            <param name="splitColumns">An optional map of the names of ID columns that can be used to split the recordset.</param>
        </member>
        <member name="M:Insight.Database.OneToOne`15.Insight#Database#Structure#IRecordStructure#GetObjectTypes">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`15.GetGuardianReader``1">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`15.HandleCallback(System.Object[])">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.OneToOne`16">
            <summary>
            Represents a one-to-one object mapping that is returned in a single recordset.
            </summary>
            <typeparam name="T1">The type of the first subobject in the record.</typeparam>
            <typeparam name="T2">The type of the second subobject in the record.</typeparam>
            <typeparam name="T3">The type of the third subobject in the record.</typeparam>
            <typeparam name="T4">The type of the fourth subobject in the record.</typeparam>
            <typeparam name="T5">The type of the fifth subobject in the record.</typeparam>
            <typeparam name="T6">The type of the sixth subobject in the record.</typeparam>
            <typeparam name="T7">The type of the seventh subobject in the record.</typeparam>
            <typeparam name="T8">The type of the eighth subobject in the record.</typeparam>
            <typeparam name="T9">The type of the nineth subobject in the record.</typeparam>
            <typeparam name="T10">The type of the tenth subobject in the record.</typeparam>
            <typeparam name="T11">The type of the eleventh subobject in the record.</typeparam>
            <typeparam name="T12">The type of the twelfth subobject in the record.</typeparam>
            <typeparam name="T13">The type of the thirteenth subobject in the record.</typeparam>
            <typeparam name="T14">The type of the fourteenth subobject in the record.</typeparam>
            <typeparam name="T15">The type of the fifteenth subobject in the record.</typeparam>
            <typeparam name="T16">The type of the sixteenth subobject in the record.</typeparam>
        </member>
        <member name="F:Insight.Database.OneToOne`16.Records">
            <summary>
            The static definition of this record type.
            </summary>
        </member>
        <member name="F:Insight.Database.OneToOne`16._objectTypes">
            <summary>
            The types of objects returned by this record type.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`16.#ctor">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
        </member>
        <member name="M:Insight.Database.OneToOne`16.#ctor(Insight.Database.ColumnOverride[])">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
        </member>
        <member name="M:Insight.Database.OneToOne`16.#ctor(Insight.Database.Action{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15},System.Collections.Generic.IEnumerable{Insight.Database.ColumnOverride},System.Collections.Generic.IDictionary{System.Type,System.String})">
            <summary>
            Initializes a new instance of the OneToOne class.
            </summary>
            <param name="callback">An optional callback that can be used to assemble the records.</param>
            <param name="columnOverride">
            An optional column mapping to use to override the default mapping.
            Keys are column names, values are property names.
            </param>
            <param name="splitColumns">An optional map of the names of ID columns that can be used to split the recordset.</param>
        </member>
        <member name="M:Insight.Database.OneToOne`16.Insight#Database#Structure#IRecordStructure#GetObjectTypes">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`16.GetGuardianReader``1">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OneToOne`16.HandleCallback(System.Object[])">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.PostProcessRecordReader`1">
            <summary>
            Extends a record reader, allowing records to be postprocessed after reading them.
            </summary>
            <typeparam name="T">The type of record that is being read.</typeparam>
        </member>
        <member name="F:Insight.Database.PostProcessRecordReader`1._baseReader">
            <summary>
            The base reader to read the record.
            </summary>
        </member>
        <member name="F:Insight.Database.PostProcessRecordReader`1._postRead">
            <summary>
            The code to execute after reading the record.
            </summary>
        </member>
        <member name="M:Insight.Database.PostProcessRecordReader`1.#ctor(System.Func{System.Data.IDataReader,`0,`0})">
            <summary>
            Initializes a new instance of the PostProcessRecordReader class.
            </summary>
            <param name="postRead">The code to execute after reading the record.</param>
        </member>
        <member name="M:Insight.Database.PostProcessRecordReader`1.#ctor(Insight.Database.Structure.IRecordReader{`0},System.Func{System.Data.IDataReader,`0,`0})">
            <summary>
            Initializes a new instance of the PostProcessRecordReader class.
            </summary>
            <param name="baseReader">The base record reader to use to read the record.</param>
            <param name="postRead">The code to execute after reading the record.</param>
        </member>
        <member name="M:Insight.Database.PostProcessRecordReader`1.GetRecordReader(System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.PostProcessRecordReader`1.Equals(Insight.Database.Structure.IRecordReader)">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Query">
            <summary>
            Extension methods that build an object that can read results from a data reader.
            </summary>
        </member>
        <member name="M:Insight.Database.Query.Returns``1(Insight.Database.Structure.IRecordReader{``0})">
            <summary>
            Defines a reader that returns a list of records.
            </summary>
            <typeparam name="T">The type of object in the list of records.</typeparam>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <returns>A reader that reads a list of objects.</returns>
        </member>
        <member name="M:Insight.Database.Query.ReturnsResults``1(Insight.Database.Structure.IRecordReader{``0})">
            <summary>
            Defines a reader that returns a Results object.
            </summary>
            <typeparam name="T">The type of object in the first set of results.</typeparam>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <returns>A reader that reads a Results object.</returns>
        </member>
        <member name="M:Insight.Database.Query.ReturnsSingle``1(Insight.Database.Structure.IRecordReader{``0})">
            <summary>
            Defines a reader that returns a single record.
            </summary>
            <typeparam name="T">The type of object in the list of records.</typeparam>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <returns>A reader that reads a list of objects.</returns>
        </member>
        <member name="M:Insight.Database.Query.Then``2(Insight.Database.Structure.ListReader{``0},Insight.Database.Structure.IRecordReader{``1})">
            <summary>
            Extends the reader by reading another set of records.
            </summary>
            <typeparam name="T1">The type of objects in the first set of results.</typeparam>
            <typeparam name="T2">The type of objects in the second set of results.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <returns>A reader that reads a Results object with multiple results.</returns>
        </member>
        <member name="M:Insight.Database.Query.ThenChildren``2(Insight.Database.Structure.ListReader{``0},Insight.Database.Structure.RecordReader{``1},System.Action{``0,System.Collections.Generic.List{``1}})">
            <summary>
            Extends the reader by reading another set of records that are children of the previous results.
            </summary>
            <typeparam name="T1">The type of objects in the first set of results.</typeparam>
            <typeparam name="T2">The type of objects in the second set of results.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <param name="into">A function that assigns the children to their parent.</param>
            <returns>A reader that reads a list of objects and their children.</returns>
        </member>
        <member name="M:Insight.Database.Query.ThenChildren``3(Insight.Database.Structure.ListReader{``0},Insight.Database.Structure.RecordReader{``1},System.Func{``0,``2},System.Action{``0,System.Collections.Generic.List{``1}})">
            <summary>
            Extends the reader by reading another set of records that are children of the previous results.
            </summary>
            <typeparam name="T1">The type of objects in the first set of results.</typeparam>
            <typeparam name="T2">The type of objects in the second set of results.</typeparam>
            <typeparam name="TId">The type of the ID value.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <param name="id">An optional function that extracts an ID from the object. Use when this row is a parent in a parent-child relationship.</param>
            <param name="into">A function that assigns the children to their parent.</param>
            <returns>A reader that reads a list of objects and their children.</returns>
        </member>
        <member name="M:Insight.Database.Query.ThenChildren``3(Insight.Database.Structure.ListReader{``0},Insight.Database.Structure.IChildRecordReader{``1,``2},System.Func{``0,``2},System.Action{``0,System.Collections.Generic.List{``1}})">
            <summary>
            Extends the reader by reading another set of records that are children of the previous results.
            </summary>
            <typeparam name="T1">The type of objects in the first set of results.</typeparam>
            <typeparam name="T2">The type of objects in the second set of results.</typeparam>
            <typeparam name="TId">The type of the ID value.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <param name="id">An optional function that extracts an ID from the object. Use when this row is a parent in a parent-child relationship.</param>
            <param name="into">A function that assigns the children to their parent.</param>
            <returns>A reader that reads a list of objects and their children.</returns>
        </member>
        <member name="M:Insight.Database.Query.ThenChildren``2(Insight.Database.Structure.SingleReader{``0},Insight.Database.Structure.IRecordReader{``1},System.Action{``0,System.Collections.Generic.List{``1}})">
            <summary>
            Extends the reader by reading another set of records that are children of the previous results.
            </summary>
            <typeparam name="T1">The type of objects in the first set of results.</typeparam>
            <typeparam name="T2">The type of objects in the second set of results.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <param name="into">A function that assigns the children to their parent.</param>
            <returns>A reader that reads a list of objects and their children.</returns>
        </member>
        <member name="M:Insight.Database.Query.ThenChildren``3(Insight.Database.Structure.SingleReader{``0},Insight.Database.Structure.RecordReader{``1},System.Func{``0,``2},System.Action{``0,System.Collections.Generic.List{``1}})">
            <summary>
            Extends the reader by reading another set of records that are children of the previous results.
            </summary>
            <typeparam name="T1">The type of objects in the first set of results.</typeparam>
            <typeparam name="T2">The type of objects in the second set of results.</typeparam>
            <typeparam name="TId">The type of the ID value.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <param name="id">An optional function that extracts an ID from the object. Use when this row is a parent in a parent-child relationship.</param>
            <param name="into">A function that assigns the children to their parent.</param>
            <returns>A reader that reads a list of objects and their children.</returns>
        </member>
        <member name="M:Insight.Database.Query.ThenChildren``3(Insight.Database.Structure.SingleReader{``0},Insight.Database.Structure.IChildRecordReader{``1,``2},System.Func{``0,``2},System.Action{``0,System.Collections.Generic.List{``1}})">
            <summary>
            Extends the reader by reading another set of records that are children of the previous results.
            </summary>
            <typeparam name="T1">The type of objects in the first set of results.</typeparam>
            <typeparam name="T2">The type of objects in the second set of results.</typeparam>
            <typeparam name="TId">The type of the ID value.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <param name="id">An optional function that extracts an ID from the object. Use when this row is a parent in a parent-child relationship.</param>
            <param name="into">A function that assigns the children to their parent.</param>
            <returns>A reader that reads a list of objects and their children.</returns>
        </member>
        <member name="M:Insight.Database.Query.ThenChildren``2(Insight.Database.Structure.ResultsReader{``0},Insight.Database.Structure.RecordReader{``1},System.Action{``0,System.Collections.Generic.List{``1}})">
            <summary>
            Extends the reader by reading another set of records that are children of the previous results.
            </summary>
            <typeparam name="T1">The type of objects in the first set of results.</typeparam>
            <typeparam name="T2">The type of objects in the second set of results.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <param name="into">A function that assigns the children to their parent.</param>
            <returns>A reader that reads a Results object with child records.</returns>
        </member>
        <member name="M:Insight.Database.Query.ThenChildren``3(Insight.Database.Structure.ResultsReader{``0},Insight.Database.Structure.RecordReader{``1},System.Func{``0,``2},System.Action{``0,System.Collections.Generic.List{``1}})">
            <summary>
            Extends the reader by reading another set of records that are children of the previous results.
            </summary>
            <typeparam name="T1">The type of objects in the first set of results.</typeparam>
            <typeparam name="T2">The type of objects in the second set of results.</typeparam>
            <typeparam name="TId">The type of the ID value.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <param name="id">An optional function that extracts an ID from the object. Use when this row is a parent in a parent-child relationship.</param>
            <param name="into">A function that assigns the children to their parent.</param>
            <returns>A reader that reads a Results object with child records.</returns>
        </member>
        <member name="M:Insight.Database.Query.ThenChildren``3(Insight.Database.Structure.ResultsReader{``0},Insight.Database.Structure.IChildRecordReader{``1,``2},System.Func{``0,``2},System.Action{``0,System.Collections.Generic.List{``1}})">
            <summary>
            Extends the reader by reading another set of records that are children of the previous results.
            </summary>
            <typeparam name="T1">The type of objects in the first set of results.</typeparam>
            <typeparam name="T2">The type of objects in the second set of results.</typeparam>
            <typeparam name="TId">The type of the ID value.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <param name="id">An optional function that extracts an ID from the object. Use when this row is a parent in a parent-child relationship.</param>
            <param name="into">A function that assigns the children to their parent.</param>
            <returns>A reader that reads a Results object with child records.</returns>
        </member>
        <member name="M:Insight.Database.Query.ThenChildren``3(Insight.Database.Structure.ListReader{``0},Insight.Database.Structure.RecordReader{``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Action{``1,System.Collections.Generic.List{``2}})">
            <summary>
            Extends the reader by reading another set of records that are children of a subobject of the previous results.
            </summary>
            <typeparam name="TRoot">The type of the root object that is returned.</typeparam>
            <typeparam name="TParent">The type of the parent object in the parent-child relationship.</typeparam>
            <typeparam name="TChild">The type of the child in the parent-child relationship.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <param name="parents">A function that selects the list of parents from the root object.</param>
            <param name="into">A function that assigns the children to their parent.</param>
            <returns>A reader that reads a list of objects with children.</returns>
        </member>
        <member name="M:Insight.Database.Query.ThenChildren``4(Insight.Database.Structure.ListReader{``0},Insight.Database.Structure.RecordReader{``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``1,``3},System.Action{``1,System.Collections.Generic.List{``2}})">
            <summary>
            Extends the reader by reading another set of records that are children of a subobject of the previous results.
            </summary>
            <typeparam name="TRoot">The type of the root object that is returned.</typeparam>
            <typeparam name="TParent">The type of the parent object in the parent-child relationship.</typeparam>
            <typeparam name="TChild">The type of the child in the parent-child relationship.</typeparam>
            <typeparam name="TId">The type of the ID value.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <param name="parents">A function that selects the list of parents from the root object.</param>
            <param name="id">A function that selects the ID from a parent.</param>
            <param name="into">A function that assigns the children to their parent.</param>
            <returns>A reader that reads a list of objects with children.</returns>
        </member>
        <member name="M:Insight.Database.Query.ThenChildren``4(Insight.Database.Structure.ListReader{``0},Insight.Database.Structure.IChildRecordReader{``2,``3},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``1,``3},System.Action{``1,System.Collections.Generic.List{``2}})">
            <summary>
            Extends the reader by reading another set of records that are children of a subobject of the previous results.
            </summary>
            <typeparam name="TRoot">The type of the root object that is returned.</typeparam>
            <typeparam name="TParent">The type of the parent object in the parent-child relationship.</typeparam>
            <typeparam name="TChild">The type of the child in the parent-child relationship.</typeparam>
            <typeparam name="TId">The type of the ID value.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <param name="parents">A function that selects the list of parents from the root object.</param>
            <param name="id">A function that selects the ID from a parent.</param>
            <param name="into">A function that assigns the children to their parent.</param>
            <returns>A reader that reads a list of objects with children.</returns>
        </member>
        <member name="M:Insight.Database.Query.ThenChildren``3(Insight.Database.Structure.ResultsReader{``0},Insight.Database.Structure.RecordReader{``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Action{``1,System.Collections.Generic.List{``2}})">
            <summary>
            Extends the reader by reading another set of records that are children of a subobject of the previous results.
            </summary>
            <typeparam name="TRoot">The type of the root object that is returned.</typeparam>
            <typeparam name="TParent">The type of the parent object in the parent-child relationship.</typeparam>
            <typeparam name="TChild">The type of the child in the parent-child relationship.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <param name="parents">A function that selects the list of parents from the root object.</param>
            <param name="into">A function that assigns the children to their parent.</param>
            <returns>A reader that reads a Results objects with children.</returns>
        </member>
        <member name="M:Insight.Database.Query.ThenChildren``4(Insight.Database.Structure.ResultsReader{``0},Insight.Database.Structure.RecordReader{``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``1,``3},System.Action{``1,System.Collections.Generic.List{``2}})">
            <summary>
            Extends the reader by reading another set of records that are children of a subobject of the previous results.
            </summary>
            <typeparam name="TRoot">The type of the root object that is returned.</typeparam>
            <typeparam name="TParent">The type of the parent object in the parent-child relationship.</typeparam>
            <typeparam name="TChild">The type of the child in the parent-child relationship.</typeparam>
            <typeparam name="TId">The type of the ID value.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <param name="parents">A function that selects the list of parents from the root object.</param>
            <param name="id">A function that selects the ID from a parent.</param>
            <param name="into">A function that assigns the children to their parent.</param>
            <returns>A reader that reads a Results objects with children.</returns>
        </member>
        <member name="M:Insight.Database.Query.ThenChildren``4(Insight.Database.Structure.ResultsReader{``0},Insight.Database.Structure.IChildRecordReader{``2,``3},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``1,``3},System.Action{``1,System.Collections.Generic.List{``2}})">
            <summary>
            Extends the reader by reading another set of records that are children of a subobject of the previous results.
            </summary>
            <typeparam name="TRoot">The type of the root object that is returned.</typeparam>
            <typeparam name="TParent">The type of the parent object in the parent-child relationship.</typeparam>
            <typeparam name="TChild">The type of the child in the parent-child relationship.</typeparam>
            <typeparam name="TId">The type of the ID value.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <param name="parents">A function that selects the list of parents from the root object.</param>
            <param name="id">A function that selects the ID from a parent.</param>
            <param name="into">A function that assigns the children to their parent.</param>
            <returns>A reader that reads a Results objects with children.</returns>
        </member>
        <member name="M:Insight.Database.Query.ThenChildren``3(Insight.Database.Structure.SingleReader{``0},Insight.Database.Structure.RecordReader{``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Action{``1,System.Collections.Generic.List{``2}})">
            <summary>
            Extends the reader by reading another set of records that are children of a subobject of the previous results.
            </summary>
            <typeparam name="TRoot">The type of the root object that is returned.</typeparam>
            <typeparam name="TParent">The type of the parent object in the parent-child relationship.</typeparam>
            <typeparam name="TChild">The type of the child in the parent-child relationship.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <param name="parents">A function that selects the list of parents from the root object.</param>
            <param name="into">A function that assigns the children to their parent.</param>
            <returns>A reader that reads a list of objects with children.</returns>
        </member>
        <member name="M:Insight.Database.Query.ThenChildren``4(Insight.Database.Structure.SingleReader{``0},Insight.Database.Structure.RecordReader{``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``1,``3},System.Action{``1,System.Collections.Generic.List{``2}})">
            <summary>
            Extends the reader by reading another set of records that are children of a subobject of the previous results.
            </summary>
            <typeparam name="TRoot">The type of the root object that is returned.</typeparam>
            <typeparam name="TParent">The type of the parent object in the parent-child relationship.</typeparam>
            <typeparam name="TChild">The type of the child in the parent-child relationship.</typeparam>
            <typeparam name="TId">The type of the ID value.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <param name="parents">A function that selects the list of parents from the root object.</param>
            <param name="id">A function that selects the ID from a parent.</param>
            <param name="into">A function that assigns the children to their parent.</param>
            <returns>A reader that reads a list of objects with children.</returns>
        </member>
        <member name="M:Insight.Database.Query.ThenChildren``4(Insight.Database.Structure.SingleReader{``0},Insight.Database.Structure.IChildRecordReader{``2,``3},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``1,``3},System.Action{``1,System.Collections.Generic.List{``2}})">
            <summary>
            Extends the reader by reading another set of records that are children of a subobject of the previous results.
            </summary>
            <typeparam name="TRoot">The type of the root object that is returned.</typeparam>
            <typeparam name="TParent">The type of the parent object in the parent-child relationship.</typeparam>
            <typeparam name="TChild">The type of the child in the parent-child relationship.</typeparam>
            <typeparam name="TId">The type of the ID value.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <param name="parents">A function that selects the list of parents from the root object.</param>
            <param name="id">A function that selects the ID from a parent.</param>
            <param name="into">A function that assigns the children to their parent.</param>
            <returns>A reader that reads a list of objects with children.</returns>
        </member>
        <member name="M:Insight.Database.Query.GetOneToOneType(System.Type[])">
            <summary>
            Gets the onetoone mapping type for a list of types.
            This method is not intended to be used by user code.
            </summary>
            <param name="types">The list of types to convert.</param>
            <returns>The OneToOne mapping.</returns>
        </member>
        <member name="M:Insight.Database.Query.Then``2(Insight.Database.Structure.IQueryReader{Insight.Database.Results{``0}},Insight.Database.Structure.IRecordReader{``1})">
            <summary>
            Extends the reader by reading another set of records.
            </summary>
            <typeparam name="T1">The type of objects in the first set of results.</typeparam>
            <typeparam name="T2">The type of objects in the second set of results.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <returns>A reader that reads a Results object with multiple results.</returns>
        </member>
        <member name="M:Insight.Database.Query.Then``3(Insight.Database.Structure.IQueryReader{Insight.Database.Results{``0,``1}},Insight.Database.Structure.IRecordReader{``2})">
            <summary>
            Extends the reader by reading another set of records.
            </summary>
            <typeparam name="T1">The type of objects in the first set of results.</typeparam>
            <typeparam name="T2">The type of objects in the second set of results.</typeparam>
            <typeparam name="T3">The type of objects in the third set of results.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <returns>A reader that reads a Results object with multiple results.</returns>
        </member>
        <member name="M:Insight.Database.Query.Then``4(Insight.Database.Structure.IQueryReader{Insight.Database.Results{``0,``1,``2}},Insight.Database.Structure.IRecordReader{``3})">
            <summary>
            Extends the reader by reading another set of records.
            </summary>
            <typeparam name="T1">The type of objects in the first set of results.</typeparam>
            <typeparam name="T2">The type of objects in the second set of results.</typeparam>
            <typeparam name="T3">The type of objects in the third set of results.</typeparam>
            <typeparam name="T4">The type of objects in the fourth set of results.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <returns>A reader that reads a Results object with multiple results.</returns>
        </member>
        <member name="M:Insight.Database.Query.Then``5(Insight.Database.Structure.IQueryReader{Insight.Database.Results{``0,``1,``2,``3}},Insight.Database.Structure.IRecordReader{``4})">
            <summary>
            Extends the reader by reading another set of records.
            </summary>
            <typeparam name="T1">The type of objects in the first set of results.</typeparam>
            <typeparam name="T2">The type of objects in the second set of results.</typeparam>
            <typeparam name="T3">The type of objects in the third set of results.</typeparam>
            <typeparam name="T4">The type of objects in the fourth set of results.</typeparam>
            <typeparam name="T5">The type of objects in the fifth set of results.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <returns>A reader that reads a Results object with multiple results.</returns>
        </member>
        <member name="M:Insight.Database.Query.Then``6(Insight.Database.Structure.IQueryReader{Insight.Database.Results{``0,``1,``2,``3,``4}},Insight.Database.Structure.IRecordReader{``5})">
            <summary>
            Extends the reader by reading another set of records.
            </summary>
            <typeparam name="T1">The type of objects in the first set of results.</typeparam>
            <typeparam name="T2">The type of objects in the second set of results.</typeparam>
            <typeparam name="T3">The type of objects in the third set of results.</typeparam>
            <typeparam name="T4">The type of objects in the fourth set of results.</typeparam>
            <typeparam name="T5">The type of objects in the fifth set of results.</typeparam>
            <typeparam name="T6">The type of objects in the sixth set of results.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <returns>A reader that reads a Results object with multiple results.</returns>
        </member>
        <member name="M:Insight.Database.Query.Then``7(Insight.Database.Structure.IQueryReader{Insight.Database.Results{``0,``1,``2,``3,``4,``5}},Insight.Database.Structure.IRecordReader{``6})">
            <summary>
            Extends the reader by reading another set of records.
            </summary>
            <typeparam name="T1">The type of objects in the first set of results.</typeparam>
            <typeparam name="T2">The type of objects in the second set of results.</typeparam>
            <typeparam name="T3">The type of objects in the third set of results.</typeparam>
            <typeparam name="T4">The type of objects in the fourth set of results.</typeparam>
            <typeparam name="T5">The type of objects in the fifth set of results.</typeparam>
            <typeparam name="T6">The type of objects in the sixth set of results.</typeparam>
            <typeparam name="T7">The type of objects in the seventh set of results.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <returns>A reader that reads a Results object with multiple results.</returns>
        </member>
        <member name="M:Insight.Database.Query.Then``8(Insight.Database.Structure.IQueryReader{Insight.Database.Results{``0,``1,``2,``3,``4,``5,``6}},Insight.Database.Structure.IRecordReader{``7})">
            <summary>
            Extends the reader by reading another set of records.
            </summary>
            <typeparam name="T1">The type of objects in the first set of results.</typeparam>
            <typeparam name="T2">The type of objects in the second set of results.</typeparam>
            <typeparam name="T3">The type of objects in the third set of results.</typeparam>
            <typeparam name="T4">The type of objects in the fourth set of results.</typeparam>
            <typeparam name="T5">The type of objects in the fifth set of results.</typeparam>
            <typeparam name="T6">The type of objects in the sixth set of results.</typeparam>
            <typeparam name="T7">The type of objects in the seventh set of results.</typeparam>
            <typeparam name="T8">The type of objects in the eighth set of results.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <returns>A reader that reads a Results object with multiple results.</returns>
        </member>
        <member name="M:Insight.Database.Query.Then``9(Insight.Database.Structure.IQueryReader{Insight.Database.Results{``0,``1,``2,``3,``4,``5,``6,``7}},Insight.Database.Structure.IRecordReader{``8})">
            <summary>
            Extends the reader by reading another set of records.
            </summary>
            <typeparam name="T1">The type of objects in the first set of results.</typeparam>
            <typeparam name="T2">The type of objects in the second set of results.</typeparam>
            <typeparam name="T3">The type of objects in the third set of results.</typeparam>
            <typeparam name="T4">The type of objects in the fourth set of results.</typeparam>
            <typeparam name="T5">The type of objects in the fifth set of results.</typeparam>
            <typeparam name="T6">The type of objects in the sixth set of results.</typeparam>
            <typeparam name="T7">The type of objects in the seventh set of results.</typeparam>
            <typeparam name="T8">The type of objects in the eighth set of results.</typeparam>
            <typeparam name="T9">The type of objects in the nineth set of results.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <returns>A reader that reads a Results object with multiple results.</returns>
        </member>
        <member name="M:Insight.Database.Query.Then``10(Insight.Database.Structure.IQueryReader{Insight.Database.Results{``0,``1,``2,``3,``4,``5,``6,``7,``8}},Insight.Database.Structure.IRecordReader{``9})">
            <summary>
            Extends the reader by reading another set of records.
            </summary>
            <typeparam name="T1">The type of objects in the first set of results.</typeparam>
            <typeparam name="T2">The type of objects in the second set of results.</typeparam>
            <typeparam name="T3">The type of objects in the third set of results.</typeparam>
            <typeparam name="T4">The type of objects in the fourth set of results.</typeparam>
            <typeparam name="T5">The type of objects in the fifth set of results.</typeparam>
            <typeparam name="T6">The type of objects in the sixth set of results.</typeparam>
            <typeparam name="T7">The type of objects in the seventh set of results.</typeparam>
            <typeparam name="T8">The type of objects in the eighth set of results.</typeparam>
            <typeparam name="T9">The type of objects in the nineth set of results.</typeparam>
            <typeparam name="T10">The type of objects in the tenth set of results.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <returns>A reader that reads a Results object with multiple results.</returns>
        </member>
        <member name="M:Insight.Database.Query.Then``11(Insight.Database.Structure.IQueryReader{Insight.Database.Results{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}},Insight.Database.Structure.IRecordReader{``10})">
            <summary>
            Extends the reader by reading another set of records.
            </summary>
            <typeparam name="T1">The type of objects in the first set of results.</typeparam>
            <typeparam name="T2">The type of objects in the second set of results.</typeparam>
            <typeparam name="T3">The type of objects in the third set of results.</typeparam>
            <typeparam name="T4">The type of objects in the fourth set of results.</typeparam>
            <typeparam name="T5">The type of objects in the fifth set of results.</typeparam>
            <typeparam name="T6">The type of objects in the sixth set of results.</typeparam>
            <typeparam name="T7">The type of objects in the seventh set of results.</typeparam>
            <typeparam name="T8">The type of objects in the eighth set of results.</typeparam>
            <typeparam name="T9">The type of objects in the nineth set of results.</typeparam>
            <typeparam name="T10">The type of objects in the tenth set of results.</typeparam>
            <typeparam name="T11">The type of objects in the eleventh set of results.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <returns>A reader that reads a Results object with multiple results.</returns>
        </member>
        <member name="M:Insight.Database.Query.Then``12(Insight.Database.Structure.IQueryReader{Insight.Database.Results{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}},Insight.Database.Structure.IRecordReader{``11})">
            <summary>
            Extends the reader by reading another set of records.
            </summary>
            <typeparam name="T1">The type of objects in the first set of results.</typeparam>
            <typeparam name="T2">The type of objects in the second set of results.</typeparam>
            <typeparam name="T3">The type of objects in the third set of results.</typeparam>
            <typeparam name="T4">The type of objects in the fourth set of results.</typeparam>
            <typeparam name="T5">The type of objects in the fifth set of results.</typeparam>
            <typeparam name="T6">The type of objects in the sixth set of results.</typeparam>
            <typeparam name="T7">The type of objects in the seventh set of results.</typeparam>
            <typeparam name="T8">The type of objects in the eighth set of results.</typeparam>
            <typeparam name="T9">The type of objects in the nineth set of results.</typeparam>
            <typeparam name="T10">The type of objects in the tenth set of results.</typeparam>
            <typeparam name="T11">The type of objects in the eleventh set of results.</typeparam>
            <typeparam name="T12">The type of objects in the twelfth set of results.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <returns>A reader that reads a Results object with multiple results.</returns>
        </member>
        <member name="M:Insight.Database.Query.Then``13(Insight.Database.Structure.IQueryReader{Insight.Database.Results{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}},Insight.Database.Structure.IRecordReader{``12})">
            <summary>
            Extends the reader by reading another set of records.
            </summary>
            <typeparam name="T1">The type of objects in the first set of results.</typeparam>
            <typeparam name="T2">The type of objects in the second set of results.</typeparam>
            <typeparam name="T3">The type of objects in the third set of results.</typeparam>
            <typeparam name="T4">The type of objects in the fourth set of results.</typeparam>
            <typeparam name="T5">The type of objects in the fifth set of results.</typeparam>
            <typeparam name="T6">The type of objects in the sixth set of results.</typeparam>
            <typeparam name="T7">The type of objects in the seventh set of results.</typeparam>
            <typeparam name="T8">The type of objects in the eighth set of results.</typeparam>
            <typeparam name="T9">The type of objects in the nineth set of results.</typeparam>
            <typeparam name="T10">The type of objects in the tenth set of results.</typeparam>
            <typeparam name="T11">The type of objects in the eleventh set of results.</typeparam>
            <typeparam name="T12">The type of objects in the twelfth set of results.</typeparam>
            <typeparam name="T13">The type of objects in the thirteenth set of results.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <returns>A reader that reads a Results object with multiple results.</returns>
        </member>
        <member name="M:Insight.Database.Query.Then``14(Insight.Database.Structure.IQueryReader{Insight.Database.Results{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}},Insight.Database.Structure.IRecordReader{``13})">
            <summary>
            Extends the reader by reading another set of records.
            </summary>
            <typeparam name="T1">The type of objects in the first set of results.</typeparam>
            <typeparam name="T2">The type of objects in the second set of results.</typeparam>
            <typeparam name="T3">The type of objects in the third set of results.</typeparam>
            <typeparam name="T4">The type of objects in the fourth set of results.</typeparam>
            <typeparam name="T5">The type of objects in the fifth set of results.</typeparam>
            <typeparam name="T6">The type of objects in the sixth set of results.</typeparam>
            <typeparam name="T7">The type of objects in the seventh set of results.</typeparam>
            <typeparam name="T8">The type of objects in the eighth set of results.</typeparam>
            <typeparam name="T9">The type of objects in the nineth set of results.</typeparam>
            <typeparam name="T10">The type of objects in the tenth set of results.</typeparam>
            <typeparam name="T11">The type of objects in the eleventh set of results.</typeparam>
            <typeparam name="T12">The type of objects in the twelfth set of results.</typeparam>
            <typeparam name="T13">The type of objects in the thirteenth set of results.</typeparam>
            <typeparam name="T14">The type of objects in the fourteenth set of results.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <returns>A reader that reads a Results object with multiple results.</returns>
        </member>
        <member name="M:Insight.Database.Query.Then``15(Insight.Database.Structure.IQueryReader{Insight.Database.Results{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}},Insight.Database.Structure.IRecordReader{``14})">
            <summary>
            Extends the reader by reading another set of records.
            </summary>
            <typeparam name="T1">The type of objects in the first set of results.</typeparam>
            <typeparam name="T2">The type of objects in the second set of results.</typeparam>
            <typeparam name="T3">The type of objects in the third set of results.</typeparam>
            <typeparam name="T4">The type of objects in the fourth set of results.</typeparam>
            <typeparam name="T5">The type of objects in the fifth set of results.</typeparam>
            <typeparam name="T6">The type of objects in the sixth set of results.</typeparam>
            <typeparam name="T7">The type of objects in the seventh set of results.</typeparam>
            <typeparam name="T8">The type of objects in the eighth set of results.</typeparam>
            <typeparam name="T9">The type of objects in the nineth set of results.</typeparam>
            <typeparam name="T10">The type of objects in the tenth set of results.</typeparam>
            <typeparam name="T11">The type of objects in the eleventh set of results.</typeparam>
            <typeparam name="T12">The type of objects in the twelfth set of results.</typeparam>
            <typeparam name="T13">The type of objects in the thirteenth set of results.</typeparam>
            <typeparam name="T14">The type of objects in the fourteenth set of results.</typeparam>
            <typeparam name="T15">The type of objects in the fifteenth set of results.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <returns>A reader that reads a Results object with multiple results.</returns>
        </member>
        <member name="M:Insight.Database.Query.Then``16(Insight.Database.Structure.IQueryReader{Insight.Database.Results{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}},Insight.Database.Structure.IRecordReader{``15})">
            <summary>
            Extends the reader by reading another set of records.
            </summary>
            <typeparam name="T1">The type of objects in the first set of results.</typeparam>
            <typeparam name="T2">The type of objects in the second set of results.</typeparam>
            <typeparam name="T3">The type of objects in the third set of results.</typeparam>
            <typeparam name="T4">The type of objects in the fourth set of results.</typeparam>
            <typeparam name="T5">The type of objects in the fifth set of results.</typeparam>
            <typeparam name="T6">The type of objects in the sixth set of results.</typeparam>
            <typeparam name="T7">The type of objects in the seventh set of results.</typeparam>
            <typeparam name="T8">The type of objects in the eighth set of results.</typeparam>
            <typeparam name="T9">The type of objects in the nineth set of results.</typeparam>
            <typeparam name="T10">The type of objects in the tenth set of results.</typeparam>
            <typeparam name="T11">The type of objects in the eleventh set of results.</typeparam>
            <typeparam name="T12">The type of objects in the twelfth set of results.</typeparam>
            <typeparam name="T13">The type of objects in the thirteenth set of results.</typeparam>
            <typeparam name="T14">The type of objects in the fourteenth set of results.</typeparam>
            <typeparam name="T15">The type of objects in the fifteenth set of results.</typeparam>
            <typeparam name="T16">The type of objects in the sixteenth set of results.</typeparam>
            <param name="previous">The previous reader.</param>
            <param name="recordReader">The mapping that defines the layout of the records in each row.</param>
            <returns>A reader that reads a Results object with multiple results.</returns>
        </member>
        <member name="T:Insight.Database.InsightRowsCopiedEventHandler">
            <summary>
            Fired when rows have been copied to the server.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:Insight.Database.InsightBulkCopyOptions">
            <summary>
            Specifies the options for bulk copy. Not all values are supported by all providers.
            </summary>
        </member>
        <member name="F:Insight.Database.InsightBulkCopyOptions.Default">
            <summary>
            Default option.
            </summary>
        </member>
        <member name="F:Insight.Database.InsightBulkCopyOptions.KeepIdentity">
            <summary>
            Keep identity values when inserting.
            </summary>
        </member>
        <member name="F:Insight.Database.InsightBulkCopyOptions.CheckConstraints">
            <summary>
            Check constraints when inserting.
            </summary>
        </member>
        <member name="F:Insight.Database.InsightBulkCopyOptions.TableLock">
            <summary>
            Lock the table while inserting.
            </summary>
        </member>
        <member name="F:Insight.Database.InsightBulkCopyOptions.KeepNulls">
            <summary>
            Preserve null values instead of applying defaults.
            </summary>
        </member>
        <member name="F:Insight.Database.InsightBulkCopyOptions.FireTriggers">
            <summary>
            Fire triggers when inserting rows.
            </summary>
        </member>
        <member name="F:Insight.Database.InsightBulkCopyOptions.UseInternalTransaction">
            <summary>
            Use an internal transaction to roll back rows upon errors.
            </summary>
        </member>
        <member name="F:Insight.Database.InsightBulkCopyOptions.Truncate">
            <summary>
            Truncate the table prior to loading.
            </summary>
        </member>
        <member name="T:Insight.Database.InsightBulkCopy">
            <summary>
            Abstracts the different Bulk Copy settings for the various providers.
            </summary>
        </member>
        <member name="E:Insight.Database.InsightBulkCopy.RowsCopied">
            <summary>
            Fired when a number of rows has been copied to the server.
            </summary>
        </member>
        <member name="P:Insight.Database.InsightBulkCopy.BatchSize">
            <summary>
            Gets or sets the number of rows to write to the server in a batch.
            </summary>
        </member>
        <member name="P:Insight.Database.InsightBulkCopy.BulkCopyTimeout">
            <summary>
            Gets or sets the number of seconds to wait before timing out.
            </summary>
        </member>
        <member name="P:Insight.Database.InsightBulkCopy.ColumnMappings">
            <summary>
            Gets a collection of column mappings that can be overridden.
            </summary>
        </member>
        <member name="P:Insight.Database.InsightBulkCopy.DestinationTableName">
            <summary>
            Gets or sets the destination table name.
            </summary>
        </member>
        <member name="P:Insight.Database.InsightBulkCopy.NotifyAfter">
            <summary>
            Gets or sets the number of rows to copy before firing the RowsCopied event.
            </summary>
        </member>
        <member name="P:Insight.Database.InsightBulkCopy.InnerBulkCopy">
            <summary>
            Gets the provider-specific BulkCopy object.
            </summary>
        </member>
        <member name="T:Insight.Database.InsightRowsCopiedEventArgs">
            <summary>
            Defines the information associated with a rows copied event.
            </summary>
        </member>
        <member name="P:Insight.Database.InsightRowsCopiedEventArgs.Abort">
            <summary>
            Gets or sets a value indicating whether the bulk copy should be aborted.
            </summary>
        </member>
        <member name="P:Insight.Database.InsightRowsCopiedEventArgs.RowsCopied">
            <summary>
            Gets or sets the number of rows copied so far.
            </summary>
        </member>
        <member name="T:Insight.Database.InsightBulkCopyMappingCollection">
            <summary>
            Abstracts the provider-specific dependencies for defining column mappings.
            </summary>
        </member>
        <member name="M:Insight.Database.InsightBulkCopyMappingCollection.Add(System.Int32,System.Int32)">
            <summary>
            Adds a column mapping.
            </summary>
            <param name="sourceColumnIndex">The source column.</param>
            <param name="destinationColumnIndex">The destination column.</param>
        </member>
        <member name="M:Insight.Database.InsightBulkCopyMappingCollection.Add(System.String,System.Int32)">
            <summary>
            Adds a column mapping.
            </summary>
            <param name="sourceColumn">The source column.</param>
            <param name="destinationColumnIndex">The destination column.</param>
        </member>
        <member name="M:Insight.Database.InsightBulkCopyMappingCollection.Add(System.Int32,System.String)">
            <summary>
            Adds a column mapping.
            </summary>
            <param name="sourceColumnIndex">The source column.</param>
            <param name="destinationColumn">The destination column.</param>
        </member>
        <member name="M:Insight.Database.InsightBulkCopyMappingCollection.Add(System.String,System.String)">
            <summary>
            Adds a column mapping.
            </summary>
            <param name="sourceColumn">The source column.</param>
            <param name="destinationColumn">The destination column.</param>
        </member>
        <member name="T:Insight.Database.JsonObjectSerializer">
            <summary>
            Serializes objects to JSON using the DataContractJsonSerializer or an overridden serializer (usually Newtonsoft.JSON).
            </summary>
        </member>
        <member name="F:Insight.Database.JsonObjectSerializer.Serializer">
            <summary>
            The singleton Serializer.
            </summary>
        </member>
        <member name="M:Insight.Database.JsonObjectSerializer.SerializeObject(System.Type,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.JsonObjectSerializer.DeserializeObject(System.Type,System.Object)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.JsonObjectSerializer.OverrideSerializer">
            <summary>
            Gets or sets a JSON Serializer to replace the DataContractJsonSerializer.
            </summary>
        </member>
        <member name="T:Insight.Database.Some`1">
            <summary>
            Represents a one-to-one object mapping that is returned in a single recordset.
            </summary>
            <typeparam name="T">The type of root object that is being returned.</typeparam>
        </member>
        <member name="T:Insight.Database.OptimisticCommand">
            <summary>
            Translates database exceptions to OptimisticConcurrencyExceptions.
            </summary>
        </member>
        <member name="T:Insight.Database.DbCommandWrapper">
            <summary>
            Wraps an IDbCommand and automatically handles retry logic for transient errors.
            </summary>
        </member>
        <member name="M:Insight.Database.DbCommandWrapper.#ctor(Insight.Database.DbConnectionWrapper,System.Data.Common.DbCommand)">
            <summary>
            Initializes a new instance of the DbCommandWrapper class, and bind it to the specified ReliableConnection and innerCommand.
            </summary>
            <param name="innerConnection">The innerConnection to bind to.</param>
            <param name="innerCommand">The innerCommand to bind to.</param>
        </member>
        <member name="M:Insight.Database.DbCommandWrapper.ExecuteNonQuery">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbCommandWrapper.ExecuteDbDataReader(System.Data.CommandBehavior)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbCommandWrapper.ExecuteScalar">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbCommandWrapper.Prepare">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbCommandWrapper.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbCommandWrapper.Cancel">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbCommandWrapper.CreateDbParameter">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.DbCommandWrapper.InnerCommand">
            <summary>
            Gets the inner command to use to execute the command.
            </summary>
        </member>
        <member name="P:Insight.Database.DbCommandWrapper.CommandText">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.DbCommandWrapper.CommandTimeout">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.DbCommandWrapper.CommandType">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.DbCommandWrapper.DbConnection">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.DbCommandWrapper.DbParameterCollection">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.DbCommandWrapper.DbTransaction">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.DbCommandWrapper.UpdatedRowSource">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.DbCommandWrapper.DesignTimeVisible">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OptimisticCommand.#ctor(Insight.Database.OptimisticConnection,System.Data.Common.DbCommand)">
            <summary>
            Initializes a new instance of the OptimisticCommand class, and bind it to the specified OptimisticConnection and innerCommand.
            </summary>
            <param name="innerConnection">The innerConnection to bind to.</param>
            <param name="innerCommand">The innerCommand to bind to.</param>
        </member>
        <member name="M:Insight.Database.OptimisticCommand.ExecuteNonQuery">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OptimisticCommand.ExecuteDbDataReader(System.Data.CommandBehavior)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OptimisticCommand.ExecuteScalar">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.OptimisticCommand.IsConcurrencyException(System.Exception)">
            <summary>
            Returns true if the exception is an optimistic concurrency exception.
            This method may be overridden.
            </summary>
            <param name="exception">The exception to test.</param>
            <returns>Whether the exception is a concurrency exception.</returns>
        </member>
        <member name="M:Insight.Database.OptimisticCommand.ExecuteAndTranslateExceptions``1(System.Func{``0})">
            <summary>
            Perform an action and translate exceptions.
            </summary>
            <typeparam name="T">The type of the result of the action.</typeparam>
            <param name="action">The action to perform.</param>
            <returns>The result of the action.</returns>
        </member>
        <member name="T:Insight.Database.OptimisticConcurrencyException">
            <summary>
            Indicates that a database call failed due to an optimistic concurrency issue.
            </summary>
        </member>
        <member name="F:Insight.Database.OptimisticConcurrencyException.ExceptionMessage">
            <summary>
            The exception message.
            </summary>
        </member>
        <member name="M:Insight.Database.OptimisticConcurrencyException.#ctor">
            <summary>
            Initializes a new instance of the OptimisticConcurrencyException class.
            </summary>
        </member>
        <member name="M:Insight.Database.OptimisticConcurrencyException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the OptimisticConcurrencyException class.
            </summary>
            <param name="innerException">The exception causing the issue.</param>
        </member>
        <member name="M:Insight.Database.OptimisticConcurrencyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the OptimisticConcurrencyException class.
            </summary>
            <param name="message">The message for the exception.</param>
            <param name="innerException">The exception causing the issue.</param>
        </member>
        <member name="M:Insight.Database.OptimisticConcurrencyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the OptimisticConcurrencyException class.
            </summary>
            <param name="message">The message for the exception.</param>
        </member>
        <member name="M:Insight.Database.OptimisticConcurrencyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the OptimisticConcurrencyException class.
            </summary>
            <param name="serializationInfo">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="T:Insight.Database.OptimisticConnection">
            <summary>
            Wraps a DbConnection and translates OptimisticConcurrencyExceptions.
            </summary>
        </member>
        <member name="T:Insight.Database.DbConnectionWrapper">
            <summary>
            Wraps an IDbConnection with a retry strategy to handle transient exceptions with retry logic.
            </summary>
        </member>
        <member name="M:Insight.Database.DbConnectionWrapper.#ctor(System.Data.IDbConnection)">
            <summary>
            Initializes a new instance of the DbConnectionWrapper class.
            </summary>
            <param name="innerConnection">The inner connection to wrap.</param>
        </member>
        <member name="M:Insight.Database.DbConnectionWrapper.#ctor">
            <summary>
            Initializes a new instance of the DbConnectionWrapper class.
            </summary>
        </member>
        <member name="M:Insight.Database.DbConnectionWrapper.Open">
            <summary>
            Opens the database connection with retry.
            </summary>
        </member>
        <member name="M:Insight.Database.DbConnectionWrapper.CreateDbCommand">
            <summary>
            Creates a DbCommand for calls to the database.
            </summary>
            <returns>A ReliableCommand.</returns>
        </member>
        <member name="M:Insight.Database.DbConnectionWrapper.Wrap(System.Data.IDbConnection)">
            <summary>
            Returns the connection as a DbConnectionWrapper, wrapping it in a new wrapper if necessary.
            </summary>
            <param name="connection">The connection to wrap.</param>
            <returns>The connection, possibly wrapped in a DbConnection wrapper.</returns>
        </member>
        <member name="M:Insight.Database.DbConnectionWrapper.BeginDbTransaction(System.Data.IsolationLevel)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbConnectionWrapper.ChangeDatabase(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbConnectionWrapper.Close">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbConnectionWrapper.GetSchema">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbConnectionWrapper.GetSchema(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbConnectionWrapper.GetSchema(System.String,System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbConnectionWrapper.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DbConnectionWrapper.Commit">
            <summary>
            Commits the open transaction.
            </summary>
        </member>
        <member name="M:Insight.Database.DbConnectionWrapper.Rollback">
            <summary>
            Rolls back the open transaction.
            </summary>
        </member>
        <member name="M:Insight.Database.DbConnectionWrapper.BeginAutoTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins an automatic transaction that ends when the connection is disposed.
            </summary>
            <param name="isolationLevel">The isolationLevel for the transaction.</param>
            <returns>This connection.</returns>
        </member>
        <member name="M:Insight.Database.DbConnectionWrapper.OpenAsync">
            <summary>
            Opens a connection asynchronously.
            </summary>
            <returns>A task representing when the connection has opened.</returns>
        </member>
        <member name="P:Insight.Database.DbConnectionWrapper.InnerConnection">
            <summary>
            Gets or sets the inner connection to use to execute the database commands.
            </summary>
        </member>
        <member name="P:Insight.Database.DbConnectionWrapper.CanRaiseEvents">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.DbConnectionWrapper.ConnectionString">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.DbConnectionWrapper.ServerVersion">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.DbConnectionWrapper.DataSource">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.DbConnectionWrapper.ConnectionTimeout">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.DbConnectionWrapper.Database">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.DbConnectionWrapper.State">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.DbConnectionWrapper.DbProviderFactory">
            <summary>
            Gets the DbProviderFactory that can be used to create this connection.
            </summary>
        </member>
        <member name="P:Insight.Database.DbConnectionWrapper.InnerTransaction">
            <summary>
            Gets the inner auto transaction for the connection.
            </summary>
        </member>
        <member name="P:Insight.Database.DbConnectionWrapper.Connection">
            <summary>
            Gets the connection associated with this transaction.
            </summary>
        </member>
        <member name="P:Insight.Database.DbConnectionWrapper.IsolationLevel">
            <summary>
            Gets the isolation level for the transaction.
            </summary>
        </member>
        <member name="M:Insight.Database.OptimisticConnection.#ctor(System.Data.Common.DbConnection)">
            <summary>
            Initializes a new instance of the OptimisticConnection class.
            </summary>
            <param name="innerConnection">The inner connection.</param>
        </member>
        <member name="M:Insight.Database.OptimisticConnection.IsConcurrencyException(System.Exception)">
            <summary>
            Returns true if the exception is an optimistic concurrency exception.
            This method may be overridden.
            </summary>
            <param name="exception">The exception to test.</param>
            <returns>Whether the exception is a concurrency exception.</returns>
        </member>
        <member name="M:Insight.Database.OptimisticConnection.CreateDbCommand">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.OptimisticConnection`1">
            <summary>
            Wraps a DbConnection and translates OptimisticConcurrencyExceptions.
            </summary>
            <typeparam name="TConnection">The type of connection to create.</typeparam>
        </member>
        <member name="M:Insight.Database.OptimisticConnection`1.#ctor">
            <summary>
            Initializes a new instance of the OptimisticConnection class.
            </summary>
        </member>
        <member name="M:Insight.Database.OptimisticConnection`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the OptimisticConnection class.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
        </member>
        <member name="T:Insight.Database.Providers.DbConnectionWrapperInsightDbProvider">
            <summary>
            Implements the Insight provider for connections wrapped in transactions.
            </summary>
        </member>
        <member name="T:Insight.Database.Providers.WrappedInsightDbProvider">
            <summary>
            Implements the Insight provider for wrapped connections.
            </summary>
            <remarks>
            For connections that wrap commands in other commands, 
            this class unwraps the command when Insight needs to access advanced features.
            </remarks>
        </member>
        <member name="T:Insight.Database.Providers.InsightDbProvider">
            <summary>
            Provides the infrastructure to access advanced features of database connections so Insight can do its magic.
            </summary>
        </member>
        <member name="F:Insight.Database.Providers.InsightDbProvider._providerMap">
            <summary>
            The map from object types to providers. This includes DbCommand and DbConnectionString types.
            </summary>
        </member>
        <member name="F:Insight.Database.Providers.InsightDbProvider._parameterRegex">
            <summary>
            Regex to detect parameters in sql text.
            </summary>
        </member>
        <member name="F:Insight.Database.Providers.InsightDbProvider._defaultProvider">
            <summary>
            The default provider to use if we don't understand a given type.
            </summary>
        </member>
        <member name="M:Insight.Database.Providers.InsightDbProvider.RegisterProvider(Insight.Database.Providers.InsightDbProvider)">
            <summary>
            Manually registers a provider.
            </summary>
            <param name="provider">The provider to register.</param>
        </member>
        <member name="M:Insight.Database.Providers.InsightDbProvider.For(System.Object)">
            <summary>
            Gets the provider that supports the given object.
            </summary>
            <param name="o">The object to inspect.</param>
            <returns>The provider for the object.</returns>
        </member>
        <member name="M:Insight.Database.Providers.InsightDbProvider.GetSupportedBulkCopyOptions(System.Data.IDbConnection)">
            <summary>
            Gets the set of bulk copy options supported by this provider.
            </summary>
            <param name="connection">The connection to inspect for bulk copy options.</param>
            <returns>The supported bulk copy options.</returns>
        </member>
        <member name="M:Insight.Database.Providers.InsightDbProvider.CreateDbConnection">
            <summary>
            Creates a new DbConnection supported by this provider.
            </summary>
            <returns>A new DbConnection.</returns>
        </member>
        <member name="M:Insight.Database.Providers.InsightDbProvider.CloneDbConnection(System.Data.IDbConnection)">
            <summary>
            Clones a new DbConnection supported by this provider.
            </summary>
            <param name="connection">The connection to clone.</param>
            <returns>A new DbConnection.</returns>
        </member>
        <member name="M:Insight.Database.Providers.InsightDbProvider.DeriveParameters(System.Data.IDbCommand)">
            <summary>
            Derives the parameter list for a given command.
            </summary>
            <param name="command">The command to use.</param>
            <returns>The list of parameters for the command.</returns>
        </member>
        <member name="M:Insight.Database.Providers.InsightDbProvider.DeriveParametersFromStoredProcedure(System.Data.IDbCommand)">
            <summary>
            Derives the parameter list from a stored procedure command.
            </summary>
            <param name="command">The command to derive.</param>
        </member>
        <member name="M:Insight.Database.Providers.InsightDbProvider.DeriveParametersFromSqlText(System.Data.IDbCommand)">
            <summary>
            Derives the parameter list from a sql text command.
            </summary>
            <param name="command">The command to derive.</param>
        </member>
        <member name="M:Insight.Database.Providers.InsightDbProvider.CloneParameter(System.Data.IDbCommand,System.Data.IDataParameter)">
            <summary>
            Clones a parameter so that it can be used with another command.
            </summary>
            <param name="command">The command to use.</param>
            <param name="parameter">The parameter to clone.</param>
            <returns>The clone.</returns>
        </member>
        <member name="M:Insight.Database.Providers.InsightDbProvider.FixupCommand(System.Data.IDbCommand)">
            <summary>
            Called after parameters are added to a command.
            </summary>
            <param name="command">The command to fix up.</param>
        </member>
        <member name="M:Insight.Database.Providers.InsightDbProvider.FixupParameter(System.Data.IDbCommand,System.Data.IDataParameter,System.Data.DbType,System.Type)">
            <summary>
            When building the parameter template, this allows the provider to fix properties.
            </summary>
            <param name="command">The command being prepared.</param>
            <param name="parameter">The parameter to fix up.</param>
            <param name="dbType">The best guess at the DbType of the parameter.</param>
            <param name="type">The type of the object that will be passed in the parameter.</param>
        </member>
        <member name="M:Insight.Database.Providers.InsightDbProvider.IsXmlParameter(System.Data.IDbCommand,System.Data.IDataParameter)">
            <summary>
            Determines if a parameter is an XML type parameter.
            </summary>
            <param name="command">The related command object.</param>
            <param name="parameter">The parameter to test.</param>
            <returns>True if the parameter is an XML parameter.</returns>
        </member>
        <member name="M:Insight.Database.Providers.InsightDbProvider.IsTableValuedParameter(System.Data.IDbCommand,System.Data.IDataParameter)">
            <summary>
            Determines if a parameter is a Table-valued parameter.
            </summary>
            <param name="command">The related command object.</param>
            <param name="parameter">The parameter to test.</param>
            <returns>True if the parameter is a table-valued parameter.</returns>
        </member>
        <member name="M:Insight.Database.Providers.InsightDbProvider.SetupTableValuedParameter(System.Data.IDbCommand,System.Data.IDataParameter,System.Collections.IEnumerable,System.Type)">
            <summary>
            Set up a table-valued parameter to a procedure.
            </summary>
            <param name="command">The command to operate on.</param>
            <param name="parameter">The parameter to set up.</param>
            <param name="list">The list of records.</param>
            <param name="listType">The type of object in the list.</param>
        </member>
        <member name="M:Insight.Database.Providers.InsightDbProvider.GetTableSchemaSql(System.Data.IDbConnection,System.String)">
            <summary>
            Returns SQL that queries a table for the schema only, no rows.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="tableName">The name of the table to query.</param>
            <returns>SQL that queries a table for the schema only, no rows.</returns>
        </member>
        <member name="M:Insight.Database.Providers.InsightDbProvider.IsXmlColumn(System.Data.DataTable,System.Int32)">
            <summary>
            Determines if the given column in the schema table is an XML column.
            </summary>
            <param name="schemaTable">The schema table to analyze.</param>
            <param name="index">The index of the column.</param>
            <returns>True if the column is an XML column.</returns>
        </member>
        <member name="M:Insight.Database.Providers.InsightDbProvider.BulkCopy(System.Data.IDbConnection,System.String,System.Data.IDataReader,System.Action{Insight.Database.InsightBulkCopy},Insight.Database.InsightBulkCopyOptions,System.Data.IDbTransaction)">
            <summary>
            Bulk copies a set of objects to the server.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="tableName">The name of the table.</param>
            <param name="reader">The reader to read objects from.</param>
            <param name="configure">A callback method to configure the bulk copy object.</param>
            <param name="options">Options for initializing the bulk copy object.</param>
            <param name="transaction">An optional transaction to participate in.</param>
        </member>
        <member name="M:Insight.Database.Providers.InsightDbProvider.BulkCopyAsync(System.Data.IDbConnection,System.String,System.Data.IDataReader,System.Action{Insight.Database.InsightBulkCopy},Insight.Database.InsightBulkCopyOptions,System.Data.IDbTransaction,Insight.Database.CancellationToken)">
            <summary>
            Bulk copies a set of objects to the server.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="tableName">The name of the table.</param>
            <param name="reader">The reader to read objects from.</param>
            <param name="configure">A callback method to configure the bulk copy object.</param>
            <param name="options">Options for initializing the bulk copy object.</param>
            <param name="transaction">An optional transaction to participate in.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>A task representing the completion of the bulk copy.</returns>
        </member>
        <member name="M:Insight.Database.Providers.InsightDbProvider.IsTransientException(System.Exception)">
            <summary>
            Determines if a database exception is a transient exception and if the operation could be retried.
            </summary>
            <param name="exception">The exception to test.</param>
            <returns>True if the exception is transient.</returns>
        </member>
        <member name="M:Insight.Database.Providers.InsightDbProvider.CopyParameters(System.Data.IDbCommand,System.Collections.Generic.IList{System.Data.IDataParameter})">
            <summary>
            Copies the list of parameters into the given command.
            </summary>
            <param name="command">The command to copy into.</param>
            <param name="parameters">The parameter template to copy from.</param>
            <returns>The list of parameters.</returns>
        </member>
        <member name="M:Insight.Database.Providers.InsightDbProvider.LoadProviders">
            <summary>
            Initializes static members of the InsightDbProvider class.
            </summary>
            <returns>The set of providers.</returns>
        </member>
        <member name="M:Insight.Database.Providers.InsightDbProvider.RegisterProvider(System.Collections.Generic.Dictionary{System.Type,Insight.Database.Providers.InsightDbProvider},Insight.Database.Providers.InsightDbProvider)">
            <summary>
            Registers a provider.
            </summary>
            <param name="providerMap">The provider map.</param>
            <param name="provider">The provider to register.</param>
        </member>
        <member name="P:Insight.Database.Providers.InsightDbProvider.SupportedTypes">
            <summary>
            Gets the types of objects that this provider supports.
            Include connectionstrings, connections, commands, and readers.
            </summary>
        </member>
        <member name="M:Insight.Database.Providers.WrappedInsightDbProvider.GetInnerConnection(System.Data.IDbConnection)">
            <summary>
            Unwraps the given connection and returns the inner connection.
            </summary>
            <param name="connection">The outer connection.</param>
            <returns>The inner connection.</returns>
        </member>
        <member name="M:Insight.Database.Providers.WrappedInsightDbProvider.GetInnerCommand(System.Data.IDbCommand)">
            <summary>
            Unwraps the given command and returns the inner command.
            </summary>
            <param name="command">The outer command.</param>
            <returns>The inner command.</returns>
        </member>
        <member name="M:Insight.Database.Providers.WrappedInsightDbProvider.DeriveParameters(System.Data.IDbCommand)">
            <summary>
            Derives the parameter list for a given command.
            </summary>
            <param name="command">The command to use.</param>
            <returns>The list of parameters for the command.</returns>
        </member>
        <member name="M:Insight.Database.Providers.WrappedInsightDbProvider.DeriveParametersFromStoredProcedure(System.Data.IDbCommand)">
            <summary>
            Derives the parameter list from a stored procedure command.
            </summary>
            <param name="command">The command to derive.</param>
        </member>
        <member name="M:Insight.Database.Providers.WrappedInsightDbProvider.DeriveParametersFromSqlText(System.Data.IDbCommand)">
            <summary>
            Derives the parameter list from a sql text command.
            </summary>
            <param name="command">The command to derive.</param>
        </member>
        <member name="M:Insight.Database.Providers.WrappedInsightDbProvider.FixupCommand(System.Data.IDbCommand)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Providers.WrappedInsightDbProvider.FixupParameter(System.Data.IDbCommand,System.Data.IDataParameter,System.Data.DbType,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Providers.WrappedInsightDbProvider.GetSupportedBulkCopyOptions(System.Data.IDbConnection)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Providers.WrappedInsightDbProvider.CloneParameter(System.Data.IDbCommand,System.Data.IDataParameter)">
            <summary>
            Clones a parameter so that it can be used with another command.
            </summary>
            <param name="command">The command to use.</param>
            <param name="parameter">The parameter to clone.</param>
            <returns>The clone.</returns>
        </member>
        <member name="M:Insight.Database.Providers.WrappedInsightDbProvider.IsXmlParameter(System.Data.IDbCommand,System.Data.IDataParameter)">
            <summary>
            Determines if a parameter is an XML type parameter.
            </summary>
            <param name="command">The related command object.</param>
            <param name="parameter">The parameter to test.</param>
            <returns>True if the parameter is an XML parameter.</returns>
        </member>
        <member name="M:Insight.Database.Providers.WrappedInsightDbProvider.IsTableValuedParameter(System.Data.IDbCommand,System.Data.IDataParameter)">
            <summary>
            Determines if a parameter is a Table-valued parameter.
            </summary>
            <param name="command">The related command object.</param>
            <param name="parameter">The parameter to test.</param>
            <returns>True if the parameter is a table-valued parameter.</returns>
        </member>
        <member name="M:Insight.Database.Providers.WrappedInsightDbProvider.SetupTableValuedParameter(System.Data.IDbCommand,System.Data.IDataParameter,System.Collections.IEnumerable,System.Type)">
            <summary>
            Set up a table-valued parameter to a procedure.
            </summary>
            <param name="command">The command to operate on.</param>
            <param name="parameter">The parameter to set up.</param>
            <param name="list">The list of records.</param>
            <param name="listType">The type of object in the list.</param>
        </member>
        <member name="M:Insight.Database.Providers.WrappedInsightDbProvider.GetTableSchemaSql(System.Data.IDbConnection,System.String)">
            <summary>
            Returns SQL that queries a table for the schema only, no rows.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="tableName">The name of the table to query.</param>
            <returns>SQL that queries a table for the schema only, no rows.</returns>
        </member>
        <member name="M:Insight.Database.Providers.WrappedInsightDbProvider.BulkCopy(System.Data.IDbConnection,System.String,System.Data.IDataReader,System.Action{Insight.Database.InsightBulkCopy},Insight.Database.InsightBulkCopyOptions,System.Data.IDbTransaction)">
            <summary>
            Bulk copies a set of objects to the server.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="tableName">The name of the table.</param>
            <param name="reader">The reader to read objects from.</param>
            <param name="configure">A callback method to configure the bulk copy object.</param>
            <param name="options">Options for initializing the bulk copy object.</param>
            <param name="transaction">An optional transaction to participate in.</param>
            <remarks>Number of rows copied.</remarks>
        </member>
        <member name="M:Insight.Database.Providers.WrappedInsightDbProvider.BulkCopyAsync(System.Data.IDbConnection,System.String,System.Data.IDataReader,System.Action{Insight.Database.InsightBulkCopy},Insight.Database.InsightBulkCopyOptions,System.Data.IDbTransaction,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="F:Insight.Database.Providers.DbConnectionWrapperInsightDbProvider._supportedTypes">
            <summary>
            The list of types supported by this provider.
            </summary>
        </member>
        <member name="M:Insight.Database.Providers.DbConnectionWrapperInsightDbProvider.GetSupportedBulkCopyOptions(System.Data.IDbConnection)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Providers.DbConnectionWrapperInsightDbProvider.CloneDbConnection(System.Data.IDbConnection)">
            <summary>
            Clones a new DbConnection supported by this provider.
            </summary>
            <param name="connection">The connection to clone.</param>
            <returns>A new DbConnection.</returns>
        </member>
        <member name="M:Insight.Database.Providers.DbConnectionWrapperInsightDbProvider.GetInnerConnection(System.Data.IDbConnection)">
            <summary>
            Unwraps the given connection and returns the inner command.
            </summary>
            <param name="connection">The outer connection.</param>
            <returns>The inner connection.</returns>
        </member>
        <member name="M:Insight.Database.Providers.DbConnectionWrapperInsightDbProvider.GetInnerCommand(System.Data.IDbCommand)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Providers.DbConnectionWrapperInsightDbProvider.BulkCopy(System.Data.IDbConnection,System.String,System.Data.IDataReader,System.Action{Insight.Database.InsightBulkCopy},Insight.Database.InsightBulkCopyOptions,System.Data.IDbTransaction)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Providers.DbConnectionWrapperInsightDbProvider.SupportedTypes">
            <summary>
            Gets the types of objects that this provider supports.
            Include connectionstrings, connections, commands, and readers.
            </summary>
        </member>
        <member name="T:Insight.Database.ChildRecordsAttribute">
            <summary>
            Marks a field or property as the one that Insight should prefer to use to put lists of child records.
            </summary>
        </member>
        <member name="T:Insight.Database.ParentRecordIdAttribute">
            <summary>
            Marks a field or property as the one Insight should consider as the ID field.
            </summary>
        </member>
        <member name="M:Insight.Database.ParentRecordIdAttribute.#ctor">
            <summary>
            Initializes a new instance of the ParentRecordIdAttribute class.
            </summary>
        </member>
        <member name="M:Insight.Database.ParentRecordIdAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the ParentRecordIdAttribute class.
            </summary>
            <param name="order">An index representing the order the Ids should be evaluated.</param>
        </member>
        <member name="P:Insight.Database.ParentRecordIdAttribute.Order">
            <summary>
            Gets the order of the ID field.
            </summary>
        </member>
        <member name="T:Insight.Database.RecordIdAttribute">
            <summary>
            Marks a field or property as the one Insight should consider as the ID field.
            </summary>
        </member>
        <member name="M:Insight.Database.RecordIdAttribute.#ctor">
            <summary>
            Initializes a new instance of the RecordIdAttribute class.
            </summary>
        </member>
        <member name="M:Insight.Database.RecordIdAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the RecordIdAttribute class.
            </summary>
            <param name="order">An index representing the order the Ids should be evaluated.</param>
        </member>
        <member name="P:Insight.Database.RecordIdAttribute.Order">
            <summary>
            Gets the order of the ID field.
            </summary>
        </member>
        <member name="T:Insight.Database.Results`2">
            <summary>
            Encapsulates multiple sets of data returned from the database.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
        </member>
        <member name="T:Insight.Database.Results`1">
            <summary>
            Encapsulates multiple sets of data returned from the database.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
        </member>
        <member name="T:Insight.Database.Results">
            <summary>
            Encapsulates multiple sets of data returned from the database.
            </summary>
        </member>
        <member name="F:Insight.Database.Results._outputs">
            <summary>
            Contains the results of the output parameters of the query.
            </summary>
        </member>
        <member name="M:Insight.Database.Results.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <summary>
            Reads the records from the data reader.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
        </member>
        <member name="M:Insight.Database.Results.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the records from the data reader asynchronously.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>A task representing the completion of the read.</returns>
        </member>
        <member name="M:Insight.Database.Results.SaveCommandForOutputs(System.Data.IDbCommand)">
            <summary>
            Saves the command so that the output parameters can be read if necessary.
            </summary>
            <param name="command">The command that generated the result set.</param>
        </member>
        <member name="P:Insight.Database.Results.Outputs">
            <summary>
            Gets the outputs of the query.
            </summary>
        </member>
        <member name="M:Insight.Database.Results`1.GetReader">
            <summary>
            Gets the default query reader for this class.
            </summary>
            <returns>A query reader that can read this class.</returns>
        </member>
        <member name="M:Insight.Database.Results`1.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`1.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.Results`1.Set1">
            <summary>
            Gets the first set of data returned from the database.
            </summary>
        </member>
        <member name="M:Insight.Database.Results`2.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`2.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`2.GetReader">
            <summary>
            Gets the default query reader for this class.
            </summary>
            <returns>A query reader that can read this class.</returns>
            <remarks>This is used by DynamicConnection</remarks>
        </member>
        <member name="P:Insight.Database.Results`2.Set2">
            <summary>
            Gets the second set of data returned from the database.
            </summary>
        </member>
        <member name="T:Insight.Database.Results`3">
            <summary>
            Encapsulates multiple sets of data returned from the database.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
        </member>
        <member name="M:Insight.Database.Results`3.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`3.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`3.GetReader">
            <summary>
            Gets the default query reader for this class.
            </summary>
            <returns>A query reader that can read this class.</returns>
            <remarks>This is used by DynamicConnection</remarks>
        </member>
        <member name="P:Insight.Database.Results`3.Set3">
            <summary>
            Gets the third set of data returned from the database.
            </summary>
        </member>
        <member name="T:Insight.Database.Results`4">
            <summary>
            Encapsulates multiple sets of data returned from the database.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
        </member>
        <member name="M:Insight.Database.Results`4.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`4.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`4.GetReader">
            <summary>
            Gets the default query reader for this class.
            </summary>
            <returns>A query reader that can read this class.</returns>
            <remarks>This is used by DynamicConnection</remarks>
        </member>
        <member name="P:Insight.Database.Results`4.Set4">
            <summary>
            Gets the fourth set of data returned from the database.
            </summary>
        </member>
        <member name="T:Insight.Database.Results`5">
            <summary>
            Encapsulates multiple sets of data returned from the database.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
        </member>
        <member name="M:Insight.Database.Results`5.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`5.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`5.GetReader">
            <summary>
            Gets the default query reader for this class.
            </summary>
            <returns>A query reader that can read this class.</returns>
            <remarks>This is used by DynamicConnection</remarks>
        </member>
        <member name="P:Insight.Database.Results`5.Set5">
            <summary>
            Gets the fifth set of data returned from the database.
            </summary>
        </member>
        <member name="T:Insight.Database.Results`6">
            <summary>
            Encapsulates multiple sets of data returned from the database.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
        </member>
        <member name="M:Insight.Database.Results`6.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`6.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`6.GetReader">
            <summary>
            Gets the default query reader for this class.
            </summary>
            <returns>A query reader that can read this class.</returns>
            <remarks>This is used by DynamicConnection</remarks>
        </member>
        <member name="P:Insight.Database.Results`6.Set6">
            <summary>
            Gets the sixth set of data returned from the database.
            </summary>
        </member>
        <member name="T:Insight.Database.Results`7">
            <summary>
            Encapsulates multiple sets of data returned from the database.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
        </member>
        <member name="M:Insight.Database.Results`7.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`7.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`7.GetReader">
            <summary>
            Gets the default query reader for this class.
            </summary>
            <returns>A query reader that can read this class.</returns>
            <remarks>This is used by DynamicConnection</remarks>
        </member>
        <member name="P:Insight.Database.Results`7.Set7">
            <summary>
            Gets the seventh set of data returned from the database.
            </summary>
        </member>
        <member name="T:Insight.Database.Results`8">
            <summary>
            Encapsulates multiple sets of data returned from the database.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
        </member>
        <member name="M:Insight.Database.Results`8.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`8.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`8.GetReader">
            <summary>
            Gets the default query reader for this class.
            </summary>
            <returns>A query reader that can read this class.</returns>
            <remarks>This is used by DynamicConnection</remarks>
        </member>
        <member name="P:Insight.Database.Results`8.Set8">
            <summary>
            Gets the eighth set of data returned from the database.
            </summary>
        </member>
        <member name="T:Insight.Database.Results`9">
            <summary>
            Encapsulates multiple sets of data returned from the database.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
        </member>
        <member name="M:Insight.Database.Results`9.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`9.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`9.GetReader">
            <summary>
            Gets the default query reader for this class.
            </summary>
            <returns>A query reader that can read this class.</returns>
            <remarks>This is used by DynamicConnection</remarks>
        </member>
        <member name="P:Insight.Database.Results`9.Set9">
            <summary>
            Gets the nineth set of data returned from the database.
            </summary>
        </member>
        <member name="T:Insight.Database.Results`10">
            <summary>
            Encapsulates multiple sets of data returned from the database.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
        </member>
        <member name="M:Insight.Database.Results`10.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`10.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`10.GetReader">
            <summary>
            Gets the default query reader for this class.
            </summary>
            <returns>A query reader that can read this class.</returns>
            <remarks>This is used by DynamicConnection</remarks>
        </member>
        <member name="P:Insight.Database.Results`10.Set10">
            <summary>
            Gets the tenth set of data returned from the database.
            </summary>
        </member>
        <member name="T:Insight.Database.Results`11">
            <summary>
            Encapsulates multiple sets of data returned from the database.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
        </member>
        <member name="M:Insight.Database.Results`11.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`11.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`11.GetReader">
            <summary>
            Gets the default query reader for this class.
            </summary>
            <returns>A query reader that can read this class.</returns>
            <remarks>This is used by DynamicConnection</remarks>
        </member>
        <member name="P:Insight.Database.Results`11.Set11">
            <summary>
            Gets the eleventh set of data returned from the database.
            </summary>
        </member>
        <member name="T:Insight.Database.Results`12">
            <summary>
            Encapsulates multiple sets of data returned from the database.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
        </member>
        <member name="M:Insight.Database.Results`12.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`12.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`12.GetReader">
            <summary>
            Gets the default query reader for this class.
            </summary>
            <returns>A query reader that can read this class.</returns>
            <remarks>This is used by DynamicConnection</remarks>
        </member>
        <member name="P:Insight.Database.Results`12.Set12">
            <summary>
            Gets the twelfth set of data returned from the database.
            </summary>
        </member>
        <member name="T:Insight.Database.Results`13">
            <summary>
            Encapsulates multiple sets of data returned from the database.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
        </member>
        <member name="M:Insight.Database.Results`13.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`13.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`13.GetReader">
            <summary>
            Gets the default query reader for this class.
            </summary>
            <returns>A query reader that can read this class.</returns>
            <remarks>This is used by DynamicConnection</remarks>
        </member>
        <member name="P:Insight.Database.Results`13.Set13">
            <summary>
            Gets the thirteenth set of data returned from the database.
            </summary>
        </member>
        <member name="T:Insight.Database.Results`14">
            <summary>
            Encapsulates multiple sets of data returned from the database.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
        </member>
        <member name="M:Insight.Database.Results`14.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`14.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`14.GetReader">
            <summary>
            Gets the default query reader for this class.
            </summary>
            <returns>A query reader that can read this class.</returns>
            <remarks>This is used by DynamicConnection</remarks>
        </member>
        <member name="P:Insight.Database.Results`14.Set14">
            <summary>
            Gets the fourteenth set of data returned from the database.
            </summary>
        </member>
        <member name="T:Insight.Database.Results`15">
            <summary>
            Encapsulates multiple sets of data returned from the database.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth set of data.</typeparam>
        </member>
        <member name="M:Insight.Database.Results`15.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`15.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`15.GetReader">
            <summary>
            Gets the default query reader for this class.
            </summary>
            <returns>A query reader that can read this class.</returns>
            <remarks>This is used by DynamicConnection</remarks>
        </member>
        <member name="P:Insight.Database.Results`15.Set15">
            <summary>
            Gets the fifteenth set of data returned from the database.
            </summary>
        </member>
        <member name="T:Insight.Database.Results`16">
            <summary>
            Encapsulates multiple sets of data returned from the database.
            </summary>
            <typeparam name="T1">The type of the data in the first set of data.</typeparam>
            <typeparam name="T2">The type of the data in the second set of data.</typeparam>
            <typeparam name="T3">The type of the data in the third set of data.</typeparam>
            <typeparam name="T4">The type of the data in the fourth set of data.</typeparam>
            <typeparam name="T5">The type of the data in the fifth set of data.</typeparam>
            <typeparam name="T6">The type of the data in the sixth set of data.</typeparam>
            <typeparam name="T7">The type of the data in the seventh set of data.</typeparam>
            <typeparam name="T8">The type of the data in the eighth set of data.</typeparam>
            <typeparam name="T9">The type of the data in the nineth set of data.</typeparam>
            <typeparam name="T10">The type of the data in the tenth set of data.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh set of data.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth set of data.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth set of data.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth set of data.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth set of data.</typeparam>
            <typeparam name="T16">The type of the data in the sixteenth set of data.</typeparam>
        </member>
        <member name="M:Insight.Database.Results`16.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`16.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Results`16.GetReader">
            <summary>
            Gets the default query reader for this class.
            </summary>
            <returns>A query reader that can read this class.</returns>
            <remarks>This is used by DynamicConnection</remarks>
        </member>
        <member name="P:Insight.Database.Results`16.Set16">
            <summary>
            Gets the sixteenth set of data returned from the database.
            </summary>
        </member>
        <member name="T:Insight.Database.SerializationMode">
            <summary>
            Specifies the format to serialize objects in the database.
            </summary>
        </member>
        <member name="F:Insight.Database.SerializationMode.Default">
            <summary>
            Use the default serializer.
            </summary>
        </member>
        <member name="F:Insight.Database.SerializationMode.Xml">
            <summary>
            Serialize the object as XML, using the DataContractSerializer.
            </summary>
        </member>
        <member name="F:Insight.Database.SerializationMode.Json">
            <summary>
            Serialize the object as JSON.
            </summary>
        </member>
        <member name="F:Insight.Database.SerializationMode.ToString">
            <summary>
            Serialize the object by calling the ToString method.
            </summary>
        </member>
        <member name="F:Insight.Database.SerializationMode.Custom">
            <summary>
            Use a custom serializer for the column.
            </summary>
        </member>
        <member name="T:Insight.Database.SqlAttribute">
            <summary>
            Specifies that Insight should generate the specified SQL for the interface method.
            </summary>
        </member>
        <member name="M:Insight.Database.SqlAttribute.#ctor">
            <summary>
            Initializes a new instance of the SqlAttribute class.
            </summary>
        </member>
        <member name="M:Insight.Database.SqlAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SqlAttribute class.
            </summary>
            <param name="sql">The SQL to use for the interface method.</param>
        </member>
        <member name="M:Insight.Database.SqlAttribute.#ctor(System.String,System.Data.CommandType)">
            <summary>
            Initializes a new instance of the SqlAttribute class.
            </summary>
            <param name="sql">The SQL to use for the interface method.</param>
            <param name="commandType">The CommandType to use to execute the query.</param>
        </member>
        <member name="P:Insight.Database.SqlAttribute.Schema">
            <summary>
            Gets or sets the default SQL Schema to use when calling stored procedures.
            </summary>
        </member>
        <member name="P:Insight.Database.SqlAttribute.Sql">
            <summary>
            Gets or sets the SQL to use for the interface method.
            </summary>
        </member>
        <member name="P:Insight.Database.SqlAttribute.CommandType">
            <summary>
            Gets or sets the CommandType to use for the interface method.
            </summary>
        </member>
        <member name="T:Insight.Database.DbConnectionStringBuilderExtensions">
            <summary>
            Extension methods for DbConnectionStringBuilder.
            </summary>
        </member>
        <member name="M:Insight.Database.DbConnectionStringBuilderExtensions.Connection(System.Data.Common.DbConnectionStringBuilder)">
            <summary>
            Creates and returns a new DbConnection.
            </summary>
            <param name="builder">The DbConnectionStringBuilder containing the connection string.</param>
            <returns>A closed DbConnection.</returns>
        </member>
        <member name="M:Insight.Database.DbConnectionStringBuilderExtensions.As``1(System.Data.Common.DbConnectionStringBuilder)">
            <summary>
            Creates and returns a new connection implementing the given interface.
            </summary>
            <typeparam name="T">The interface to implement on the connection.</typeparam>
            <param name="builder">The DbConnectionStringBuilder containing the connection string.</param>
            <returns>A closed connection that implements the given interface.</returns>
        </member>
        <member name="M:Insight.Database.DbConnectionStringBuilderExtensions.AsParallel``1(System.Data.Common.DbConnectionStringBuilder)">
            <summary>
            Creates and returns a new multi-threaded connection implementing the given interface.
            The object can support making multiple calls at the same time.
            </summary>
            <typeparam name="T">The interface to implement on the connection.</typeparam>
            <param name="builder">The DbConnectionStringBuilder containing the connection string.</param>
            <returns>A closed connection that implements the given interface.</returns>
        </member>
        <member name="M:Insight.Database.DbConnectionStringBuilderExtensions.Open(System.Data.Common.DbConnectionStringBuilder)">
            <summary>
            Opens and returns a database connection.
            </summary>
            <param name="builder">The connection string to open and return.</param>
            <returns>The opened connection.</returns>
        </member>
        <member name="M:Insight.Database.DbConnectionStringBuilderExtensions.OpenAsync(System.Data.Common.DbConnectionStringBuilder,System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Opens and returns a database connection.
            </summary>
            <param name="builder">The connection string to open and return.</param>
            <param name="cancellationToken">The cancellation token to use for the operation.</param>
            <returns>The opened connection.</returns>
        </member>
        <member name="M:Insight.Database.DbConnectionStringBuilderExtensions.OpenAs``1(System.Data.Common.DbConnectionStringBuilder)">
            <summary>
            Opens and returns a database connection implementing a given interface.
            </summary>
            <typeparam name="T">The interface to implmement.</typeparam>
            <param name="builder">The connection string to open and return.</param>
            <returns>The opened connection.</returns>
        </member>
        <member name="M:Insight.Database.DbConnectionStringBuilderExtensions.OpenAsAsync``1(System.Data.Common.DbConnectionStringBuilder,System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Asynchronously opens and returns a database connection implementing a given interface.
            </summary>
            <typeparam name="T">The interface to implmement.</typeparam>
            <param name="builder">The connection string to open and return.</param>
            <param name="cancellationToken">The cancellation token to use for the operation.</param>
            <returns>The opened connection.</returns>
        </member>
        <member name="M:Insight.Database.DbConnectionStringBuilderExtensions.OpenWithTransaction(System.Data.Common.DbConnectionStringBuilder)">
            <summary>
            Opens a database connection and begins a new transaction that is disposed when the returned object is disposed.
            </summary>
            <param name="builder">The builder for the connection.</param>
            <returns>A wrapper for the database connection.</returns>
        </member>
        <member name="M:Insight.Database.DbConnectionStringBuilderExtensions.OpenWithTransactionAsync(System.Data.Common.DbConnectionStringBuilder,System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Asynchronously opens a database connection and begins a new transaction that is disposed when the returned object is disposed.
            </summary>
            <param name="builder">The builder for the connection.</param>
            <param name="cancellationToken">The cancellation token to use for the operation.</param>
            <returns>A task returning a connection when the connection has been opened.</returns>
        </member>
        <member name="M:Insight.Database.DbConnectionStringBuilderExtensions.OpenWithTransactionAs``1(System.Data.Common.DbConnectionStringBuilder)">
            <summary>
            Opens a database connection implementing a given interface and begins a new transaction that is disposed when the returned object is disposed.
            </summary>
            <typeparam name="T">The interface to implement.</typeparam>
            <param name="builder">The builder for the connection.</param>
            <returns>A wrapper for the database connection.</returns>
        </member>
        <member name="M:Insight.Database.DbConnectionStringBuilderExtensions.OpenWithTransactionAsAsync``1(System.Data.Common.DbConnectionStringBuilder,System.Nullable{Insight.Database.CancellationToken})">
            <summary>
            Asynchronously opens a database connection implementing a given interface, and begins a new transaction that is disposed when the returned object is disposed.
            </summary>
            <typeparam name="T">The interface to implement.</typeparam>
            <param name="builder">The builder for the connection.</param>
            <param name="cancellationToken">The cancellation token to use for the operation.</param>
            <returns>A task returning a connection when the connection has been opened.</returns>
        </member>
        <member name="T:Insight.Database.Helpers">
            <summary>
            Internal helpers.
            </summary>
        </member>
        <member name="F:Insight.Database.Helpers.FalseTask">
            <summary>
            Represents a completed false task.
            </summary>
        </member>
        <member name="M:Insight.Database.Helpers.FromResult``1(``0)">
            <summary>
            Returns a completed task from the given result.
            </summary>
            <typeparam name="T">The type of the result.</typeparam>
            <param name="result">The result.</param>
            <returns>A completed task.</returns>
        </member>
        <member name="M:Insight.Database.Helpers.IsIEqualTo(System.String,System.String)">
            <summary>
            Determines whether two strings are case-insensitive equal.
            </summary>
            <param name="s1">The first string.</param>
            <param name="s2">The second string.</param>
            <returns>True if they are equal.</returns>
        </member>
        <member name="T:Insight.Database.RegexReplaceTransform`1">
            <summary>
            Handles mapping a column name to a field name by applying a Regex replace.
            </summary>
            <typeparam name="T">The type of object to apply to.</typeparam>
        </member>
        <member name="F:Insight.Database.RegexReplaceTransform`1._regex">
            <summary>
            The Regex to use for the mapping.
            </summary>
        </member>
        <member name="F:Insight.Database.RegexReplaceTransform`1._replacement">
            <summary>
            The replacement text to use for the mapping.
            </summary>
        </member>
        <member name="M:Insight.Database.RegexReplaceTransform`1.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the RegexReplaceTransform class.
            </summary>
            <remarks>
            This method uses the Regex.Replace method to alter the target field name.
            It supports the standard Regex replacement syntax.
            </remarks>
            <param name="regex">The regex to use to parse names.</param>
            <param name="replacement">The replacement string to use with the regex.</param>
        </member>
        <member name="M:Insight.Database.RegexReplaceTransform`1.TransformDatabaseName(System.Type,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.RegexReplaceMappingHandler">
            <summary>
            Handles mapping a column name to a field name by applying a Regex replace.
            This applies to all type of objects.
            </summary>
        </member>
        <member name="M:Insight.Database.RegexReplaceMappingHandler.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the RegexReplaceMappingHandler class.
            </summary>
            <remarks>
            This method uses the Regex.Replace method to alter the target field name.
            It supports the standard Regex replacement syntax.
            </remarks>
            <param name="regex">The regex to use to parse names.</param>
            <param name="replacement">The replacement string to use with the regex.</param>
        </member>
        <member name="T:Insight.Database.Reliable.RetryStrategy">
            <summary>
            Defines a strategy for detecting transient errors and retrying the operations.
            </summary>
        </member>
        <member name="T:Insight.Database.Reliable.IRetryStrategy">
            <summary>
            Defines a strategy for handling retries for transient exceptions in database connections such as SQL Azure.
            </summary>
        </member>
        <member name="M:Insight.Database.Reliable.IRetryStrategy.ExecuteWithRetry``1(System.Data.IDbCommand,System.Func{``0})">
            <summary>
            Executes a function and retries the action if a transient error is detected.
            </summary>
            <typeparam name="TResult">The type of the result of the function.</typeparam>
            <param name="commandContext">The IDbCommand that is expected to be executed within the function, 
            or null if the operation is being performed directly on a connection.</param>
            <param name="func">The function to execute.</param>
            <returns>The result of the function.</returns>
        </member>
        <member name="M:Insight.Database.Reliable.IRetryStrategy.ExecuteWithRetryAsync``1(System.Data.IDbCommand,System.Func{Insight.Database.Task{``0}})">
            <summary>
            Asynchronously executes a function and retries the action if a transient error is detected.
            </summary>
            <typeparam name="TResult">The type of the result of the function.</typeparam>
            <param name="commandContext">The IDbCommand that is expected to be executed within the function, 
            or null if the operation is being performed directly on a connection.</param>
            <param name="func">The function to execute.</param>
            <returns>The result of the function.</returns>
        </member>
        <member name="F:Insight.Database.Reliable.RetryStrategy.NoRepeat">
            <summary>
            Timespan for not repeating a timer operation.
            </summary>
        </member>
        <member name="F:Insight.Database.Reliable.RetryStrategy._default">
            <summary>
            The default retry strategy to use if none is specified.
            </summary>
        </member>
        <member name="M:Insight.Database.Reliable.RetryStrategy.#ctor">
            <summary>
            Initializes a new instance of the RetryStrategy class.
            </summary>
        </member>
        <member name="M:Insight.Database.Reliable.RetryStrategy.ExecuteWithRetry``1(System.Data.IDbCommand,System.Func{``0})">
            <summary>
            Executes a function and retries the action if a transient error is detected.
            </summary>
            <typeparam name="TResult">The type of the result of the function.</typeparam>
            <param name="commandContext">The IDbCommand that is expected to be executed within the function, 
            or null if the operation is being performed directly on a connection.</param>
            <param name="func">The function to execute.</param>
            <returns>The result of the function.</returns>
        </member>
        <member name="M:Insight.Database.Reliable.RetryStrategy.ExecuteWithRetryAsync``1(System.Data.IDbCommand,System.Func{Insight.Database.Task{``0}})">
            <summary>
            Asynchronously executes a function and retries the action if a transient error is detected.
            </summary>
            <typeparam name="TResult">The type of the result of the function.</typeparam>
            <param name="commandContext">The IDbCommand that is expected to be executed within the function, 
            or null if the operation is being performed directly on a connection.</param>
            <param name="func">The function to execute.</param>
            <returns>The result of the function.</returns>
        </member>
        <member name="M:Insight.Database.Reliable.RetryStrategy.IsTransientException(System.Exception)">
            <summary>
            Determines if an exception is a transient error.
            </summary>
            <param name="exception">The exception to test.</param>
            <returns>True if the exception is a transient error, false if the command should not be retried.</returns>
        </member>
        <member name="M:Insight.Database.Reliable.RetryStrategy.CheckAsyncResult``1(System.Data.IDbCommand,Insight.Database.TaskCompletionSource{``0},System.Func{Insight.Database.Task{``0}},System.Int32,System.TimeSpan)">
            <summary>
            Checks the result of an async operation and continues the retry operation.
            </summary>
            <typeparam name="TResult">The type of the result returned from the operation.</typeparam>
            <param name="commandContext">The IDbCommand that is currently being executed.</param>
            <param name="tcs">The TaskCompletionSource for the completion of the operation.</param>
            <param name="func">The function to execute.</param>
            <param name="attempt">The number of the previous attempt. 0 is the first attempt.</param>
            <param name="delay">The current delay in between retry attempts.</param>
        </member>
        <member name="M:Insight.Database.Reliable.RetryStrategy.OnRetrying(System.Data.IDbCommand,System.Exception,System.Int32)">
            <summary>
            Fires the Retrying event before an operation is retried.
            </summary>
            <param name="commandContext">The IDbCommand that is being executed or null if the operation is being performed directly on a connection.</param>
            <param name="exception">The exception causing the retry.</param>
            <param name="attempt">The number of the attempt just completed. Zero is the first attempt.</param>
            <returns>True if the operation has been cancelled, false if the operation should be retried.</returns>
        </member>
        <member name="P:Insight.Database.Reliable.RetryStrategy.Default">
            <summary>
            Gets the default retry strategy to use for a ReliableConnection if none is specified.
            </summary>
        </member>
        <member name="P:Insight.Database.Reliable.RetryStrategy.Retrying">
            <summary>
            Gets or sets an event handler that is called before an operation is retried.
            </summary>
        </member>
        <member name="P:Insight.Database.Reliable.RetryStrategy.FastFirstRetry">
            <summary>
            Gets or sets a value indicating whether the first retry should be fast and without delay.
            </summary>
        </member>
        <member name="P:Insight.Database.Reliable.RetryStrategy.MaxRetryCount">
            <summary>
            Gets or sets the maximum number of retries to perform. 1 = one initial try plus one retry.
            </summary>
        </member>
        <member name="P:Insight.Database.Reliable.RetryStrategy.MinBackOff">
            <summary>
            Gets or sets the minimum amount of time to back off for a retry. Default = 100 milliseconds.
            </summary>
        </member>
        <member name="P:Insight.Database.Reliable.RetryStrategy.MaxBackOff">
            <summary>
            Gets or sets the maximum amount of time to back off for a retry. Default = 1 second.
            </summary>
        </member>
        <member name="P:Insight.Database.Reliable.RetryStrategy.IncrementalBackOff">
            <summary>
            Gets or sets the amount of time to add between each retry. Default = 100 milliseconds.
            </summary>
        </member>
        <member name="T:Insight.Database.Reliable.ReliableCommand">
            <summary>
            Wraps an IDbCommand and automatically handles retry logic for transient errors.
            </summary>
        </member>
        <member name="F:Insight.Database.Reliable.ReliableCommand._retryStrategy">
            <summary>
            The retry strategy to use for the command.
            </summary>
        </member>
        <member name="M:Insight.Database.Reliable.ReliableCommand.#ctor(Insight.Database.Reliable.IRetryStrategy,Insight.Database.Reliable.ReliableConnection,System.Data.Common.DbCommand)">
            <summary>
            Initializes a new instance of the ReliableCommand class, and bind it to the specified ReliableConnection and innerCommand.
            </summary>
            <param name="retryStrategy">The retry strategy to use for the command.</param>
            <param name="innerConnection">The innerConnection to bind to.</param>
            <param name="innerCommand">The innerCommand to bind to.</param>
        </member>
        <member name="M:Insight.Database.Reliable.ReliableCommand.ExecuteNonQuery">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Reliable.ReliableCommand.ExecuteDbDataReader(System.Data.CommandBehavior)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Reliable.ReliableCommand.ExecuteScalar">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Reliable.ReliableCommand.GetReaderAsync(System.Data.CommandBehavior,Insight.Database.CancellationToken)">
            <summary>
            Executes the command asynchronously with retry.
            </summary>
            <param name="commandBehavior">The commandBehavior to execute with.</param>
            <param name="cancellationToken">The cancellationToken to use for the operation.</param>
            <returns>A task that provides an IDataReader of the results when complete.</returns>
        </member>
        <member name="M:Insight.Database.Reliable.ReliableCommand.Prepare">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Reliable.ReliableCommand.ExecuteWithRetry``1(System.Func{``0})">
            <summary>
            Executes a function with the retry logic specified on the ReliableConnection.
            </summary>
            <typeparam name="TResult">The type of the result of the function.</typeparam>
            <param name="function">The function to execute and return.</param>
            <returns>The return value of the function.</returns>
        </member>
        <member name="M:Insight.Database.Reliable.ReliableCommand.ExecuteWithRetryAsync``1(System.Func{Insight.Database.Task{``0}})">
            <summary>
            Executes a function with the retry logic specified on the ReliableConnection.
            </summary>
            <typeparam name="TResult">The type of the result of the function.</typeparam>
            <param name="function">The function to execute and return.</param>
            <returns>The return value of the function.</returns>
        </member>
        <member name="T:Insight.Database.DynamicConnection">
            <summary>
            A DbConnection that supports invoking stored procedures using a nice .ProcName syntax.
            </summary>
        </member>
        <member name="F:Insight.Database.DynamicConnection._queryAsyncMethods">
            <summary>
            Caches for MethodInfo for query methods.
            </summary>
        </member>
        <member name="F:Insight.Database.DynamicConnection._parameters">
            <summary>
            The internal cache for parameters to stored procedures.
            </summary>
        </member>
        <member name="F:Insight.Database.DynamicConnection._schema">
            <summary>
            The SQL schema to use when calling the procedure.
            </summary>
        </member>
        <member name="F:Insight.Database.DynamicConnection._connection">
            <summary>
            The connection to use to connect to the database.
            </summary>
        </member>
        <member name="M:Insight.Database.DynamicConnection.#ctor(System.Data.IDbConnection)">
            <summary>
            Initializes a new instance of the DynamicConnection class.
            </summary>
            <param name="connection">The connection to use as the inner database connection.</param>
        </member>
        <member name="M:Insight.Database.DynamicConnection.#ctor(System.Data.IDbConnection,System.String)">
            <summary>
            Initializes a new instance of the DynamicConnection class.
            </summary>
            <param name="connection">The connection to use as the inner database connection.</param>
            <param name="schema">The SQL schema to use when calling procedures.</param>
        </member>
        <member name="M:Insight.Database.DynamicConnection.DeriveParameters(System.Data.IDbCommand)">
            <summary>
            Derive the parameters that are needed to execute a given command.
            </summary>
            <param name="cmd">The command to execute.</param>
        </member>
        <member name="M:Insight.Database.DynamicConnection.BeginTransaction(System.Data.IsolationLevel)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DynamicConnection.BeginTransaction">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DynamicConnection.ChangeDatabase(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DynamicConnection.Close">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DynamicConnection.CreateCommand">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DynamicConnection.Open">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DynamicConnection.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.DynamicConnection.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.DynamicConnection.InnerConnection">
            <summary>
            Gets the inner connection.
            </summary>
        </member>
        <member name="P:Insight.Database.DynamicConnection.ConnectionString">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.DynamicConnection.ConnectionTimeout">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.DynamicConnection.Database">
            <inheritdoc/>
        </member>
        <member name="P:Insight.Database.DynamicConnection.State">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.DynamicConnection`1">
            <summary>
            A DbConnection that supports invoking stored procedures using a nice .ProcName syntax.
            You should usually use the non-generic version of DynamicConnection so you can return different types of objects.
            e.g.
            var dynamicConnection = _connection.Dynamic()
            IList&lt;MyData&gt; results = dynamicConnection.MyProc(10, returnType: typeof(MyData));
            This class generates methods that always return objects of type T.
            </summary>
            <typeparam name="T">The type of object to return from all queries from this connection.</typeparam>
        </member>
        <member name="M:Insight.Database.DynamicConnection`1.#ctor(System.Data.IDbConnection)">
            <summary>
            Initializes a new instance of the DynamicConnection class.
            </summary>
            <param name="connection">The connection to use as the inner database connection.</param>
        </member>
        <member name="M:Insight.Database.DynamicConnection`1.#ctor(System.Data.IDbConnection,System.String)">
            <summary>
            Initializes a new instance of the DynamicConnection class.
            </summary>
            <param name="connection">The connection to use as the inner database connection.</param>
            <param name="schema">The SQL schema to use when calling the procedure.</param>
        </member>
        <member name="T:Insight.Database.ExpandoExtensions">
            <summary>
            Helper class to make expando objects easier to use.
            </summary>
        </member>
        <member name="M:Insight.Database.ExpandoExtensions.Expand``1(``0)">
            <summary>
            Converts an object to a FastExpando.
            </summary>
            <typeparam name="T">The type of object to convert.</typeparam>
            <param name="obj">The object to convert.</param>
            <returns>A fast expando containing the public properties of the object.</returns>
        </member>
        <member name="M:Insight.Database.ExpandoExtensions.Expand``2(``0,``1)">
            <summary>
            Converts an object to a FastExpando.
            </summary>
            <typeparam name="T1">The type of object to merge into.</typeparam>
            <typeparam name="T2">The type of object to merge.</typeparam>
            <param name="obj1">The object to convert.</param>
            <param name="obj2">The other object to merge in.</param>
            <returns>A fast expando containing the public properties of the object.</returns>
        </member>
        <member name="M:Insight.Database.ExpandoExtensions.Mutate(System.Collections.Generic.IEnumerable{Insight.Database.FastExpando},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Mutates a list of FastExpandos.
            </summary>
            <param name="list">The list to mutate.</param>
            <param name="map">The mapping of input to output field names.</param>
            <returns>The same list, but mutated.</returns>
        </member>
        <member name="M:Insight.Database.ExpandoExtensions.Transform(System.Collections.Generic.IEnumerable{Insight.Database.FastExpando},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Transforms a list of FastExpandos.
            </summary>
            <param name="list">The list to transform.</param>
            <param name="map">The mapping of input to output field names.</param>
            <returns>A new list of transformed expandos.</returns>
        </member>
        <member name="T:Insight.Database.FastExpando">
            <summary>
            Implements a fast Expando object that does not support INotifyPropertyChanged.
            </summary>
        </member>
        <member name="F:Insight.Database.FastExpando.data">
            <summary>
            The internal data structure.
            </summary>
        </member>
        <member name="M:Insight.Database.FastExpando.FromObject(System.Object)">
            <summary>
            Creates an expando from an object.
            </summary>
            <param name="value">The object to initialize with.</param>
            <returns>A FastExpando containing the public properties and fields of obj.</returns>
        </member>
        <member name="M:Insight.Database.FastExpando.TrySetMember(Insight.Database.SetMemberBinder,System.Object)">
            <summary>
            Tries to set a member value.
            </summary>
            <param name="binder">The binder to use.</param>
            <param name="value">The value to set.</param>
            <returns>True if the value was set.</returns>
        </member>
        <member name="M:Insight.Database.FastExpando.TryGetMember(Insight.Database.GetMemberBinder,System.Object@)">
            <summary>
            Attempts to get a member value.
            </summary>
            <param name="binder">The binder to use.</param>
            <param name="result">The output result.</param>
            <returns>True if a member was returned.</returns>
        </member>
        <member name="M:Insight.Database.FastExpando.Expand(Insight.Database.FastExpando)">
            <summary>
            Expand this expando with the members of another expando.
            </summary>
            <param name="expando">The other expando.</param>
            <returns>This expanded FastExpando.</returns>
        </member>
        <member name="M:Insight.Database.FastExpando.Expand(System.Object)">
            <summary>
            Expand this expando with the public members of another object.
            </summary>
            <param name="other">The other object.</param>
            <returns>This expanded FastExpando.</returns>
        </member>
        <member name="M:Insight.Database.FastExpando.System#Collections#Generic#IDictionary{System#String@System#Object}#Add(System.String,System.Object)">
            <summary>
            Add an object to the dictionary.
            </summary>
            <param name="key">The key to add.</param>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:Insight.Database.FastExpando.System#Collections#Generic#IDictionary{System#String@System#Object}#ContainsKey(System.String)">
            <summary>
            Tests whether the expando contains a key.
            </summary>
            <param name="key">The key to test.</param>
            <returns>True if the key is in the expando.</returns>
        </member>
        <member name="M:Insight.Database.FastExpando.System#Collections#Generic#IDictionary{System#String@System#Object}#Remove(System.String)">
            <summary>
            Removes an item from the expando.
            </summary>
            <param name="key">The key of the item to remove.</param>
            <returns>True if the item existed.</returns>
        </member>
        <member name="M:Insight.Database.FastExpando.System#Collections#Generic#IDictionary{System#String@System#Object}#TryGetValue(System.String,System.Object@)">
            <summary>
            Try to get a value in the expando.
            </summary>
            <param name="key">The key to look up.</param>
            <param name="value">The output value.</param>
            <returns>True if an item was found.</returns>
        </member>
        <member name="M:Insight.Database.FastExpando.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Adds an item to the collection.
            </summary>
            <param name="item">The item to add to the collection.</param>
        </member>
        <member name="M:Insight.Database.FastExpando.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Clear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="M:Insight.Database.FastExpando.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Determines if the collection contains an item.
            </summary>
            <param name="item">The item to test.</param>
            <returns>True if the item is in the collection.</returns>
        </member>
        <member name="M:Insight.Database.FastExpando.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>
            Copies a values to an array.
            </summary>
            <param name="array">The array to copy to.</param>
            <param name="arrayIndex">The index to copy to.</param>
        </member>
        <member name="M:Insight.Database.FastExpando.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Removes an item from the expando.
            </summary>
            <param name="item">The item to remove.</param>
            <returns>True if the item existed.</returns>
        </member>
        <member name="M:Insight.Database.FastExpando.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
            <summary>
            Returns an enumerator on the fields.
            </summary>
            <returns>An enumerator on the fields.</returns>
        </member>
        <member name="M:Insight.Database.FastExpando.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator on the fields.
            </summary>
            <returns>The enumerator on the fields.</returns>
        </member>
        <member name="M:Insight.Database.FastExpando.Mutate(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Modifies the FastExpando by mapping the fields given the map.
            </summary>
            <param name="map">The map of input fields to output fields.</param>
        </member>
        <member name="M:Insight.Database.FastExpando.Transform(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Copies the FastExpando while mapping the fields given the map.
            </summary>
            <param name="map">The map of input fields to output fields.</param>
            <returns>A modified copy of the expando.</returns>
        </member>
        <member name="M:Insight.Database.FastExpando.WithoutNulls(System.String[])">
            <summary>
            Drops the specified field from the expando if it is null.
            </summary>
            <param name="fields">The name of the fields to drop.</param>
            <returns>A new expando.</returns>
        </member>
        <member name="M:Insight.Database.FastExpando.WithoutNulls(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Drops the specified field from the expando if it is null.
            </summary>
            <param name="fields">The name of the field(s) to drop or null to drop all fields.</param>
            <returns>A new expando.</returns>
        </member>
        <member name="M:Insight.Database.FastExpando.SetValue(System.String,System.Object)">
            <summary>
            Sets the value of a property.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The value of the property.</param>
        </member>
        <member name="P:Insight.Database.FastExpando.Item(System.String)">
            <summary>
            Gets or sets the value for a given key.
            </summary>
            <param name="key">The key of the value.</param>
            <returns>The value.</returns>
        </member>
        <member name="P:Insight.Database.FastExpando.System#Collections#Generic#IDictionary{System#String@System#Object}#Keys">
            <summary>
            Gets the keys in the expando.
            </summary>
        </member>
        <member name="P:Insight.Database.FastExpando.System#Collections#Generic#IDictionary{System#String@System#Object}#Values">
            <summary>
            Gets the values in the expando.
            </summary>
        </member>
        <member name="P:Insight.Database.FastExpando.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:Insight.Database.FastExpando.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is readonly.
            </summary>
        </member>
        <member name="T:Insight.Database.CodeGenerator.IlHelper">
            <summary>
            Helper class for generating code.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.IlHelper.TypeGetTypeFromHandle">
            <summary>
            The Type.GetTypeFromHandle method.
            </summary>
        </member>
        <member name="M:Insight.Database.CodeGenerator.IlHelper.EmitLdInt32(System.Reflection.Emit.ILGenerator,System.Int32)">
            <summary>
            Emit an opcode to load an Int32.
            </summary>
            <param name="il">The generator to use.</param>
            <param name="value">The value to emit.</param>
        </member>
        <member name="M:Insight.Database.CodeGenerator.IlHelper.EmitToStringOrNull(System.Reflection.Emit.ILGenerator,System.Type)">
            <summary>
            Assuming the top of the stack is an object of sourceType,
            emits the code required to convert the object ToString.
            Null values are converted to null.
            </summary>
            <param name="il">The generator to use.</param>
            <param name="sourceType">The type of the object on the stack.</param>
        </member>
        <member name="M:Insight.Database.CodeGenerator.IlHelper.EmitLoadType(System.Reflection.Emit.ILGenerator,System.Type)">
            <summary>
            Emits the code to load a type onto the stack.
            </summary>
            <param name="il">The IL generator to use.</param>
            <param name="type">The type to load.</param>
        </member>
        <member name="T:Insight.Database.CodeGenerator.ObjectListDbDataReader">
            <summary>
            Reads an object list as a data reader.
            Not intended to be used directly from object code.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.ObjectListDbDataReader._enumerable">
            <summary>
            The list of objects to enumerate through.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.ObjectListDbDataReader._enumerator">
            <summary>
            The current position in the list of objects.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.ObjectListDbDataReader._current">
            <summary>
            The object at the current position.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.ObjectListDbDataReader._currentOrdinal">
            <summary>
            The ordinal of the last column retrieved.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.ObjectListDbDataReader._currentValue">
            <summary>
            Caches the value of the last column retrieved.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.ObjectListDbDataReader._currentStringOrdinal">
            <summary>
            Caches the ordinal of the last string column retrieved.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.ObjectListDbDataReader._currentStringValue">
            <summary>
            Caches the string value of the last column retrieved.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.ObjectListDbDataReader._objectReader">
            <summary>
            Information about how to serialize the object.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.ObjectListDbDataReader._readRowCount">
            <summary>
            Number of rows read.
            </summary>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ObjectListDbDataReader.#ctor(Insight.Database.CodeGenerator.ObjectReader,System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the ObjectListDbDataReader class.
            </summary>
            <param name="objectReader">The objectReader to use to read the values from an object in the list.</param>
            <param name="list">The list of objects.</param>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ObjectListDbDataReader.GetSchemaTable">
            <summary>
            Returns the schema table for the data.
            </summary>
            <returns>The schema table for the data.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ObjectListDbDataReader.Read">
            <summary>
            Read the next item from the reader.
            </summary>
            <returns>True if an item was read, false if there were no more items.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ObjectListDbDataReader.GetValue(System.Int32)">
            <summary>
            Get the value of the given column.
            </summary>
            <param name="ordinal">The index of the column.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ObjectListDbDataReader.GetString(System.Int32)">
            <summary>
            Returns the value of a column as a string.
            </summary>
            <param name="ordinal">The ordinal of the column.</param>
            <returns>The string value.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ObjectListDbDataReader.IsDBNull(System.Int32)">
            <summary>
            Is the value of a column null.
            </summary>
            <param name="ordinal">The ordinal of the column.</param>
            <returns>True if the column value is null.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.ObjectListDbDataReader.NextResult">
            <summary>
            Get the next result set.
            </summary>
            <returns>False, since this only supports one result set.</returns>
        </member>
        <member name="P:Insight.Database.CodeGenerator.ObjectListDbDataReader.RecordsAffected">
            <summary>
            Obtains the number of rows read by the current DbDataReader.
            </summary>
        </member>
        <member name="T:Insight.Database.CodeGenerator.QueryIdentity">
            <summary>
            An identity for a query.
            This lets us store queries in a dictionary and get automatic efficient storage.
            </summary>
            <remarks>This currently assumes that a query is unique across databases. If that is not true, then the identity needs to take the connection string.</remarks>
        </member>
        <member name="F:Insight.Database.CodeGenerator.QueryIdentity._commandType">
            <summary>
            The type of the command.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.QueryIdentity._commandText">
            <summary>
            The command text that we are bound to.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.QueryIdentity._type">
            <summary>
            The type that we are bound to.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.QueryIdentity._hashCode">
            <summary>
            The hash code of this identity (precalculated).
            </summary>
        </member>
        <member name="M:Insight.Database.CodeGenerator.QueryIdentity.#ctor(System.Data.IDbCommand,System.Type)">
            <summary>
            Initializes a new instance of the QueryIdentity class.
            </summary>
            <param name="command">The command to represent.</param>
            <param name="type">The type of the parameters for the command.</param>
        </member>
        <member name="M:Insight.Database.CodeGenerator.QueryIdentity.GetHashCode">
            <summary>
            Returns the hash code for the identity.
            </summary>
            <returns>The hash code for the identity.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.QueryIdentity.Equals(System.Object)">
            <summary>
            Determines if this is equal to another object.
            </summary>
            <param name="obj">The object to test against.</param>
            <returns>True if the objects are equal.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.QueryIdentity.Equals(Insight.Database.CodeGenerator.QueryIdentity)">
            <summary>
            Determines if this is equal to another object.
            </summary>
            <param name="other">The object to test against.</param>
            <returns>True if the objects are equal.</returns>
        </member>
        <member name="T:Insight.Database.CodeGenerator.SchemaMappingIdentity">
            <summary>
            An identity for the schema of a reader being mapped to a graph type.
            This checks all of the column names and types, as well as the type of the graph.
            This lets us store schemas in a dictionary and get automatic efficient storage.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.SchemaMappingIdentity._schemaIdentity">
            <summary>
            The identity of the schema that we are mapped to.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.SchemaMappingIdentity._mappingType">
            <summary>
            The type of mapping operation.
            </summary>
        </member>
        <member name="F:Insight.Database.CodeGenerator.SchemaMappingIdentity._hashCode">
            <summary>
            The hash code of this identity (precalculated).
            </summary>
        </member>
        <member name="M:Insight.Database.CodeGenerator.SchemaMappingIdentity.#ctor(System.Data.IDataReader,Insight.Database.Structure.IRecordReader,Insight.Database.CodeGenerator.SchemaMappingType)">
            <summary>
            Initializes a new instance of the SchemaMappingIdentity class.
            </summary>
            <param name="reader">The reader to construct from.</param>
            <param name="recordReader">The reader to use to read the objects from the stream.</param>
            <param name="mappingType">The type of mapping operation.</param>
        </member>
        <member name="M:Insight.Database.CodeGenerator.SchemaMappingIdentity.#ctor(Insight.Database.CodeGenerator.SchemaIdentity,Insight.Database.Structure.IRecordReader,Insight.Database.CodeGenerator.SchemaMappingType)">
            <summary>
            Initializes a new instance of the SchemaMappingIdentity class.
            </summary>
            <param name="schemaIdentity">The identity of the schema to map to.</param>
            <param name="recordReader">The reader to use to read the objects from the stream.</param>
            <param name="mappingType">The type of mapping operation.</param>
        </member>
        <member name="M:Insight.Database.CodeGenerator.SchemaMappingIdentity.GetHashCode">
            <summary>
            Returns the hash code for the identity.
            </summary>
            <returns>The hash code for the identity.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.SchemaMappingIdentity.Equals(System.Object)">
            <summary>
            Determines if this is equal to another object.
            </summary>
            <param name="obj">The object to test against.</param>
            <returns>True if the objects are equal.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.SchemaMappingIdentity.Equals(Insight.Database.CodeGenerator.SchemaMappingIdentity)">
            <summary>
            Determines if this is equal to another object.
            </summary>
            <param name="other">The object to test against.</param>
            <returns>True if the objects are equal.</returns>
        </member>
        <member name="P:Insight.Database.CodeGenerator.SchemaMappingIdentity.RecordReader">
            <summary>
            Gets the mapping used in this mapping identity.
            </summary>
        </member>
        <member name="T:Insight.Database.CodeGenerator.TypeHelper">
            <summary>
            Helper methods for dealing with system types.
            </summary>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeHelper.#cctor">
            <summary>
            Initializes static members of the TypeHelper class.
            </summary>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeHelper.IsAtomicType(System.Type)">
            <summary>
            Determines whether the given type is is an atomic type that does not have members.
            </summary>
            <param name="type">The type to check.</param>
            <returns>True if this is an atomic type that does not have members.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeHelper.IsDbTypeAString(System.Data.DbType)">
            <summary>
            Determines if a given DbType represents a string.
            </summary>
            <param name="dbType">The dbType to test.</param>
            <returns>True if the type is a string type.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeHelper.EmitDefaultValue(System.Reflection.Emit.ILGenerator,System.Type)">
            <summary>
            Emits the code to load the default value of a type onto the stack.
            </summary>
            <param name="mIL">The ILGenerator to emit to.</param>
            <param name="type">The type of object to emit.</param>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeHelper.IsSqlUserDefinedType(System.Type)">
            <summary>
            Determines if a type is a sql user defined type.
            </summary>
            <param name="type">The type to examine.</param>
            <returns>True if it is a Sql UDT.</returns>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeHelper.CopyGenericSignature(System.Reflection.MethodInfo,System.Reflection.Emit.MethodBuilder)">
            <summary>
            Copy the generic attributes of a method.
            </summary>
            <param name="sourceMethod">The source method.</param>
            <param name="targetMethod">The target method.</param>
        </member>
        <member name="M:Insight.Database.CodeGenerator.TypeHelper.CopyMethodSignature(System.Reflection.MethodInfo,System.Reflection.Emit.MethodBuilder)">
            <summary>
            Copies the method signature from one method to another.
            This includes generic parameters, constraints and parameters.
            </summary>
            <param name="sourceMethod">The source method.</param>
            <param name="targetMethod">The target method.</param>
        </member>
        <member name="P:Insight.Database.CodeGenerator.TypeHelper.LinqBinaryType">
            <summary>
            Gets the type object for Linq.Binary.
            </summary>
        </member>
        <member name="P:Insight.Database.CodeGenerator.TypeHelper.LinqBinaryCtor">
            <summary>
            Gets the constructor for Linq.Binary.
            </summary>
        </member>
        <member name="P:Insight.Database.CodeGenerator.TypeHelper.LinqBinaryToArray">
            <summary>
            Gets the ToArray method for Linq.Binary.
            </summary>
        </member>
        <member name="T:Insight.Database.CodeGenerator.TypeHelper.LinqBinaryPlaceHolder">
            <summary>
            Stand-in for Linq.Binary
            </summary>
        </member>
        <member name="T:Insight.Database.DBCommandExtensions">
            <summary>
            Extension methods for executing database commands.
            </summary>
        </member>
        <member name="M:Insight.Database.DBCommandExtensions.AddParameters(System.Data.IDbCommand,System.Object)">
            <summary>
            Add parameters to a given command.
            </summary>
            <param name="cmd">The command to add parameters to.</param>
            <param name="parameters">The object containing parameters to add.</param>
        </member>
        <member name="M:Insight.Database.DBCommandExtensions.OutputParameters(System.Data.IDbCommand)">
            <summary>
            Takes the output parameters of a result set and inserts them into the result object.
            </summary>
            <param name="command">The command to evaluate.</param>
            <returns>A dynamic object containing the output parameters.</returns>
        </member>
        <member name="M:Insight.Database.DBCommandExtensions.OutputParameters``1(System.Data.IDbCommand)">
            <summary>
            Takes the output parameters of a result set and inserts them into a new object of type T.
            </summary>
            <typeparam name="T">The type of object to return.</typeparam>
            <param name="command">The command to evaluate.</param>
            <returns>An object of type T containing the output parameters.</returns>
        </member>
        <member name="M:Insight.Database.DBCommandExtensions.OutputParameters``1(System.Data.IDbCommand,``0)">
            <summary>
            Takes the output parameters of a result set and inserts them into the result object.
            </summary>
            <typeparam name="T">The type of object to return.</typeparam>
            <param name="command">The command to evaluate.</param>
            <param name="result">The result to insert into.</param>
            <returns>The object that was filled in.</returns>
        </member>
        <member name="M:Insight.Database.DBCommandExtensions.Query(System.Data.IDbCommand,System.Data.CommandBehavior,System.Object)">
            <summary>
            Execute an existing command, and translate the result set into a FastExpando. This method supports auto-open.
            The Connection property of the command should be initialized before calling this method.
            </summary>
            <param name="command">The command to execute.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="outputParameters">An object to write output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBCommandExtensions.Query``1(System.Data.IDbCommand,System.Data.CommandBehavior,System.Object)">
            <summary>
            Execute an existing command, and translate the result set. This method supports auto-open.
            The Connection property of the command should be initialized before calling this method.
            </summary>
            <typeparam name="T">The type of object to return in the result set.</typeparam>
            <param name="command">The command to execute.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="outputParameters">An object to write output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBCommandExtensions.Query``1(System.Data.IDbCommand,Insight.Database.Structure.IQueryReader{``0},System.Data.CommandBehavior,System.Object)">
            <summary>
            Execute an existing command, and translate the result set. This method supports auto-open.
            The Connection property of the command must be initialized before calling this method.
            </summary>
            <typeparam name="T">The type of result object to return. This must derive from Results.</typeparam>
            <param name="command">The command to execute.</param>
            <param name="returns">The reader to use to read the object from the stream.</param>
            <param name="commandBehavior">The behavior of the command when executed.</param>
            <param name="outputParameters">An object to write output parameters onto.</param>
            <returns>A data reader with the results.</returns>
        </member>
        <member name="M:Insight.Database.DBCommandExtensions.OutputParameters``2(System.Data.IDbCommand,``0,``1)">
            <summary>
            Outputs the output parameters onto two objects.
            </summary>
            <typeparam name="T">The first type of object.</typeparam>
            <typeparam name="T2">The second type of object.</typeparam>
            <param name="command">The command.</param>
            <param name="result">The first object.</param>
            <param name="result2">The second object.</param>
        </member>
        <member name="M:Insight.Database.DBCommandExtensions.QueryCoreUntyped``1(System.Data.IDbCommand,Insight.Database.Structure.IQueryReader,System.Data.CommandBehavior,System.Object)">
            <summary>
            Lets us call QueryCore into a simple delegate for dynamic calls.
            </summary>
            <typeparam name="T">The type of object returned.</typeparam>
            <param name="command">The command to execute.</param>
            <param name="returns">The definition of the return structure.</param>
            <param name="commandBehavior">The commandBehavior to use.</param>
            <param name="outputParameters">Optional output parameters.</param>
            <returns>The result of the query.</returns>
        </member>
        <member name="T:Insight.Database.ColumnAttribute">
            <summary>
            Defines an override to the standard mapping of database fields to object fields.
            </summary>
        </member>
        <member name="M:Insight.Database.ColumnAttribute.#ctor">
            <summary>
            Initializes a new instance of the ColumnAttribute class.
            </summary>
        </member>
        <member name="M:Insight.Database.ColumnAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ColumnAttribute class.
            </summary>
            <param name="columnName">The name of the column to map this field to.</param>
        </member>
        <member name="P:Insight.Database.ColumnAttribute.ColumnName">
            <summary>
            Gets or sets the name of the column to map this field to.
            </summary>
        </member>
        <member name="P:Insight.Database.ColumnAttribute.SerializationMode">
            <summary>
            Gets or sets the serialization mode for the column.
            </summary>
        </member>
        <member name="P:Insight.Database.ColumnAttribute.Serializer">
            <summary>
            Gets or sets the type of serializer to use for the column.
            </summary>
        </member>
        <member name="T:Insight.Database.Reliable.ReliableConnection">
            <summary>
            Wraps an IDbConnection with a retry strategy to handle transient exceptions with retry logic.
            </summary>
        </member>
        <member name="M:Insight.Database.Reliable.ReliableConnection.#ctor(System.Data.Common.DbConnection)">
            <summary>
            Initializes a new instance of the ReliableConnection class.
            A default retry strategy is used.
            </summary>
            <param name="innerConnection">The inner connection to wrap.</param>
        </member>
        <member name="M:Insight.Database.Reliable.ReliableConnection.#ctor(System.Data.Common.DbConnection,Insight.Database.Reliable.IRetryStrategy)">
            <summary>
            Initializes a new instance of the ReliableConnection class.
            </summary>
            <param name="innerConnection">The inner connection to wrap.</param>
            <param name="retryStrategy">The retry strategy to use.</param>
        </member>
        <member name="M:Insight.Database.Reliable.ReliableConnection.Open">
            <summary>
            Opens the database connection with retry.
            </summary>
        </member>
        <member name="M:Insight.Database.Reliable.ReliableConnection.CreateDbCommand">
            <summary>
            Creates a DbCommand for calls to the database.
            </summary>
            <returns>A ReliableCommand.</returns>
        </member>
        <member name="P:Insight.Database.Reliable.ReliableConnection.RetryStrategy">
            <summary>
            Gets the retry strategy to use to handle exceptions.
            </summary>
        </member>
        <member name="T:Insight.Database.Reliable.ReliableConnection`1">
            <summary>
            Wraps an IDbConnection with a retry strategy to handle transient exceptions with retry logic.
            </summary>
            <typeparam name="TConnection">The type of database connection to use to connect to the database.</typeparam>
        </member>
        <member name="M:Insight.Database.Reliable.ReliableConnection`1.#ctor">
            <summary>
            Initializes a new instance of the ReliableConnection class.
            </summary>
        </member>
        <member name="M:Insight.Database.Reliable.ReliableConnection`1.#ctor(Insight.Database.Reliable.IRetryStrategy)">
            <summary>
            Initializes a new instance of the ReliableConnection class with the given retry strategy.
            </summary>
            <param name="retryStrategy">The retry strategy to use for the connection.</param>
        </member>
        <member name="M:Insight.Database.Reliable.ReliableConnection`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ReliableConnection class with the given retry strategy.
            A default retry strategy is used.
            </summary>
            <param name="connectionString">The connection string to use for the connection.</param>
        </member>
        <member name="M:Insight.Database.Reliable.ReliableConnection`1.#ctor(System.String,Insight.Database.Reliable.IRetryStrategy)">
            <summary>
            Initializes a new instance of the ReliableConnection class with the given retry strategy.
            </summary>
            <param name="connectionString">The connection string to use for the connection.</param>
            <param name="retryStrategy">The retry strategy to use for the connection.</param>
        </member>
        <member name="T:Insight.Database.Reliable.RetryEventArgs">
            <summary>
            Represents an event that occurs when a database connection is about to be retried.
            </summary>
        </member>
        <member name="P:Insight.Database.Reliable.RetryEventArgs.CommandContext">
            <summary>
            Gets or sets the IDbCommand that is executing.
            </summary>
        </member>
        <member name="P:Insight.Database.Reliable.RetryEventArgs.Exception">
            <summary>
            Gets or sets the exception that was caught and retried.
            </summary>
        </member>
        <member name="P:Insight.Database.Reliable.RetryEventArgs.Attempt">
            <summary>
            Gets or sets the number of the attempt just completed. Zero is the first attempt.
            </summary>
        </member>
        <member name="P:Insight.Database.Reliable.RetryEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the RetryStrategy should cancel the retry operation.
            </summary>
        </member>
        <member name="T:Insight.Database.Parameters">
            <summary>
            Convenience class for empty parameter list.
            </summary>
        </member>
        <member name="F:Insight.Database.Parameters.Empty">
            <summary>
            An empty parameter.
            </summary>
        </member>
        <member name="F:Insight.Database.Parameters.EmptyArray">
            <summary>
            An empty parameter array.
            </summary>
        </member>
        <member name="F:Insight.Database.Parameters.EmptyList">
            <summary>
            An empty list.
            </summary>
        </member>
        <member name="M:Insight.Database.Parameters.EmptyListOf``1">
            <summary>
            Returns an empty list of a given type.
            </summary>
            <typeparam name="T">The type contained in the list.</typeparam>
            <returns>An empty enumerator of the given type.</returns>
        </member>
        <member name="T:Insight.Database.Structure.Children`1">
            <summary>
            An instance of Children knows how to read children into a parent.
            This is a one-to-many relationship.
            </summary>
            <typeparam name="TParent">The type of the parent to read into.</typeparam>
        </member>
        <member name="M:Insight.Database.Structure.Children`1.Read(System.Collections.Generic.IEnumerable{`0},System.Data.IDataReader)">
            <summary>
            Read a list of children into the given list of parents.
            </summary>
            <param name="parents">The list of parents.</param>
            <param name="reader">The reader to read from.</param>
        </member>
        <member name="M:Insight.Database.Structure.Children`1.ReadAsync(System.Collections.Generic.IEnumerable{`0},System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Read a list of children into the given list of parents.
            </summary>
            <param name="parents">The list of parents.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>A task representing the completion of the read.</returns>
        </member>
        <member name="T:Insight.Database.Structure.Children`3">
            <summary>
            An instance of Children knows how to read children into a parent.
            This is a one-to-many relationship.
            </summary>
            <typeparam name="TParent">The type of the parent to read into.</typeparam>
            <typeparam name="TChild">The type of the child object.</typeparam>
            <typeparam name="TId">The type of the ID value.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.Children`3._recordReader">
            <summary>
            Can read the child records from the stream.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.Children`3._mapper">
            <summary>
            Can map the children into the parent in the right place.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.Children`3.#ctor(Insight.Database.Structure.IChildRecordReader{`1,`2},Insight.Database.Structure.IChildMapper{`0,`1,`2})">
            <summary>
            Initializes a new instance of the Children class.
            </summary>
            <param name="recordReader">The recordReader that can read the children from the data stream.</param>
            <param name="mapper">The mapper that puts the children into the parent.</param>
        </member>
        <member name="M:Insight.Database.Structure.Children`3.Read(System.Collections.Generic.IEnumerable{`0},System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.Children`3.ReadAsync(System.Collections.Generic.IEnumerable{`0},System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Structure.ChildMapper`3">
            <summary>
            Maps a set of children directly into a list of parent objects.
            This is a two-level one-to-many mapping.
            </summary>
            <typeparam name="TParent">The type of the parent object.</typeparam>
            <typeparam name="TChild">The type of the child object.</typeparam>
            <typeparam name="TId">The type of the ID value.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ChildMapper`3._defaultIDSelector">
            <summary>
            The default function that selects IDs from the parent object.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ChildMapper`3._defaultListSetter">
            <summary>
            The default action that sets the children into the proper parent.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ChildMapper`3._idSelector">
            <summary>
            The function that selects IDs from the parent object.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ChildMapper`3._listSetter">
            <summary>
            The action that sets the children into the proper parent.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ChildMapper`3._idType">
            <summary>
            The type of the ID for the parent class.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ChildMapper`3.#ctor(System.Func{`0,`2},System.Action{`0,System.Collections.Generic.List{`1}})">
            <summary>
            Initializes a new instance of the ChildMapper class.
            </summary>
            <param name="idSelector">The function that selects IDs from the parent object.</param>
            <param name="listSetter">The action that sets the children into the proper parent.</param>
        </member>
        <member name="M:Insight.Database.Structure.ChildMapper`3.MapChildren(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`2,`1}})">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.ChildMapper`3.GetIDSelector">
            <summary>
            Gets the ID selector from the class, looking for ID, classID, and then anything with xxxID.
            </summary>
            <returns>An accessor for the ID field.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ChildMapper`3.GetListSetter">
            <summary>
            Gets the list setter for the class, looking for an IList that matches the type.
            </summary>
            <returns>An accessor for the ID field.</returns>
        </member>
        <member name="T:Insight.Database.Structure.ChildMapper`4">
            <summary>
            Maps a child into a hierarchy of objects.
            This is an n-level one-to-many mapping.
            </summary>
            <typeparam name="TRoot">The type of the root object.</typeparam>
            <typeparam name="TParent">The type of the parent object.</typeparam>
            <typeparam name="TChild">The type of the child object.</typeparam>
            <typeparam name="TId">The type of the ID value.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.ChildMapper`4._parentSelector">
            <summary>
            The function that selects all of the eligible parents from the root objects.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ChildMapper`4._mapper">
            <summary>
            The mapper that performs the final mapping.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ChildMapper`4.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}},System.Func{`1,`3},System.Action{`1,System.Collections.Generic.List{`2}})">
            <summary>
            Initializes a new instance of the ChildMapper class.
            </summary>
            <param name="parentSelector">The function that selects all of the eligible parents from the root objects.</param>
            <param name="idSelector">The function that selects IDs from the parent object.</param>
            <param name="listSetter">The action that sets the children into the proper parent.</param>
        </member>
        <member name="M:Insight.Database.Structure.ChildMapper`4.MapChildren(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`3,`2}})">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.XmlObjectSerializer">
            <summary>
            Serializes objects to XML using the DataContractSerializer.
            </summary>
        </member>
        <member name="F:Insight.Database.XmlObjectSerializer.Serializer">
            <summary>
            The singleton Serializer.
            </summary>
        </member>
        <member name="M:Insight.Database.XmlObjectSerializer.SerializeObject(System.Type,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.XmlObjectSerializer.DeserializeObject(System.Type,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Structure.ResultsReader`1">
            <summary>
            Reads a Results structure from a data reader stream.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`1.Default">
            <summary>
            The default reader for this type of result.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`1._listReader">
            <summary>
            The list reader used to read a set of records.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`1.#ctor">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`1.#ctor(Insight.Database.Structure.IRecordReader{`0})">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
            <param name="recordReader">The mapping that can read a single record from the stream.</param>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`1.#ctor(Insight.Database.Structure.ListReader{`0})">
            <summary>
            Initializes a new instance of the ResultsReader class from a ListReader.
            </summary>
            <param name="reader">The ListReader to convert to a ResultsReader.</param>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`1.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`1.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`1.Read(System.Data.IDbCommand,Insight.Database.Results{`0},System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`1.ReadAsync(System.Data.IDbCommand,Insight.Database.Results{`0},System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`1.AddChild(Insight.Database.Structure.Children{`0})">
            <summary>
            Adds a child reader to this reader.
            </summary>
            <param name="child">The child reader to add.</param>
        </member>
        <member name="P:Insight.Database.Structure.ResultsReader`1.ReturnType">
            <summary>
            Gets the type of objects returned by this reader.
            </summary>
            <returns>The type of objects returned by this reader.</returns>
        </member>
        <member name="T:Insight.Database.Structure.ResultsReader`2">
            <summary>
            Reads a Results structure from a data reader stream.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`2.Default">
            <summary>
            The default reader for this type of result.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`2._listReader">
            <summary>
            The list reader used to read a set of records.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`2._previous">
            <summary>
            Gets the previous reader for reading the results.
            </summary>
            <returns>The previous reader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`2.#ctor">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`2.#ctor(Insight.Database.Structure.IQueryReader{Insight.Database.Results{`0}},Insight.Database.Structure.IRecordReader{`1})">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
            <param name="previous">The reader for the previous data set in the stream.</param>
            <param name="recordReader">The mapping that can read a single record from the stream.</param>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`2.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`2.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`2.Read(System.Data.IDbCommand,Insight.Database.Results{`0,`1},System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`2.ReadAsync(System.Data.IDbCommand,Insight.Database.Results{`0,`1},System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`2.AddChild(Insight.Database.Structure.Children{`1})">
            <summary>
            Adds a child reader to this reader.
            </summary>
            <param name="child">The child reader to add.</param>
        </member>
        <member name="P:Insight.Database.Structure.ResultsReader`2.ReturnType">
            <summary>
            Gets the type of objects returned by this reader.
            </summary>
            <returns>The type of objects returned by this reader.</returns>
        </member>
        <member name="T:Insight.Database.Structure.ResultsReader`3">
            <summary>
            Reads a Results structure from a data reader stream.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`3.Default">
            <summary>
            The default reader for this type of result.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`3._listReader">
            <summary>
            The list reader used to read a set of records.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`3._previous">
            <summary>
            Gets the previous reader for reading the results.
            </summary>
            <returns>The previous reader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`3.#ctor">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`3.#ctor(Insight.Database.Structure.IQueryReader{Insight.Database.Results{`0,`1}},Insight.Database.Structure.IRecordReader{`2})">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
            <param name="previous">The reader for the previous data set in the stream.</param>
            <param name="recordReader">The mapping that can read a single record from the stream.</param>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`3.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`3.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`3.Read(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2},System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`3.ReadAsync(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2},System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`3.AddChild(Insight.Database.Structure.Children{`2})">
            <summary>
            Adds a child reader to this reader.
            </summary>
            <param name="child">The child reader to add.</param>
        </member>
        <member name="P:Insight.Database.Structure.ResultsReader`3.ReturnType">
            <summary>
            Gets the type of objects returned by this reader.
            </summary>
            <returns>The type of objects returned by this reader.</returns>
        </member>
        <member name="T:Insight.Database.Structure.ResultsReader`4">
            <summary>
            Reads a Results structure from a data reader stream.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`4.Default">
            <summary>
            The default reader for this type of result.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`4._listReader">
            <summary>
            The list reader used to read a set of records.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`4._previous">
            <summary>
            Gets the previous reader for reading the results.
            </summary>
            <returns>The previous reader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`4.#ctor">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`4.#ctor(Insight.Database.Structure.IQueryReader{Insight.Database.Results{`0,`1,`2}},Insight.Database.Structure.IRecordReader{`3})">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
            <param name="previous">The reader for the previous data set in the stream.</param>
            <param name="recordReader">The mapping that can read a single record from the stream.</param>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`4.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`4.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`4.Read(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2,`3},System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`4.ReadAsync(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2,`3},System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`4.AddChild(Insight.Database.Structure.Children{`3})">
            <summary>
            Adds a child reader to this reader.
            </summary>
            <param name="child">The child reader to add.</param>
        </member>
        <member name="P:Insight.Database.Structure.ResultsReader`4.ReturnType">
            <summary>
            Gets the type of objects returned by this reader.
            </summary>
            <returns>The type of objects returned by this reader.</returns>
        </member>
        <member name="T:Insight.Database.Structure.ResultsReader`5">
            <summary>
            Reads a Results structure from a data reader stream.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`5.Default">
            <summary>
            The default reader for this type of result.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`5._listReader">
            <summary>
            The list reader used to read a set of records.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`5._previous">
            <summary>
            Gets the previous reader for reading the results.
            </summary>
            <returns>The previous reader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`5.#ctor">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`5.#ctor(Insight.Database.Structure.IQueryReader{Insight.Database.Results{`0,`1,`2,`3}},Insight.Database.Structure.IRecordReader{`4})">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
            <param name="previous">The reader for the previous data set in the stream.</param>
            <param name="recordReader">The mapping that can read a single record from the stream.</param>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`5.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`5.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`5.Read(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2,`3,`4},System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`5.ReadAsync(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2,`3,`4},System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`5.AddChild(Insight.Database.Structure.Children{`4})">
            <summary>
            Adds a child reader to this reader.
            </summary>
            <param name="child">The child reader to add.</param>
        </member>
        <member name="P:Insight.Database.Structure.ResultsReader`5.ReturnType">
            <summary>
            Gets the type of objects returned by this reader.
            </summary>
            <returns>The type of objects returned by this reader.</returns>
        </member>
        <member name="T:Insight.Database.Structure.ResultsReader`6">
            <summary>
            Reads a Results structure from a data reader stream.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`6.Default">
            <summary>
            The default reader for this type of result.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`6._listReader">
            <summary>
            The list reader used to read a set of records.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`6._previous">
            <summary>
            Gets the previous reader for reading the results.
            </summary>
            <returns>The previous reader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`6.#ctor">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`6.#ctor(Insight.Database.Structure.IQueryReader{Insight.Database.Results{`0,`1,`2,`3,`4}},Insight.Database.Structure.IRecordReader{`5})">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
            <param name="previous">The reader for the previous data set in the stream.</param>
            <param name="recordReader">The mapping that can read a single record from the stream.</param>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`6.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`6.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`6.Read(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2,`3,`4,`5},System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`6.ReadAsync(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2,`3,`4,`5},System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`6.AddChild(Insight.Database.Structure.Children{`5})">
            <summary>
            Adds a child reader to this reader.
            </summary>
            <param name="child">The child reader to add.</param>
        </member>
        <member name="P:Insight.Database.Structure.ResultsReader`6.ReturnType">
            <summary>
            Gets the type of objects returned by this reader.
            </summary>
            <returns>The type of objects returned by this reader.</returns>
        </member>
        <member name="T:Insight.Database.Structure.ResultsReader`7">
            <summary>
            Reads a Results structure from a data reader stream.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`7.Default">
            <summary>
            The default reader for this type of result.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`7._listReader">
            <summary>
            The list reader used to read a set of records.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`7._previous">
            <summary>
            Gets the previous reader for reading the results.
            </summary>
            <returns>The previous reader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`7.#ctor">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`7.#ctor(Insight.Database.Structure.IQueryReader{Insight.Database.Results{`0,`1,`2,`3,`4,`5}},Insight.Database.Structure.IRecordReader{`6})">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
            <param name="previous">The reader for the previous data set in the stream.</param>
            <param name="recordReader">The mapping that can read a single record from the stream.</param>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`7.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`7.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`7.Read(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6},System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`7.ReadAsync(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6},System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`7.AddChild(Insight.Database.Structure.Children{`6})">
            <summary>
            Adds a child reader to this reader.
            </summary>
            <param name="child">The child reader to add.</param>
        </member>
        <member name="P:Insight.Database.Structure.ResultsReader`7.ReturnType">
            <summary>
            Gets the type of objects returned by this reader.
            </summary>
            <returns>The type of objects returned by this reader.</returns>
        </member>
        <member name="T:Insight.Database.Structure.ResultsReader`8">
            <summary>
            Reads a Results structure from a data reader stream.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`8.Default">
            <summary>
            The default reader for this type of result.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`8._listReader">
            <summary>
            The list reader used to read a set of records.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`8._previous">
            <summary>
            Gets the previous reader for reading the results.
            </summary>
            <returns>The previous reader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`8.#ctor">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`8.#ctor(Insight.Database.Structure.IQueryReader{Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6}},Insight.Database.Structure.IRecordReader{`7})">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
            <param name="previous">The reader for the previous data set in the stream.</param>
            <param name="recordReader">The mapping that can read a single record from the stream.</param>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`8.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`8.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`8.Read(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6,`7},System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`8.ReadAsync(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6,`7},System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`8.AddChild(Insight.Database.Structure.Children{`7})">
            <summary>
            Adds a child reader to this reader.
            </summary>
            <param name="child">The child reader to add.</param>
        </member>
        <member name="P:Insight.Database.Structure.ResultsReader`8.ReturnType">
            <summary>
            Gets the type of objects returned by this reader.
            </summary>
            <returns>The type of objects returned by this reader.</returns>
        </member>
        <member name="T:Insight.Database.Structure.ResultsReader`9">
            <summary>
            Reads a Results structure from a data reader stream.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`9.Default">
            <summary>
            The default reader for this type of result.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`9._listReader">
            <summary>
            The list reader used to read a set of records.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`9._previous">
            <summary>
            Gets the previous reader for reading the results.
            </summary>
            <returns>The previous reader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`9.#ctor">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`9.#ctor(Insight.Database.Structure.IQueryReader{Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6,`7}},Insight.Database.Structure.IRecordReader{`8})">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
            <param name="previous">The reader for the previous data set in the stream.</param>
            <param name="recordReader">The mapping that can read a single record from the stream.</param>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`9.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`9.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`9.Read(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6,`7,`8},System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`9.ReadAsync(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6,`7,`8},System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`9.AddChild(Insight.Database.Structure.Children{`8})">
            <summary>
            Adds a child reader to this reader.
            </summary>
            <param name="child">The child reader to add.</param>
        </member>
        <member name="P:Insight.Database.Structure.ResultsReader`9.ReturnType">
            <summary>
            Gets the type of objects returned by this reader.
            </summary>
            <returns>The type of objects returned by this reader.</returns>
        </member>
        <member name="T:Insight.Database.Structure.ResultsReader`10">
            <summary>
            Reads a Results structure from a data reader stream.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`10.Default">
            <summary>
            The default reader for this type of result.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`10._listReader">
            <summary>
            The list reader used to read a set of records.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`10._previous">
            <summary>
            Gets the previous reader for reading the results.
            </summary>
            <returns>The previous reader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`10.#ctor">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`10.#ctor(Insight.Database.Structure.IQueryReader{Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6,`7,`8}},Insight.Database.Structure.IRecordReader{`9})">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
            <param name="previous">The reader for the previous data set in the stream.</param>
            <param name="recordReader">The mapping that can read a single record from the stream.</param>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`10.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`10.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`10.Read(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`10.ReadAsync(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`10.AddChild(Insight.Database.Structure.Children{`9})">
            <summary>
            Adds a child reader to this reader.
            </summary>
            <param name="child">The child reader to add.</param>
        </member>
        <member name="P:Insight.Database.Structure.ResultsReader`10.ReturnType">
            <summary>
            Gets the type of objects returned by this reader.
            </summary>
            <returns>The type of objects returned by this reader.</returns>
        </member>
        <member name="T:Insight.Database.Structure.ResultsReader`11">
            <summary>
            Reads a Results structure from a data reader stream.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`11.Default">
            <summary>
            The default reader for this type of result.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`11._listReader">
            <summary>
            The list reader used to read a set of records.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`11._previous">
            <summary>
            Gets the previous reader for reading the results.
            </summary>
            <returns>The previous reader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`11.#ctor">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`11.#ctor(Insight.Database.Structure.IQueryReader{Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}},Insight.Database.Structure.IRecordReader{`10})">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
            <param name="previous">The reader for the previous data set in the stream.</param>
            <param name="recordReader">The mapping that can read a single record from the stream.</param>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`11.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`11.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`11.Read(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10},System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`11.ReadAsync(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10},System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`11.AddChild(Insight.Database.Structure.Children{`10})">
            <summary>
            Adds a child reader to this reader.
            </summary>
            <param name="child">The child reader to add.</param>
        </member>
        <member name="P:Insight.Database.Structure.ResultsReader`11.ReturnType">
            <summary>
            Gets the type of objects returned by this reader.
            </summary>
            <returns>The type of objects returned by this reader.</returns>
        </member>
        <member name="T:Insight.Database.Structure.ResultsReader`12">
            <summary>
            Reads a Results structure from a data reader stream.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`12.Default">
            <summary>
            The default reader for this type of result.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`12._listReader">
            <summary>
            The list reader used to read a set of records.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`12._previous">
            <summary>
            Gets the previous reader for reading the results.
            </summary>
            <returns>The previous reader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`12.#ctor">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`12.#ctor(Insight.Database.Structure.IQueryReader{Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10}},Insight.Database.Structure.IRecordReader{`11})">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
            <param name="previous">The reader for the previous data set in the stream.</param>
            <param name="recordReader">The mapping that can read a single record from the stream.</param>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`12.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`12.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`12.Read(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11},System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`12.ReadAsync(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11},System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`12.AddChild(Insight.Database.Structure.Children{`11})">
            <summary>
            Adds a child reader to this reader.
            </summary>
            <param name="child">The child reader to add.</param>
        </member>
        <member name="P:Insight.Database.Structure.ResultsReader`12.ReturnType">
            <summary>
            Gets the type of objects returned by this reader.
            </summary>
            <returns>The type of objects returned by this reader.</returns>
        </member>
        <member name="T:Insight.Database.Structure.ResultsReader`13">
            <summary>
            Reads a Results structure from a data reader stream.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`13.Default">
            <summary>
            The default reader for this type of result.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`13._listReader">
            <summary>
            The list reader used to read a set of records.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`13._previous">
            <summary>
            Gets the previous reader for reading the results.
            </summary>
            <returns>The previous reader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`13.#ctor">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`13.#ctor(Insight.Database.Structure.IQueryReader{Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11}},Insight.Database.Structure.IRecordReader{`12})">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
            <param name="previous">The reader for the previous data set in the stream.</param>
            <param name="recordReader">The mapping that can read a single record from the stream.</param>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`13.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`13.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`13.Read(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12},System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`13.ReadAsync(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12},System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`13.AddChild(Insight.Database.Structure.Children{`12})">
            <summary>
            Adds a child reader to this reader.
            </summary>
            <param name="child">The child reader to add.</param>
        </member>
        <member name="P:Insight.Database.Structure.ResultsReader`13.ReturnType">
            <summary>
            Gets the type of objects returned by this reader.
            </summary>
            <returns>The type of objects returned by this reader.</returns>
        </member>
        <member name="T:Insight.Database.Structure.ResultsReader`14">
            <summary>
            Reads a Results structure from a data reader stream.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`14.Default">
            <summary>
            The default reader for this type of result.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`14._listReader">
            <summary>
            The list reader used to read a set of records.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`14._previous">
            <summary>
            Gets the previous reader for reading the results.
            </summary>
            <returns>The previous reader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`14.#ctor">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`14.#ctor(Insight.Database.Structure.IQueryReader{Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12}},Insight.Database.Structure.IRecordReader{`13})">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
            <param name="previous">The reader for the previous data set in the stream.</param>
            <param name="recordReader">The mapping that can read a single record from the stream.</param>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`14.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`14.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`14.Read(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13},System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`14.ReadAsync(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13},System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`14.AddChild(Insight.Database.Structure.Children{`13})">
            <summary>
            Adds a child reader to this reader.
            </summary>
            <param name="child">The child reader to add.</param>
        </member>
        <member name="P:Insight.Database.Structure.ResultsReader`14.ReturnType">
            <summary>
            Gets the type of objects returned by this reader.
            </summary>
            <returns>The type of objects returned by this reader.</returns>
        </member>
        <member name="T:Insight.Database.Structure.ResultsReader`15">
            <summary>
            Reads a Results structure from a data reader stream.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`15.Default">
            <summary>
            The default reader for this type of result.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`15._listReader">
            <summary>
            The list reader used to read a set of records.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`15._previous">
            <summary>
            Gets the previous reader for reading the results.
            </summary>
            <returns>The previous reader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`15.#ctor">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`15.#ctor(Insight.Database.Structure.IQueryReader{Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13}},Insight.Database.Structure.IRecordReader{`14})">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
            <param name="previous">The reader for the previous data set in the stream.</param>
            <param name="recordReader">The mapping that can read a single record from the stream.</param>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`15.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`15.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`15.Read(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14},System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`15.ReadAsync(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14},System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`15.AddChild(Insight.Database.Structure.Children{`14})">
            <summary>
            Adds a child reader to this reader.
            </summary>
            <param name="child">The child reader to add.</param>
        </member>
        <member name="P:Insight.Database.Structure.ResultsReader`15.ReturnType">
            <summary>
            Gets the type of objects returned by this reader.
            </summary>
            <returns>The type of objects returned by this reader.</returns>
        </member>
        <member name="T:Insight.Database.Structure.ResultsReader`16">
            <summary>
            Reads a Results structure from a data reader stream.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`16.Default">
            <summary>
            The default reader for this type of result.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`16._listReader">
            <summary>
            The list reader used to read a set of records.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.ResultsReader`16._previous">
            <summary>
            Gets the previous reader for reading the results.
            </summary>
            <returns>The previous reader.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`16.#ctor">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`16.#ctor(Insight.Database.Structure.IQueryReader{Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14}},Insight.Database.Structure.IRecordReader{`15})">
            <summary>
            Initializes a new instance of the ResultsReader class.
            </summary>
            <param name="previous">The reader for the previous data set in the stream.</param>
            <param name="recordReader">The mapping that can read a single record from the stream.</param>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`16.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`16.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`16.Read(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15},System.Data.IDataReader)">
            <summary>
            Reads the results from the data stream into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`16.ReadAsync(System.Data.IDbCommand,Insight.Database.Results{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15},System.Data.IDataReader,Insight.Database.CancellationToken)">
            <summary>
            Reads the results from the data stream asynchronously into a specific object.
            </summary>
            <param name="command">The command that was executed.</param>
            <param name="results">The results to read into.</param>
            <param name="reader">The reader to read from.</param>
            <param name="cancellationToken">A token that can be used to cancel the operation.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Insight.Database.Structure.ResultsReader`16.AddChild(Insight.Database.Structure.Children{`15})">
            <summary>
            Adds a child reader to this reader.
            </summary>
            <param name="child">The child reader to add.</param>
        </member>
        <member name="P:Insight.Database.Structure.ResultsReader`16.ReturnType">
            <summary>
            Gets the type of objects returned by this reader.
            </summary>
            <returns>The type of objects returned by this reader.</returns>
        </member>
        <member name="T:Insight.Database.RecordsetAttribute">
            <summary>
            Defines the structure that an interface method returns from a recordset.
            Each instance defines a single or one-to-one relationship.
            Adding multiple instances to a method defines a Results output or a parent-child relationship.
            </summary>
        </member>
        <member name="M:Insight.Database.RecordsetAttribute.#ctor">
            <summary>
            Initializes a new instance of the RecordsetAttribute class.
            </summary>
        </member>
        <member name="M:Insight.Database.RecordsetAttribute.#ctor(System.Type[])">
            <summary>
            Initializes a new instance of the RecordsetAttribute class.
            </summary>
            <param name="types">The types of the classes in the record. This defines a OneToOne relationship.</param>
        </member>
        <member name="M:Insight.Database.RecordsetAttribute.#ctor(System.Int32,System.Type[])">
            <summary>
            Initializes a new instance of the RecordsetAttribute class.
            </summary>
            <param name="index">The index of the recordset in the query results.</param>
            <param name="types">The types of the classes in the record. This defines a OneToOne relationship.</param>
        </member>
        <member name="P:Insight.Database.RecordsetAttribute.Types">
            <summary>
            Gets the types of the classes in the record. This defines a OneToOne relationship.
            </summary>
        </member>
        <member name="P:Insight.Database.RecordsetAttribute.Index">
            <summary>
            Gets the index of the recordset in the query results.
            </summary>
        </member>
        <member name="P:Insight.Database.RecordsetAttribute.IsChild">
            <summary>
            Gets or sets a value indicating whether the recordset is a child relationship.
            </summary>
        </member>
        <member name="P:Insight.Database.RecordsetAttribute.Id">
            <summary>
            Gets or sets the name of the parent ID field in the parent-child relationship.
            </summary>
        </member>
        <member name="P:Insight.Database.RecordsetAttribute.Into">
            <summary>
            Gets or sets the name of the List field to insert the child list into for the parent-child relationship.
            </summary>
        </member>
        <member name="P:Insight.Database.RecordsetAttribute.GroupBy">
            <summary>
            Gets or sets the name of the child ID field in the parent-child relationship.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.SingleChildMapper`2">
            <summary>
            Maps a child into a single parent.
            </summary>
            <typeparam name="TParent">The type of the parent object.</typeparam>
            <typeparam name="TChild">The type of the child object.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.SingleChildMapper`2._defaultListSetter">
            <summary>
            The default action that sets the children into the proper parent.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.SingleChildMapper`2._listSetter">
            <summary>
            The action that sets the children into the proper parent.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.SingleChildMapper`2.#ctor(System.Action{`0,System.Collections.Generic.List{`1}})">
            <summary>
            Initializes a new instance of the SingleChildMapper class.
            </summary>
            <param name="listSetter">The function that can be used to set the list into the parent.</param>
        </member>
        <member name="M:Insight.Database.Structure.SingleChildMapper`2.MapChildren(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Maps the children into the parent object.
            </summary>
            <param name="roots">The list of parents. This must have a single item.</param>
            <param name="children">The list of children.</param>
        </member>
        <member name="M:Insight.Database.Structure.SingleChildMapper`2.GetListSetter">
            <summary>
            Gets the list setter for the class, looking for an IList that matches the type.
            </summary>
            <returns>An accessor for the ID field.</returns>
        </member>
        <member name="T:Insight.Database.Structure.SingleChildren`2">
            <summary>
            Knows how to read a list of children into a parent object.
            </summary>
            <typeparam name="TParent">The type of the parent object.</typeparam>
            <typeparam name="TChild">The type of the child object.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.SingleChildren`2._recordReader">
            <summary>
            Can read the child records from the stream.
            </summary>
        </member>
        <member name="F:Insight.Database.Structure.SingleChildren`2._mapper">
            <summary>
            Can map the children into the parent in the right place.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.SingleChildren`2.#ctor(Insight.Database.Structure.IRecordReader{`1},Insight.Database.Structure.SingleChildMapper{`0,`1})">
            <summary>
            Initializes a new instance of the SingleChildren class.
            </summary>
            <param name="recordReader">The recordReader that can read the children from the data stream.</param>
            <param name="mapper">The mapper that puts the children into the parent.</param>
        </member>
        <member name="M:Insight.Database.Structure.SingleChildren`2.Read(System.Collections.Generic.IEnumerable{`0},System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.SingleChildren`2.ReadAsync(System.Collections.Generic.IEnumerable{`0},System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Structure.SingleReader`1">
            <summary>
            Reads a single record from a data stream.
            </summary>
            <typeparam name="T">The type of object to read.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.SingleReader`1.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.SingleReader`1.#ctor">
            <summary>
            Initializes a new instance of the SingleReader class.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.SingleReader`1.#ctor(Insight.Database.Structure.IRecordReader{`0})">
            <summary>
            Initializes a new instance of the SingleReader class.
            </summary>
            <param name="mapping">The mapping to use to read objects from each record.</param>
        </member>
        <member name="M:Insight.Database.Structure.SingleReader`1.Read(System.Data.IDbCommand,System.Data.IDataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.SingleReader`1.ReadAsync(System.Data.IDbCommand,System.Data.IDataReader,Insight.Database.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Insight.Database.Structure.SingleReader`1.AddChild(Insight.Database.Structure.Children{`0})">
            <summary>
            Adds a child reader to this reader.
            </summary>
            <param name="child">The child reader to add.</param>
            <returns>A list reader that also reads the specified child.</returns>
        </member>
        <member name="P:Insight.Database.Structure.SingleReader`1.ReturnType">
            <inheritdoc/>
        </member>
        <member name="T:Insight.Database.Structure.SingleReader`2">
            <summary>
            Reads a single record from a data stream.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.SingleReader`2.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.SingleReader`2.#ctor">
            <summary>
            Initializes a new instance of the SingleReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.SingleReader`3">
            <summary>
            Reads a single record from a data stream.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.SingleReader`3.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.SingleReader`3.#ctor">
            <summary>
            Initializes a new instance of the SingleReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.SingleReader`4">
            <summary>
            Reads a single record from a data stream.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.SingleReader`4.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.SingleReader`4.#ctor">
            <summary>
            Initializes a new instance of the SingleReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.SingleReader`5">
            <summary>
            Reads a single record from a data stream.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.SingleReader`5.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.SingleReader`5.#ctor">
            <summary>
            Initializes a new instance of the SingleReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.SingleReader`6">
            <summary>
            Reads a single record from a data stream.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.SingleReader`6.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.SingleReader`6.#ctor">
            <summary>
            Initializes a new instance of the SingleReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.SingleReader`7">
            <summary>
            Reads a single record from a data stream.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.SingleReader`7.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.SingleReader`7.#ctor">
            <summary>
            Initializes a new instance of the SingleReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.SingleReader`8">
            <summary>
            Reads a single record from a data stream.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.SingleReader`8.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.SingleReader`8.#ctor">
            <summary>
            Initializes a new instance of the SingleReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.SingleReader`9">
            <summary>
            Reads a single record from a data stream.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.SingleReader`9.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.SingleReader`9.#ctor">
            <summary>
            Initializes a new instance of the SingleReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.SingleReader`10">
            <summary>
            Reads a single record from a data stream.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.SingleReader`10.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.SingleReader`10.#ctor">
            <summary>
            Initializes a new instance of the SingleReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.SingleReader`11">
            <summary>
            Reads a single record from a data stream.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.SingleReader`11.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.SingleReader`11.#ctor">
            <summary>
            Initializes a new instance of the SingleReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.SingleReader`12">
            <summary>
            Reads a single record from a data stream.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.SingleReader`12.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.SingleReader`12.#ctor">
            <summary>
            Initializes a new instance of the SingleReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.SingleReader`13">
            <summary>
            Reads a single record from a data stream.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.SingleReader`13.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.SingleReader`13.#ctor">
            <summary>
            Initializes a new instance of the SingleReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.SingleReader`14">
            <summary>
            Reads a single record from a data stream.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.SingleReader`14.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.SingleReader`14.#ctor">
            <summary>
            Initializes a new instance of the SingleReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.SingleReader`15">
            <summary>
            Reads a single record from a data stream.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.SingleReader`15.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.SingleReader`15.#ctor">
            <summary>
            Initializes a new instance of the SingleReader class.
            </summary>
        </member>
        <member name="T:Insight.Database.Structure.SingleReader`16">
            <summary>
            Reads a single record from a data stream.
            </summary>
            <typeparam name="T1">The type of the data in the first subobject.</typeparam>
            <typeparam name="T2">The type of the data in the second subobject.</typeparam>
            <typeparam name="T3">The type of the data in the third subobject.</typeparam>
            <typeparam name="T4">The type of the data in the fourth subobject.</typeparam>
            <typeparam name="T5">The type of the data in the fifth subobject.</typeparam>
            <typeparam name="T6">The type of the data in the sixth subobject.</typeparam>
            <typeparam name="T7">The type of the data in the seventh subobject.</typeparam>
            <typeparam name="T8">The type of the data in the eighth subobject.</typeparam>
            <typeparam name="T9">The type of the data in the nineth subobject.</typeparam>
            <typeparam name="T10">The type of the data in the tenth subobject.</typeparam>
            <typeparam name="T11">The type of the data in the eleventh subobject.</typeparam>
            <typeparam name="T12">The type of the data in the twelfth subobject.</typeparam>
            <typeparam name="T13">The type of the data in the thirteenth subobject.</typeparam>
            <typeparam name="T14">The type of the data in the fourteenth subobject.</typeparam>
            <typeparam name="T15">The type of the data in the fifteenth subobject.</typeparam>
            <typeparam name="T16">The type of the data in the sixteenth subobject.</typeparam>
        </member>
        <member name="F:Insight.Database.Structure.SingleReader`16.Default">
            <summary>
            The default reader to read a list of type T.
            </summary>
        </member>
        <member name="M:Insight.Database.Structure.SingleReader`16.#ctor">
            <summary>
            Initializes a new instance of the SingleReader class.
            </summary>
        </member>
    </members>
</doc>
